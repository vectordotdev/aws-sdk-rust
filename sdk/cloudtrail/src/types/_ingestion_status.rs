// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A table showing information about the most recent successful and failed attempts to ingest events.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IngestionStatus {
    /// <p>The time stamp of the most recent successful ingestion of events for the channel.</p>
    pub latest_ingestion_success_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The event ID of the most recent successful ingestion of events.</p>
    pub latest_ingestion_success_event_id: ::std::option::Option<::std::string::String>,
    /// <p>The error code for the most recent failure to ingest events.</p>
    pub latest_ingestion_error_code: ::std::option::Option<::std::string::String>,
    /// <p>The time stamp of the most recent attempt to ingest events on the channel.</p>
    pub latest_ingestion_attempt_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The event ID of the most recent attempt to ingest events.</p>
    pub latest_ingestion_attempt_event_id: ::std::option::Option<::std::string::String>,
}
impl IngestionStatus {
    /// <p>The time stamp of the most recent successful ingestion of events for the channel.</p>
    pub fn latest_ingestion_success_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.latest_ingestion_success_time.as_ref()
    }
    /// <p>The event ID of the most recent successful ingestion of events.</p>
    pub fn latest_ingestion_success_event_id(&self) -> ::std::option::Option<&str> {
        self.latest_ingestion_success_event_id.as_deref()
    }
    /// <p>The error code for the most recent failure to ingest events.</p>
    pub fn latest_ingestion_error_code(&self) -> ::std::option::Option<&str> {
        self.latest_ingestion_error_code.as_deref()
    }
    /// <p>The time stamp of the most recent attempt to ingest events on the channel.</p>
    pub fn latest_ingestion_attempt_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.latest_ingestion_attempt_time.as_ref()
    }
    /// <p>The event ID of the most recent attempt to ingest events.</p>
    pub fn latest_ingestion_attempt_event_id(&self) -> ::std::option::Option<&str> {
        self.latest_ingestion_attempt_event_id.as_deref()
    }
}
impl IngestionStatus {
    /// Creates a new builder-style object to manufacture [`IngestionStatus`](crate::types::IngestionStatus).
    pub fn builder() -> crate::types::builders::IngestionStatusBuilder {
        crate::types::builders::IngestionStatusBuilder::default()
    }
}

/// A builder for [`IngestionStatus`](crate::types::IngestionStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IngestionStatusBuilder {
    pub(crate) latest_ingestion_success_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) latest_ingestion_success_event_id: ::std::option::Option<::std::string::String>,
    pub(crate) latest_ingestion_error_code: ::std::option::Option<::std::string::String>,
    pub(crate) latest_ingestion_attempt_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) latest_ingestion_attempt_event_id: ::std::option::Option<::std::string::String>,
}
impl IngestionStatusBuilder {
    /// <p>The time stamp of the most recent successful ingestion of events for the channel.</p>
    pub fn latest_ingestion_success_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.latest_ingestion_success_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time stamp of the most recent successful ingestion of events for the channel.</p>
    pub fn set_latest_ingestion_success_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.latest_ingestion_success_time = input;
        self
    }
    /// <p>The time stamp of the most recent successful ingestion of events for the channel.</p>
    pub fn get_latest_ingestion_success_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.latest_ingestion_success_time
    }
    /// <p>The event ID of the most recent successful ingestion of events.</p>
    pub fn latest_ingestion_success_event_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.latest_ingestion_success_event_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The event ID of the most recent successful ingestion of events.</p>
    pub fn set_latest_ingestion_success_event_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.latest_ingestion_success_event_id = input;
        self
    }
    /// <p>The event ID of the most recent successful ingestion of events.</p>
    pub fn get_latest_ingestion_success_event_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.latest_ingestion_success_event_id
    }
    /// <p>The error code for the most recent failure to ingest events.</p>
    pub fn latest_ingestion_error_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.latest_ingestion_error_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error code for the most recent failure to ingest events.</p>
    pub fn set_latest_ingestion_error_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.latest_ingestion_error_code = input;
        self
    }
    /// <p>The error code for the most recent failure to ingest events.</p>
    pub fn get_latest_ingestion_error_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.latest_ingestion_error_code
    }
    /// <p>The time stamp of the most recent attempt to ingest events on the channel.</p>
    pub fn latest_ingestion_attempt_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.latest_ingestion_attempt_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time stamp of the most recent attempt to ingest events on the channel.</p>
    pub fn set_latest_ingestion_attempt_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.latest_ingestion_attempt_time = input;
        self
    }
    /// <p>The time stamp of the most recent attempt to ingest events on the channel.</p>
    pub fn get_latest_ingestion_attempt_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.latest_ingestion_attempt_time
    }
    /// <p>The event ID of the most recent attempt to ingest events.</p>
    pub fn latest_ingestion_attempt_event_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.latest_ingestion_attempt_event_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The event ID of the most recent attempt to ingest events.</p>
    pub fn set_latest_ingestion_attempt_event_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.latest_ingestion_attempt_event_id = input;
        self
    }
    /// <p>The event ID of the most recent attempt to ingest events.</p>
    pub fn get_latest_ingestion_attempt_event_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.latest_ingestion_attempt_event_id
    }
    /// Consumes the builder and constructs a [`IngestionStatus`](crate::types::IngestionStatus).
    pub fn build(self) -> crate::types::IngestionStatus {
        crate::types::IngestionStatus {
            latest_ingestion_success_time: self.latest_ingestion_success_time,
            latest_ingestion_success_event_id: self.latest_ingestion_success_event_id,
            latest_ingestion_error_code: self.latest_ingestion_error_code,
            latest_ingestion_attempt_time: self.latest_ingestion_attempt_time,
            latest_ingestion_attempt_event_id: self.latest_ingestion_attempt_event_id,
        }
    }
}
