// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A ProfileObject in a list of ProfileObjects.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListProfileObjectsItem {
    /// <p>Specifies the kind of object being added to a profile, such as "Salesforce-Account."</p>
    pub object_type_name: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the ProfileObject generated by the service.</p>
    pub profile_object_unique_key: ::std::option::Option<::std::string::String>,
    /// <p>A JSON representation of a ProfileObject that belongs to a profile.</p>
    pub object: ::std::option::Option<::std::string::String>,
}
impl ListProfileObjectsItem {
    /// <p>Specifies the kind of object being added to a profile, such as "Salesforce-Account."</p>
    pub fn object_type_name(&self) -> ::std::option::Option<&str> {
        self.object_type_name.as_deref()
    }
    /// <p>The unique identifier of the ProfileObject generated by the service.</p>
    pub fn profile_object_unique_key(&self) -> ::std::option::Option<&str> {
        self.profile_object_unique_key.as_deref()
    }
    /// <p>A JSON representation of a ProfileObject that belongs to a profile.</p>
    pub fn object(&self) -> ::std::option::Option<&str> {
        self.object.as_deref()
    }
}
impl ListProfileObjectsItem {
    /// Creates a new builder-style object to manufacture [`ListProfileObjectsItem`](crate::types::ListProfileObjectsItem).
    pub fn builder() -> crate::types::builders::ListProfileObjectsItemBuilder {
        crate::types::builders::ListProfileObjectsItemBuilder::default()
    }
}

/// A builder for [`ListProfileObjectsItem`](crate::types::ListProfileObjectsItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListProfileObjectsItemBuilder {
    pub(crate) object_type_name: ::std::option::Option<::std::string::String>,
    pub(crate) profile_object_unique_key: ::std::option::Option<::std::string::String>,
    pub(crate) object: ::std::option::Option<::std::string::String>,
}
impl ListProfileObjectsItemBuilder {
    /// <p>Specifies the kind of object being added to a profile, such as "Salesforce-Account."</p>
    pub fn object_type_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.object_type_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the kind of object being added to a profile, such as "Salesforce-Account."</p>
    pub fn set_object_type_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.object_type_name = input;
        self
    }
    /// <p>Specifies the kind of object being added to a profile, such as "Salesforce-Account."</p>
    pub fn get_object_type_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.object_type_name
    }
    /// <p>The unique identifier of the ProfileObject generated by the service.</p>
    pub fn profile_object_unique_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.profile_object_unique_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the ProfileObject generated by the service.</p>
    pub fn set_profile_object_unique_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.profile_object_unique_key = input;
        self
    }
    /// <p>The unique identifier of the ProfileObject generated by the service.</p>
    pub fn get_profile_object_unique_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.profile_object_unique_key
    }
    /// <p>A JSON representation of a ProfileObject that belongs to a profile.</p>
    pub fn object(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.object = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A JSON representation of a ProfileObject that belongs to a profile.</p>
    pub fn set_object(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.object = input;
        self
    }
    /// <p>A JSON representation of a ProfileObject that belongs to a profile.</p>
    pub fn get_object(&self) -> &::std::option::Option<::std::string::String> {
        &self.object
    }
    /// Consumes the builder and constructs a [`ListProfileObjectsItem`](crate::types::ListProfileObjectsItem).
    pub fn build(self) -> crate::types::ListProfileObjectsItem {
        crate::types::ListProfileObjectsItem {
            object_type_name: self.object_type_name,
            profile_object_unique_key: self.profile_object_unique_key,
            object: self.object,
        }
    }
}
