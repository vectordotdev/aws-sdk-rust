// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A container for information about access control for replicas.</p> <note>
/// <p>This is not supported by Amazon S3 on Outposts buckets.</p>
/// </note>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AccessControlTranslation {
    /// <p>Specifies the replica ownership.</p>
    pub owner: ::std::option::Option<crate::types::OwnerOverride>,
}
impl AccessControlTranslation {
    /// <p>Specifies the replica ownership.</p>
    pub fn owner(&self) -> ::std::option::Option<&crate::types::OwnerOverride> {
        self.owner.as_ref()
    }
}
impl AccessControlTranslation {
    /// Creates a new builder-style object to manufacture [`AccessControlTranslation`](crate::types::AccessControlTranslation).
    pub fn builder() -> crate::types::builders::AccessControlTranslationBuilder {
        crate::types::builders::AccessControlTranslationBuilder::default()
    }
}

/// A builder for [`AccessControlTranslation`](crate::types::AccessControlTranslation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AccessControlTranslationBuilder {
    pub(crate) owner: ::std::option::Option<crate::types::OwnerOverride>,
}
impl AccessControlTranslationBuilder {
    /// <p>Specifies the replica ownership.</p>
    pub fn owner(mut self, input: crate::types::OwnerOverride) -> Self {
        self.owner = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the replica ownership.</p>
    pub fn set_owner(mut self, input: ::std::option::Option<crate::types::OwnerOverride>) -> Self {
        self.owner = input;
        self
    }
    /// <p>Specifies the replica ownership.</p>
    pub fn get_owner(&self) -> &::std::option::Option<crate::types::OwnerOverride> {
        &self.owner
    }
    /// Consumes the builder and constructs a [`AccessControlTranslation`](crate::types::AccessControlTranslation).
    pub fn build(self) -> crate::types::AccessControlTranslation {
        crate::types::AccessControlTranslation { owner: self.owner }
    }
}
