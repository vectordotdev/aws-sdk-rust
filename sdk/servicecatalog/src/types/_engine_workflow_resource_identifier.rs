// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The ID for the provisioned product resources that are part of a resource group. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EngineWorkflowResourceIdentifier {
    /// <p> The unique key-value pair for a tag that identifies provisioned product resources. </p>
    pub unique_tag: ::std::option::Option<crate::types::UniqueTagResourceIdentifier>,
}
impl EngineWorkflowResourceIdentifier {
    /// <p> The unique key-value pair for a tag that identifies provisioned product resources. </p>
    pub fn unique_tag(&self) -> ::std::option::Option<&crate::types::UniqueTagResourceIdentifier> {
        self.unique_tag.as_ref()
    }
}
impl EngineWorkflowResourceIdentifier {
    /// Creates a new builder-style object to manufacture [`EngineWorkflowResourceIdentifier`](crate::types::EngineWorkflowResourceIdentifier).
    pub fn builder() -> crate::types::builders::EngineWorkflowResourceIdentifierBuilder {
        crate::types::builders::EngineWorkflowResourceIdentifierBuilder::default()
    }
}

/// A builder for [`EngineWorkflowResourceIdentifier`](crate::types::EngineWorkflowResourceIdentifier).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EngineWorkflowResourceIdentifierBuilder {
    pub(crate) unique_tag: ::std::option::Option<crate::types::UniqueTagResourceIdentifier>,
}
impl EngineWorkflowResourceIdentifierBuilder {
    /// <p> The unique key-value pair for a tag that identifies provisioned product resources. </p>
    pub fn unique_tag(mut self, input: crate::types::UniqueTagResourceIdentifier) -> Self {
        self.unique_tag = ::std::option::Option::Some(input);
        self
    }
    /// <p> The unique key-value pair for a tag that identifies provisioned product resources. </p>
    pub fn set_unique_tag(mut self, input: ::std::option::Option<crate::types::UniqueTagResourceIdentifier>) -> Self {
        self.unique_tag = input;
        self
    }
    /// <p> The unique key-value pair for a tag that identifies provisioned product resources. </p>
    pub fn get_unique_tag(&self) -> &::std::option::Option<crate::types::UniqueTagResourceIdentifier> {
        &self.unique_tag
    }
    /// Consumes the builder and constructs a [`EngineWorkflowResourceIdentifier`](crate::types::EngineWorkflowResourceIdentifier).
    pub fn build(self) -> crate::types::EngineWorkflowResourceIdentifier {
        crate::types::EngineWorkflowResourceIdentifier { unique_tag: self.unique_tag }
    }
}
