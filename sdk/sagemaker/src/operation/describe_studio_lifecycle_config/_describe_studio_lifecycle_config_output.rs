// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DescribeStudioLifecycleConfigOutput {
    /// <p>The ARN of the Lifecycle Configuration to describe.</p>
    pub studio_lifecycle_config_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the Studio Lifecycle Configuration that is described.</p>
    pub studio_lifecycle_config_name: ::std::option::Option<::std::string::String>,
    /// <p>The creation time of the Studio Lifecycle Configuration.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>This value is equivalent to CreationTime because Studio Lifecycle Configurations are immutable.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The content of your Studio Lifecycle Configuration script.</p>
    pub studio_lifecycle_config_content: ::std::option::Option<::std::string::String>,
    /// <p>The App type that the Lifecycle Configuration is attached to.</p>
    pub studio_lifecycle_config_app_type: ::std::option::Option<crate::types::StudioLifecycleConfigAppType>,
    _request_id: Option<String>,
}
impl DescribeStudioLifecycleConfigOutput {
    /// <p>The ARN of the Lifecycle Configuration to describe.</p>
    pub fn studio_lifecycle_config_arn(&self) -> ::std::option::Option<&str> {
        self.studio_lifecycle_config_arn.as_deref()
    }
    /// <p>The name of the Studio Lifecycle Configuration that is described.</p>
    pub fn studio_lifecycle_config_name(&self) -> ::std::option::Option<&str> {
        self.studio_lifecycle_config_name.as_deref()
    }
    /// <p>The creation time of the Studio Lifecycle Configuration.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>This value is equivalent to CreationTime because Studio Lifecycle Configurations are immutable.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>The content of your Studio Lifecycle Configuration script.</p>
    pub fn studio_lifecycle_config_content(&self) -> ::std::option::Option<&str> {
        self.studio_lifecycle_config_content.as_deref()
    }
    /// <p>The App type that the Lifecycle Configuration is attached to.</p>
    pub fn studio_lifecycle_config_app_type(&self) -> ::std::option::Option<&crate::types::StudioLifecycleConfigAppType> {
        self.studio_lifecycle_config_app_type.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for DescribeStudioLifecycleConfigOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DescribeStudioLifecycleConfigOutput {
    /// Creates a new builder-style object to manufacture [`DescribeStudioLifecycleConfigOutput`](crate::operation::describe_studio_lifecycle_config::DescribeStudioLifecycleConfigOutput).
    pub fn builder() -> crate::operation::describe_studio_lifecycle_config::builders::DescribeStudioLifecycleConfigOutputBuilder {
        crate::operation::describe_studio_lifecycle_config::builders::DescribeStudioLifecycleConfigOutputBuilder::default()
    }
}

/// A builder for [`DescribeStudioLifecycleConfigOutput`](crate::operation::describe_studio_lifecycle_config::DescribeStudioLifecycleConfigOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DescribeStudioLifecycleConfigOutputBuilder {
    pub(crate) studio_lifecycle_config_arn: ::std::option::Option<::std::string::String>,
    pub(crate) studio_lifecycle_config_name: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) studio_lifecycle_config_content: ::std::option::Option<::std::string::String>,
    pub(crate) studio_lifecycle_config_app_type: ::std::option::Option<crate::types::StudioLifecycleConfigAppType>,
    _request_id: Option<String>,
}
impl DescribeStudioLifecycleConfigOutputBuilder {
    /// <p>The ARN of the Lifecycle Configuration to describe.</p>
    pub fn studio_lifecycle_config_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.studio_lifecycle_config_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the Lifecycle Configuration to describe.</p>
    pub fn set_studio_lifecycle_config_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.studio_lifecycle_config_arn = input;
        self
    }
    /// <p>The ARN of the Lifecycle Configuration to describe.</p>
    pub fn get_studio_lifecycle_config_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.studio_lifecycle_config_arn
    }
    /// <p>The name of the Studio Lifecycle Configuration that is described.</p>
    pub fn studio_lifecycle_config_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.studio_lifecycle_config_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Studio Lifecycle Configuration that is described.</p>
    pub fn set_studio_lifecycle_config_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.studio_lifecycle_config_name = input;
        self
    }
    /// <p>The name of the Studio Lifecycle Configuration that is described.</p>
    pub fn get_studio_lifecycle_config_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.studio_lifecycle_config_name
    }
    /// <p>The creation time of the Studio Lifecycle Configuration.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation time of the Studio Lifecycle Configuration.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The creation time of the Studio Lifecycle Configuration.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>This value is equivalent to CreationTime because Studio Lifecycle Configurations are immutable.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>This value is equivalent to CreationTime because Studio Lifecycle Configurations are immutable.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>This value is equivalent to CreationTime because Studio Lifecycle Configurations are immutable.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>The content of your Studio Lifecycle Configuration script.</p>
    pub fn studio_lifecycle_config_content(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.studio_lifecycle_config_content = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The content of your Studio Lifecycle Configuration script.</p>
    pub fn set_studio_lifecycle_config_content(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.studio_lifecycle_config_content = input;
        self
    }
    /// <p>The content of your Studio Lifecycle Configuration script.</p>
    pub fn get_studio_lifecycle_config_content(&self) -> &::std::option::Option<::std::string::String> {
        &self.studio_lifecycle_config_content
    }
    /// <p>The App type that the Lifecycle Configuration is attached to.</p>
    pub fn studio_lifecycle_config_app_type(mut self, input: crate::types::StudioLifecycleConfigAppType) -> Self {
        self.studio_lifecycle_config_app_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The App type that the Lifecycle Configuration is attached to.</p>
    pub fn set_studio_lifecycle_config_app_type(mut self, input: ::std::option::Option<crate::types::StudioLifecycleConfigAppType>) -> Self {
        self.studio_lifecycle_config_app_type = input;
        self
    }
    /// <p>The App type that the Lifecycle Configuration is attached to.</p>
    pub fn get_studio_lifecycle_config_app_type(&self) -> &::std::option::Option<crate::types::StudioLifecycleConfigAppType> {
        &self.studio_lifecycle_config_app_type
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DescribeStudioLifecycleConfigOutput`](crate::operation::describe_studio_lifecycle_config::DescribeStudioLifecycleConfigOutput).
    pub fn build(self) -> crate::operation::describe_studio_lifecycle_config::DescribeStudioLifecycleConfigOutput {
        crate::operation::describe_studio_lifecycle_config::DescribeStudioLifecycleConfigOutput {
            studio_lifecycle_config_arn: self.studio_lifecycle_config_arn,
            studio_lifecycle_config_name: self.studio_lifecycle_config_name,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
            studio_lifecycle_config_content: self.studio_lifecycle_config_content,
            studio_lifecycle_config_app_type: self.studio_lifecycle_config_app_type,
            _request_id: self._request_id,
        }
    }
}
