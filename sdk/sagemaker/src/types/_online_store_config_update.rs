// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Updates the feature group online store configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OnlineStoreConfigUpdate {
    /// <p>Time to live duration, where the record is hard deleted after the expiration time is reached; <code>ExpiresAt</code> = <code>EventTime</code> + <code>TtlDuration</code>. For information on HardDelete, see the <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html">DeleteRecord</a> API in the Amazon SageMaker API Reference guide.</p>
    pub ttl_duration: ::std::option::Option<crate::types::TtlDuration>,
}
impl OnlineStoreConfigUpdate {
    /// <p>Time to live duration, where the record is hard deleted after the expiration time is reached; <code>ExpiresAt</code> = <code>EventTime</code> + <code>TtlDuration</code>. For information on HardDelete, see the <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html">DeleteRecord</a> API in the Amazon SageMaker API Reference guide.</p>
    pub fn ttl_duration(&self) -> ::std::option::Option<&crate::types::TtlDuration> {
        self.ttl_duration.as_ref()
    }
}
impl OnlineStoreConfigUpdate {
    /// Creates a new builder-style object to manufacture [`OnlineStoreConfigUpdate`](crate::types::OnlineStoreConfigUpdate).
    pub fn builder() -> crate::types::builders::OnlineStoreConfigUpdateBuilder {
        crate::types::builders::OnlineStoreConfigUpdateBuilder::default()
    }
}

/// A builder for [`OnlineStoreConfigUpdate`](crate::types::OnlineStoreConfigUpdate).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OnlineStoreConfigUpdateBuilder {
    pub(crate) ttl_duration: ::std::option::Option<crate::types::TtlDuration>,
}
impl OnlineStoreConfigUpdateBuilder {
    /// <p>Time to live duration, where the record is hard deleted after the expiration time is reached; <code>ExpiresAt</code> = <code>EventTime</code> + <code>TtlDuration</code>. For information on HardDelete, see the <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html">DeleteRecord</a> API in the Amazon SageMaker API Reference guide.</p>
    pub fn ttl_duration(mut self, input: crate::types::TtlDuration) -> Self {
        self.ttl_duration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Time to live duration, where the record is hard deleted after the expiration time is reached; <code>ExpiresAt</code> = <code>EventTime</code> + <code>TtlDuration</code>. For information on HardDelete, see the <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html">DeleteRecord</a> API in the Amazon SageMaker API Reference guide.</p>
    pub fn set_ttl_duration(mut self, input: ::std::option::Option<crate::types::TtlDuration>) -> Self {
        self.ttl_duration = input;
        self
    }
    /// <p>Time to live duration, where the record is hard deleted after the expiration time is reached; <code>ExpiresAt</code> = <code>EventTime</code> + <code>TtlDuration</code>. For information on HardDelete, see the <a href="https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_feature_store_DeleteRecord.html">DeleteRecord</a> API in the Amazon SageMaker API Reference guide.</p>
    pub fn get_ttl_duration(&self) -> &::std::option::Option<crate::types::TtlDuration> {
        &self.ttl_duration
    }
    /// Consumes the builder and constructs a [`OnlineStoreConfigUpdate`](crate::types::OnlineStoreConfigUpdate).
    pub fn build(self) -> crate::types::OnlineStoreConfigUpdate {
        crate::types::OnlineStoreConfigUpdate {
            ttl_duration: self.ttl_duration,
        }
    }
}
