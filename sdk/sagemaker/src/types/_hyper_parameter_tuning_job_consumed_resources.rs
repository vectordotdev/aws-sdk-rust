// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The total resources consumed by your hyperparameter tuning job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HyperParameterTuningJobConsumedResources {
    /// <p>The wall clock runtime in seconds used by your hyperparameter tuning job.</p>
    pub runtime_in_seconds: i32,
}
impl HyperParameterTuningJobConsumedResources {
    /// <p>The wall clock runtime in seconds used by your hyperparameter tuning job.</p>
    pub fn runtime_in_seconds(&self) -> i32 {
        self.runtime_in_seconds
    }
}
impl HyperParameterTuningJobConsumedResources {
    /// Creates a new builder-style object to manufacture [`HyperParameterTuningJobConsumedResources`](crate::types::HyperParameterTuningJobConsumedResources).
    pub fn builder() -> crate::types::builders::HyperParameterTuningJobConsumedResourcesBuilder {
        crate::types::builders::HyperParameterTuningJobConsumedResourcesBuilder::default()
    }
}

/// A builder for [`HyperParameterTuningJobConsumedResources`](crate::types::HyperParameterTuningJobConsumedResources).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct HyperParameterTuningJobConsumedResourcesBuilder {
    pub(crate) runtime_in_seconds: ::std::option::Option<i32>,
}
impl HyperParameterTuningJobConsumedResourcesBuilder {
    /// <p>The wall clock runtime in seconds used by your hyperparameter tuning job.</p>
    pub fn runtime_in_seconds(mut self, input: i32) -> Self {
        self.runtime_in_seconds = ::std::option::Option::Some(input);
        self
    }
    /// <p>The wall clock runtime in seconds used by your hyperparameter tuning job.</p>
    pub fn set_runtime_in_seconds(mut self, input: ::std::option::Option<i32>) -> Self {
        self.runtime_in_seconds = input;
        self
    }
    /// <p>The wall clock runtime in seconds used by your hyperparameter tuning job.</p>
    pub fn get_runtime_in_seconds(&self) -> &::std::option::Option<i32> {
        &self.runtime_in_seconds
    }
    /// Consumes the builder and constructs a [`HyperParameterTuningJobConsumedResources`](crate::types::HyperParameterTuningJobConsumedResources).
    pub fn build(self) -> crate::types::HyperParameterTuningJobConsumedResources {
        crate::types::HyperParameterTuningJobConsumedResources {
            runtime_in_seconds: self.runtime_in_seconds.unwrap_or_default(),
        }
    }
}
