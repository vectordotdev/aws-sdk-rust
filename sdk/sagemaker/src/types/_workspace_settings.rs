// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The workspace settings for the SageMaker Canvas application.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WorkspaceSettings {
    /// <p>The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.</p>
    pub s3_artifact_path: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.</p>
    pub s3_kms_key_id: ::std::option::Option<::std::string::String>,
}
impl WorkspaceSettings {
    /// <p>The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.</p>
    pub fn s3_artifact_path(&self) -> ::std::option::Option<&str> {
        self.s3_artifact_path.as_deref()
    }
    /// <p>The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.</p>
    pub fn s3_kms_key_id(&self) -> ::std::option::Option<&str> {
        self.s3_kms_key_id.as_deref()
    }
}
impl WorkspaceSettings {
    /// Creates a new builder-style object to manufacture [`WorkspaceSettings`](crate::types::WorkspaceSettings).
    pub fn builder() -> crate::types::builders::WorkspaceSettingsBuilder {
        crate::types::builders::WorkspaceSettingsBuilder::default()
    }
}

/// A builder for [`WorkspaceSettings`](crate::types::WorkspaceSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WorkspaceSettingsBuilder {
    pub(crate) s3_artifact_path: ::std::option::Option<::std::string::String>,
    pub(crate) s3_kms_key_id: ::std::option::Option<::std::string::String>,
}
impl WorkspaceSettingsBuilder {
    /// <p>The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.</p>
    pub fn s3_artifact_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_artifact_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.</p>
    pub fn set_s3_artifact_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_artifact_path = input;
        self
    }
    /// <p>The Amazon S3 bucket used to store artifacts generated by Canvas. Updating the Amazon S3 location impacts existing configuration settings, and Canvas users no longer have access to their artifacts. Canvas users must log out and log back in to apply the new location.</p>
    pub fn get_s3_artifact_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_artifact_path
    }
    /// <p>The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.</p>
    pub fn s3_kms_key_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_kms_key_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.</p>
    pub fn set_s3_kms_key_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_kms_key_id = input;
        self
    }
    /// <p>The Amazon Web Services Key Management Service (KMS) encryption key ID that is used to encrypt artifacts generated by Canvas in the Amazon S3 bucket.</p>
    pub fn get_s3_kms_key_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_kms_key_id
    }
    /// Consumes the builder and constructs a [`WorkspaceSettings`](crate::types::WorkspaceSettings).
    pub fn build(self) -> crate::types::WorkspaceSettings {
        crate::types::WorkspaceSettings {
            s3_artifact_path: self.s3_artifact_path,
            s3_kms_key_id: self.s3_kms_key_id,
        }
    }
}
