// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartExport`](crate::operation::start_export::builders::StartExportFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`s3_bucket(impl ::std::convert::Into<String>)`](crate::operation::start_export::builders::StartExportFluentBuilder::s3_bucket) / [`set_s3_bucket(Option<String>)`](crate::operation::start_export::builders::StartExportFluentBuilder::set_s3_bucket): <p>Start export request s3 bucket.</p>
    ///   - [`s3_key(impl ::std::convert::Into<String>)`](crate::operation::start_export::builders::StartExportFluentBuilder::s3_key) / [`set_s3_key(Option<String>)`](crate::operation::start_export::builders::StartExportFluentBuilder::set_s3_key): <p>Start export request s3key.</p>
    ///   - [`s3_bucket_owner(impl ::std::convert::Into<String>)`](crate::operation::start_export::builders::StartExportFluentBuilder::s3_bucket_owner) / [`set_s3_bucket_owner(Option<String>)`](crate::operation::start_export::builders::StartExportFluentBuilder::set_s3_bucket_owner): <p>Start export request s3 bucket owner.</p>
    /// - On success, responds with [`StartExportOutput`](crate::operation::start_export::StartExportOutput) with field(s):
    ///   - [`export_task(Option<ExportTask>)`](crate::operation::start_export::StartExportOutput::export_task): <p>Start export response export task.</p>
    /// - On failure, responds with [`SdkError<StartExportError>`](crate::operation::start_export::StartExportError)
    pub fn start_export(&self) -> crate::operation::start_export::builders::StartExportFluentBuilder {
        crate::operation::start_export::builders::StartExportFluentBuilder::new(self.handle.clone())
    }
}
