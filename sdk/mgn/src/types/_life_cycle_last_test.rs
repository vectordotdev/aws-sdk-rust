// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Lifecycle last Test.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LifeCycleLastTest {
    /// <p>Lifecycle last Test initiated.</p>
    pub initiated: ::std::option::Option<crate::types::LifeCycleLastTestInitiated>,
    /// <p>Lifecycle last Test reverted.</p>
    pub reverted: ::std::option::Option<crate::types::LifeCycleLastTestReverted>,
    /// <p>Lifecycle last Test finalized.</p>
    pub finalized: ::std::option::Option<crate::types::LifeCycleLastTestFinalized>,
}
impl LifeCycleLastTest {
    /// <p>Lifecycle last Test initiated.</p>
    pub fn initiated(&self) -> ::std::option::Option<&crate::types::LifeCycleLastTestInitiated> {
        self.initiated.as_ref()
    }
    /// <p>Lifecycle last Test reverted.</p>
    pub fn reverted(&self) -> ::std::option::Option<&crate::types::LifeCycleLastTestReverted> {
        self.reverted.as_ref()
    }
    /// <p>Lifecycle last Test finalized.</p>
    pub fn finalized(&self) -> ::std::option::Option<&crate::types::LifeCycleLastTestFinalized> {
        self.finalized.as_ref()
    }
}
impl LifeCycleLastTest {
    /// Creates a new builder-style object to manufacture [`LifeCycleLastTest`](crate::types::LifeCycleLastTest).
    pub fn builder() -> crate::types::builders::LifeCycleLastTestBuilder {
        crate::types::builders::LifeCycleLastTestBuilder::default()
    }
}

/// A builder for [`LifeCycleLastTest`](crate::types::LifeCycleLastTest).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LifeCycleLastTestBuilder {
    pub(crate) initiated: ::std::option::Option<crate::types::LifeCycleLastTestInitiated>,
    pub(crate) reverted: ::std::option::Option<crate::types::LifeCycleLastTestReverted>,
    pub(crate) finalized: ::std::option::Option<crate::types::LifeCycleLastTestFinalized>,
}
impl LifeCycleLastTestBuilder {
    /// <p>Lifecycle last Test initiated.</p>
    pub fn initiated(mut self, input: crate::types::LifeCycleLastTestInitiated) -> Self {
        self.initiated = ::std::option::Option::Some(input);
        self
    }
    /// <p>Lifecycle last Test initiated.</p>
    pub fn set_initiated(mut self, input: ::std::option::Option<crate::types::LifeCycleLastTestInitiated>) -> Self {
        self.initiated = input;
        self
    }
    /// <p>Lifecycle last Test initiated.</p>
    pub fn get_initiated(&self) -> &::std::option::Option<crate::types::LifeCycleLastTestInitiated> {
        &self.initiated
    }
    /// <p>Lifecycle last Test reverted.</p>
    pub fn reverted(mut self, input: crate::types::LifeCycleLastTestReverted) -> Self {
        self.reverted = ::std::option::Option::Some(input);
        self
    }
    /// <p>Lifecycle last Test reverted.</p>
    pub fn set_reverted(mut self, input: ::std::option::Option<crate::types::LifeCycleLastTestReverted>) -> Self {
        self.reverted = input;
        self
    }
    /// <p>Lifecycle last Test reverted.</p>
    pub fn get_reverted(&self) -> &::std::option::Option<crate::types::LifeCycleLastTestReverted> {
        &self.reverted
    }
    /// <p>Lifecycle last Test finalized.</p>
    pub fn finalized(mut self, input: crate::types::LifeCycleLastTestFinalized) -> Self {
        self.finalized = ::std::option::Option::Some(input);
        self
    }
    /// <p>Lifecycle last Test finalized.</p>
    pub fn set_finalized(mut self, input: ::std::option::Option<crate::types::LifeCycleLastTestFinalized>) -> Self {
        self.finalized = input;
        self
    }
    /// <p>Lifecycle last Test finalized.</p>
    pub fn get_finalized(&self) -> &::std::option::Option<crate::types::LifeCycleLastTestFinalized> {
        &self.finalized
    }
    /// Consumes the builder and constructs a [`LifeCycleLastTest`](crate::types::LifeCycleLastTest).
    pub fn build(self) -> crate::types::LifeCycleLastTest {
        crate::types::LifeCycleLastTest {
            initiated: self.initiated,
            reverted: self.reverted,
            finalized: self.finalized,
        }
    }
}
