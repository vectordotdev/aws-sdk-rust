// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>List exports request filters.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListExportsRequestFilters {
    /// <p>List exports request filters export ids.</p>
    pub export_i_ds: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ListExportsRequestFilters {
    /// <p>List exports request filters export ids.</p>
    pub fn export_i_ds(&self) -> ::std::option::Option<&[::std::string::String]> {
        self.export_i_ds.as_deref()
    }
}
impl ListExportsRequestFilters {
    /// Creates a new builder-style object to manufacture [`ListExportsRequestFilters`](crate::types::ListExportsRequestFilters).
    pub fn builder() -> crate::types::builders::ListExportsRequestFiltersBuilder {
        crate::types::builders::ListExportsRequestFiltersBuilder::default()
    }
}

/// A builder for [`ListExportsRequestFilters`](crate::types::ListExportsRequestFilters).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListExportsRequestFiltersBuilder {
    pub(crate) export_i_ds: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl ListExportsRequestFiltersBuilder {
    /// Appends an item to `export_i_ds`.
    ///
    /// To override the contents of this collection use [`set_export_i_ds`](Self::set_export_i_ds).
    ///
    /// <p>List exports request filters export ids.</p>
    pub fn export_i_ds(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.export_i_ds.unwrap_or_default();
        v.push(input.into());
        self.export_i_ds = ::std::option::Option::Some(v);
        self
    }
    /// <p>List exports request filters export ids.</p>
    pub fn set_export_i_ds(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.export_i_ds = input;
        self
    }
    /// <p>List exports request filters export ids.</p>
    pub fn get_export_i_ds(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.export_i_ds
    }
    /// Consumes the builder and constructs a [`ListExportsRequestFilters`](crate::types::ListExportsRequestFilters).
    pub fn build(self) -> crate::types::ListExportsRequestFilters {
        crate::types::ListExportsRequestFilters {
            export_i_ds: self.export_i_ds,
        }
    }
}
