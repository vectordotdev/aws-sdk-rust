// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Options for the <code>GetTemplateSummary</code> API action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TemplateSummaryConfig {
    /// <p>If set to <code>True</code>, any unrecognized resource types generate warnings and not an error. Any unrecognized resource types are returned in the <code>Warnings</code> output parameter.</p>
    pub treat_unrecognized_resource_types_as_warnings: ::std::option::Option<bool>,
}
impl TemplateSummaryConfig {
    /// <p>If set to <code>True</code>, any unrecognized resource types generate warnings and not an error. Any unrecognized resource types are returned in the <code>Warnings</code> output parameter.</p>
    pub fn treat_unrecognized_resource_types_as_warnings(&self) -> ::std::option::Option<bool> {
        self.treat_unrecognized_resource_types_as_warnings
    }
}
impl TemplateSummaryConfig {
    /// Creates a new builder-style object to manufacture [`TemplateSummaryConfig`](crate::types::TemplateSummaryConfig).
    pub fn builder() -> crate::types::builders::TemplateSummaryConfigBuilder {
        crate::types::builders::TemplateSummaryConfigBuilder::default()
    }
}

/// A builder for [`TemplateSummaryConfig`](crate::types::TemplateSummaryConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TemplateSummaryConfigBuilder {
    pub(crate) treat_unrecognized_resource_types_as_warnings: ::std::option::Option<bool>,
}
impl TemplateSummaryConfigBuilder {
    /// <p>If set to <code>True</code>, any unrecognized resource types generate warnings and not an error. Any unrecognized resource types are returned in the <code>Warnings</code> output parameter.</p>
    pub fn treat_unrecognized_resource_types_as_warnings(mut self, input: bool) -> Self {
        self.treat_unrecognized_resource_types_as_warnings = ::std::option::Option::Some(input);
        self
    }
    /// <p>If set to <code>True</code>, any unrecognized resource types generate warnings and not an error. Any unrecognized resource types are returned in the <code>Warnings</code> output parameter.</p>
    pub fn set_treat_unrecognized_resource_types_as_warnings(mut self, input: ::std::option::Option<bool>) -> Self {
        self.treat_unrecognized_resource_types_as_warnings = input;
        self
    }
    /// <p>If set to <code>True</code>, any unrecognized resource types generate warnings and not an error. Any unrecognized resource types are returned in the <code>Warnings</code> output parameter.</p>
    pub fn get_treat_unrecognized_resource_types_as_warnings(&self) -> &::std::option::Option<bool> {
        &self.treat_unrecognized_resource_types_as_warnings
    }
    /// Consumes the builder and constructs a [`TemplateSummaryConfig`](crate::types::TemplateSummaryConfig).
    pub fn build(self) -> crate::types::TemplateSummaryConfig {
        crate::types::TemplateSummaryConfig {
            treat_unrecognized_resource_types_as_warnings: self.treat_unrecognized_resource_types_as_warnings,
        }
    }
}
