// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`StartMessageMoveTask`](crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`source_arn(impl ::std::convert::Into<String>)`](crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder::source_arn) / [`set_source_arn(Option<String>)`](crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder::set_source_arn): <p>The ARN of the queue that contains the messages to be moved to another queue. Currently, only dead-letter queue (DLQ) ARNs are accepted.</p>
    ///   - [`destination_arn(impl ::std::convert::Into<String>)`](crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder::destination_arn) / [`set_destination_arn(Option<String>)`](crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder::set_destination_arn): <p>The ARN of the queue that receives the moved messages. You can use this field to specify the destination queue where you would like to redrive messages. If this field is left blank, the messages will be redriven back to their respective original source queues.</p>
    ///   - [`max_number_of_messages_per_second(i32)`](crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder::max_number_of_messages_per_second) / [`set_max_number_of_messages_per_second(Option<i32>)`](crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder::set_max_number_of_messages_per_second): <p>The number of messages to be moved per second (the message movement rate). You can use this field to define a fixed message movement rate. The maximum value for messages per second is 500. If this field is left blank, the system will optimize the rate based on the queue message backlog size, which may vary throughout the duration of the message movement task.</p>
    /// - On success, responds with [`StartMessageMoveTaskOutput`](crate::operation::start_message_move_task::StartMessageMoveTaskOutput) with field(s):
    ///   - [`task_handle(Option<String>)`](crate::operation::start_message_move_task::StartMessageMoveTaskOutput::task_handle): <p>An identifier associated with a message movement task. You can use this identifier to cancel a specified message movement task using the <code>CancelMessageMoveTask</code> action.</p>
    /// - On failure, responds with [`SdkError<StartMessageMoveTaskError>`](crate::operation::start_message_move_task::StartMessageMoveTaskError)
    pub fn start_message_move_task(&self) -> crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder {
        crate::operation::start_message_move_task::builders::StartMessageMoveTaskFluentBuilder::new(self.handle.clone())
    }
}
