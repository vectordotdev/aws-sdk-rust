// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Specifies the location of an occurrence of sensitive data in an email message or a non-binary text file such as an HTML, TXT, or XML file.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Range {
    /// <p>The number of lines from the beginning of the file to the end of the sensitive data.</p>
    pub end: ::std::option::Option<i64>,
    /// <p>The number of lines from the beginning of the file to the beginning of the sensitive data.</p>
    pub start: ::std::option::Option<i64>,
    /// <p>The number of characters, with spaces and starting from 1, from the beginning of the first line that contains the sensitive data (start) to the beginning of the sensitive data.</p>
    pub start_column: ::std::option::Option<i64>,
}
impl Range {
    /// <p>The number of lines from the beginning of the file to the end of the sensitive data.</p>
    pub fn end(&self) -> ::std::option::Option<i64> {
        self.end
    }
    /// <p>The number of lines from the beginning of the file to the beginning of the sensitive data.</p>
    pub fn start(&self) -> ::std::option::Option<i64> {
        self.start
    }
    /// <p>The number of characters, with spaces and starting from 1, from the beginning of the first line that contains the sensitive data (start) to the beginning of the sensitive data.</p>
    pub fn start_column(&self) -> ::std::option::Option<i64> {
        self.start_column
    }
}
impl Range {
    /// Creates a new builder-style object to manufacture [`Range`](crate::types::Range).
    pub fn builder() -> crate::types::builders::RangeBuilder {
        crate::types::builders::RangeBuilder::default()
    }
}

/// A builder for [`Range`](crate::types::Range).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RangeBuilder {
    pub(crate) end: ::std::option::Option<i64>,
    pub(crate) start: ::std::option::Option<i64>,
    pub(crate) start_column: ::std::option::Option<i64>,
}
impl RangeBuilder {
    /// <p>The number of lines from the beginning of the file to the end of the sensitive data.</p>
    pub fn end(mut self, input: i64) -> Self {
        self.end = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of lines from the beginning of the file to the end of the sensitive data.</p>
    pub fn set_end(mut self, input: ::std::option::Option<i64>) -> Self {
        self.end = input;
        self
    }
    /// <p>The number of lines from the beginning of the file to the end of the sensitive data.</p>
    pub fn get_end(&self) -> &::std::option::Option<i64> {
        &self.end
    }
    /// <p>The number of lines from the beginning of the file to the beginning of the sensitive data.</p>
    pub fn start(mut self, input: i64) -> Self {
        self.start = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of lines from the beginning of the file to the beginning of the sensitive data.</p>
    pub fn set_start(mut self, input: ::std::option::Option<i64>) -> Self {
        self.start = input;
        self
    }
    /// <p>The number of lines from the beginning of the file to the beginning of the sensitive data.</p>
    pub fn get_start(&self) -> &::std::option::Option<i64> {
        &self.start
    }
    /// <p>The number of characters, with spaces and starting from 1, from the beginning of the first line that contains the sensitive data (start) to the beginning of the sensitive data.</p>
    pub fn start_column(mut self, input: i64) -> Self {
        self.start_column = ::std::option::Option::Some(input);
        self
    }
    /// <p>The number of characters, with spaces and starting from 1, from the beginning of the first line that contains the sensitive data (start) to the beginning of the sensitive data.</p>
    pub fn set_start_column(mut self, input: ::std::option::Option<i64>) -> Self {
        self.start_column = input;
        self
    }
    /// <p>The number of characters, with spaces and starting from 1, from the beginning of the first line that contains the sensitive data (start) to the beginning of the sensitive data.</p>
    pub fn get_start_column(&self) -> &::std::option::Option<i64> {
        &self.start_column
    }
    /// Consumes the builder and constructs a [`Range`](crate::types::Range).
    pub fn build(self) -> crate::types::Range {
        crate::types::Range {
            end: self.end,
            start: self.start,
            start_column: self.start_column,
        }
    }
}
