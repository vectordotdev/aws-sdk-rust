// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Destination details to write data for a target data source. Current supported data source is Timestream.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TargetDestination {
    /// <p>Query result destination details for Timestream data source.</p>
    pub timestream_destination: ::std::option::Option<crate::types::TimestreamDestination>,
}
impl TargetDestination {
    /// <p>Query result destination details for Timestream data source.</p>
    pub fn timestream_destination(&self) -> ::std::option::Option<&crate::types::TimestreamDestination> {
        self.timestream_destination.as_ref()
    }
}
impl TargetDestination {
    /// Creates a new builder-style object to manufacture [`TargetDestination`](crate::types::TargetDestination).
    pub fn builder() -> crate::types::builders::TargetDestinationBuilder {
        crate::types::builders::TargetDestinationBuilder::default()
    }
}

/// A builder for [`TargetDestination`](crate::types::TargetDestination).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TargetDestinationBuilder {
    pub(crate) timestream_destination: ::std::option::Option<crate::types::TimestreamDestination>,
}
impl TargetDestinationBuilder {
    /// <p>Query result destination details for Timestream data source.</p>
    pub fn timestream_destination(mut self, input: crate::types::TimestreamDestination) -> Self {
        self.timestream_destination = ::std::option::Option::Some(input);
        self
    }
    /// <p>Query result destination details for Timestream data source.</p>
    pub fn set_timestream_destination(mut self, input: ::std::option::Option<crate::types::TimestreamDestination>) -> Self {
        self.timestream_destination = input;
        self
    }
    /// <p>Query result destination details for Timestream data source.</p>
    pub fn get_timestream_destination(&self) -> &::std::option::Option<crate::types::TimestreamDestination> {
        &self.timestream_destination
    }
    /// Consumes the builder and constructs a [`TargetDestination`](crate::types::TargetDestination).
    pub fn build(self) -> crate::types::TargetDestination {
        crate::types::TargetDestination {
            timestream_destination: self.timestream_destination,
        }
    }
}
