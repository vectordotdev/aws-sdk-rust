// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>This contains the location of the error report for a single scheduled query call. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ErrorReportLocation {
    /// <p>The S3 location where error reports are written.</p>
    pub s3_report_location: ::std::option::Option<crate::types::S3ReportLocation>,
}
impl ErrorReportLocation {
    /// <p>The S3 location where error reports are written.</p>
    pub fn s3_report_location(&self) -> ::std::option::Option<&crate::types::S3ReportLocation> {
        self.s3_report_location.as_ref()
    }
}
impl ErrorReportLocation {
    /// Creates a new builder-style object to manufacture [`ErrorReportLocation`](crate::types::ErrorReportLocation).
    pub fn builder() -> crate::types::builders::ErrorReportLocationBuilder {
        crate::types::builders::ErrorReportLocationBuilder::default()
    }
}

/// A builder for [`ErrorReportLocation`](crate::types::ErrorReportLocation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ErrorReportLocationBuilder {
    pub(crate) s3_report_location: ::std::option::Option<crate::types::S3ReportLocation>,
}
impl ErrorReportLocationBuilder {
    /// <p>The S3 location where error reports are written.</p>
    pub fn s3_report_location(mut self, input: crate::types::S3ReportLocation) -> Self {
        self.s3_report_location = ::std::option::Option::Some(input);
        self
    }
    /// <p>The S3 location where error reports are written.</p>
    pub fn set_s3_report_location(mut self, input: ::std::option::Option<crate::types::S3ReportLocation>) -> Self {
        self.s3_report_location = input;
        self
    }
    /// <p>The S3 location where error reports are written.</p>
    pub fn get_s3_report_location(&self) -> &::std::option::Option<crate::types::S3ReportLocation> {
        &self.s3_report_location
    }
    /// Consumes the builder and constructs a [`ErrorReportLocation`](crate::types::ErrorReportLocation).
    pub fn build(self) -> crate::types::ErrorReportLocation {
        crate::types::ErrorReportLocation {
            s3_report_location: self.s3_report_location,
        }
    }
}
