// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a request to return a network resource.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReturnInformation {
    /// <p>The shipping address.</p>
    pub shipping_address: ::std::option::Option<crate::types::Address>,
    /// <p>The reason for the return. If the return request did not include a reason for the return, this value is null.</p>
    pub return_reason: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the replacement order.</p>
    pub replacement_order_arn: ::std::option::Option<::std::string::String>,
    /// <p>The URL of the shipping label. The shipping label is available for download only if the status of the network resource is <code>PENDING_RETURN</code>. For more information, see <a href="https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit">Return a radio unit</a>.</p>
    pub shipping_label: ::std::option::Option<::std::string::String>,
}
impl ReturnInformation {
    /// <p>The shipping address.</p>
    pub fn shipping_address(&self) -> ::std::option::Option<&crate::types::Address> {
        self.shipping_address.as_ref()
    }
    /// <p>The reason for the return. If the return request did not include a reason for the return, this value is null.</p>
    pub fn return_reason(&self) -> ::std::option::Option<&str> {
        self.return_reason.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the replacement order.</p>
    pub fn replacement_order_arn(&self) -> ::std::option::Option<&str> {
        self.replacement_order_arn.as_deref()
    }
    /// <p>The URL of the shipping label. The shipping label is available for download only if the status of the network resource is <code>PENDING_RETURN</code>. For more information, see <a href="https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit">Return a radio unit</a>.</p>
    pub fn shipping_label(&self) -> ::std::option::Option<&str> {
        self.shipping_label.as_deref()
    }
}
impl ReturnInformation {
    /// Creates a new builder-style object to manufacture [`ReturnInformation`](crate::types::ReturnInformation).
    pub fn builder() -> crate::types::builders::ReturnInformationBuilder {
        crate::types::builders::ReturnInformationBuilder::default()
    }
}

/// A builder for [`ReturnInformation`](crate::types::ReturnInformation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReturnInformationBuilder {
    pub(crate) shipping_address: ::std::option::Option<crate::types::Address>,
    pub(crate) return_reason: ::std::option::Option<::std::string::String>,
    pub(crate) replacement_order_arn: ::std::option::Option<::std::string::String>,
    pub(crate) shipping_label: ::std::option::Option<::std::string::String>,
}
impl ReturnInformationBuilder {
    /// <p>The shipping address.</p>
    pub fn shipping_address(mut self, input: crate::types::Address) -> Self {
        self.shipping_address = ::std::option::Option::Some(input);
        self
    }
    /// <p>The shipping address.</p>
    pub fn set_shipping_address(mut self, input: ::std::option::Option<crate::types::Address>) -> Self {
        self.shipping_address = input;
        self
    }
    /// <p>The shipping address.</p>
    pub fn get_shipping_address(&self) -> &::std::option::Option<crate::types::Address> {
        &self.shipping_address
    }
    /// <p>The reason for the return. If the return request did not include a reason for the return, this value is null.</p>
    pub fn return_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.return_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The reason for the return. If the return request did not include a reason for the return, this value is null.</p>
    pub fn set_return_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.return_reason = input;
        self
    }
    /// <p>The reason for the return. If the return request did not include a reason for the return, this value is null.</p>
    pub fn get_return_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.return_reason
    }
    /// <p>The Amazon Resource Name (ARN) of the replacement order.</p>
    pub fn replacement_order_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.replacement_order_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the replacement order.</p>
    pub fn set_replacement_order_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.replacement_order_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the replacement order.</p>
    pub fn get_replacement_order_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.replacement_order_arn
    }
    /// <p>The URL of the shipping label. The shipping label is available for download only if the status of the network resource is <code>PENDING_RETURN</code>. For more information, see <a href="https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit">Return a radio unit</a>.</p>
    pub fn shipping_label(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.shipping_label = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The URL of the shipping label. The shipping label is available for download only if the status of the network resource is <code>PENDING_RETURN</code>. For more information, see <a href="https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit">Return a radio unit</a>.</p>
    pub fn set_shipping_label(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.shipping_label = input;
        self
    }
    /// <p>The URL of the shipping label. The shipping label is available for download only if the status of the network resource is <code>PENDING_RETURN</code>. For more information, see <a href="https://docs.aws.amazon.com/private-networks/latest/userguide/radio-units.html#return-radio-unit">Return a radio unit</a>.</p>
    pub fn get_shipping_label(&self) -> &::std::option::Option<::std::string::String> {
        &self.shipping_label
    }
    /// Consumes the builder and constructs a [`ReturnInformation`](crate::types::ReturnInformation).
    pub fn build(self) -> crate::types::ReturnInformation {
        crate::types::ReturnInformation {
            shipping_address: self.shipping_address,
            return_reason: self.return_reason,
            replacement_order_arn: self.replacement_order_arn,
            shipping_label: self.shipping_label,
        }
    }
}
