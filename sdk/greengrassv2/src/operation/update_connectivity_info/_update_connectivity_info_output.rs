// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateConnectivityInfoOutput {
    /// <p>The new version of the connectivity information for the core device.</p>
    pub version: ::std::option::Option<::std::string::String>,
    /// <p>A message about the connectivity information update request.</p>
    pub message: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl UpdateConnectivityInfoOutput {
    /// <p>The new version of the connectivity information for the core device.</p>
    pub fn version(&self) -> ::std::option::Option<&str> {
        self.version.as_deref()
    }
    /// <p>A message about the connectivity information update request.</p>
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for UpdateConnectivityInfoOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateConnectivityInfoOutput {
    /// Creates a new builder-style object to manufacture [`UpdateConnectivityInfoOutput`](crate::operation::update_connectivity_info::UpdateConnectivityInfoOutput).
    pub fn builder() -> crate::operation::update_connectivity_info::builders::UpdateConnectivityInfoOutputBuilder {
        crate::operation::update_connectivity_info::builders::UpdateConnectivityInfoOutputBuilder::default()
    }
}

/// A builder for [`UpdateConnectivityInfoOutput`](crate::operation::update_connectivity_info::UpdateConnectivityInfoOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateConnectivityInfoOutputBuilder {
    pub(crate) version: ::std::option::Option<::std::string::String>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl UpdateConnectivityInfoOutputBuilder {
    /// <p>The new version of the connectivity information for the core device.</p>
    pub fn version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The new version of the connectivity information for the core device.</p>
    pub fn set_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.version = input;
        self
    }
    /// <p>The new version of the connectivity information for the core device.</p>
    pub fn get_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.version
    }
    /// <p>A message about the connectivity information update request.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A message about the connectivity information update request.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>A message about the connectivity information update request.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateConnectivityInfoOutput`](crate::operation::update_connectivity_info::UpdateConnectivityInfoOutput).
    pub fn build(self) -> crate::operation::update_connectivity_info::UpdateConnectivityInfoOutput {
        crate::operation::update_connectivity_info::UpdateConnectivityInfoOutput {
            version: self.version,
            message: self.message,
            _request_id: self._request_id,
        }
    }
}
