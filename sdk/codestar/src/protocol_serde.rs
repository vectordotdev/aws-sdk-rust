// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_associate_team_member;

pub(crate) mod shape_create_project;

pub(crate) mod shape_create_user_profile;

pub(crate) mod shape_delete_project;

pub(crate) mod shape_delete_user_profile;

pub(crate) mod shape_describe_project;

pub(crate) mod shape_describe_user_profile;

pub(crate) mod shape_disassociate_team_member;

pub(crate) mod shape_list_projects;

pub(crate) mod shape_list_resources;

pub(crate) mod shape_list_tags_for_project;

pub(crate) mod shape_list_team_members;

pub(crate) mod shape_list_user_profiles;

pub(crate) mod shape_tag_project;

pub(crate) mod shape_untag_project;

pub(crate) mod shape_update_project;

pub(crate) mod shape_update_team_member;

pub(crate) mod shape_update_user_profile;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_associate_team_member_input;

pub(crate) mod shape_concurrent_modification_exception;

pub(crate) mod shape_create_project_input;

pub(crate) mod shape_create_user_profile_input;

pub(crate) mod shape_delete_project_input;

pub(crate) mod shape_delete_user_profile_input;

pub(crate) mod shape_describe_project_input;

pub(crate) mod shape_describe_user_profile_input;

pub(crate) mod shape_disassociate_team_member_input;

pub(crate) mod shape_invalid_next_token_exception;

pub(crate) mod shape_invalid_service_role_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_projects_input;

pub(crate) mod shape_list_resources_input;

pub(crate) mod shape_list_tags_for_project_input;

pub(crate) mod shape_list_team_members_input;

pub(crate) mod shape_list_user_profiles_input;

pub(crate) mod shape_project_already_exists_exception;

pub(crate) mod shape_project_configuration_exception;

pub(crate) mod shape_project_creation_failed_exception;

pub(crate) mod shape_project_not_found_exception;

pub(crate) mod shape_tag_project_input;

pub(crate) mod shape_team_member_already_associated_exception;

pub(crate) mod shape_team_member_not_found_exception;

pub(crate) mod shape_untag_project_input;

pub(crate) mod shape_update_project_input;

pub(crate) mod shape_update_team_member_input;

pub(crate) mod shape_update_user_profile_input;

pub(crate) mod shape_user_profile_already_exists_exception;

pub(crate) mod shape_user_profile_not_found_exception;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_code;

pub(crate) mod shape_project_status;

pub(crate) mod shape_projects_list;

pub(crate) mod shape_resources_result;

pub(crate) mod shape_tags;

pub(crate) mod shape_team_member_result;

pub(crate) mod shape_toolchain;

pub(crate) mod shape_user_profiles_list;

pub(crate) mod shape_code_destination;

pub(crate) mod shape_code_source;

pub(crate) mod shape_project_summary;

pub(crate) mod shape_resource;

pub(crate) mod shape_team_member;

pub(crate) mod shape_toolchain_source;

pub(crate) mod shape_user_profile_summary;

pub(crate) mod shape_code_commit_code_destination;

pub(crate) mod shape_git_hub_code_destination;

pub(crate) mod shape_s3_location;
