// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetHealthEvent`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`monitor_name(impl ::std::convert::Into<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::monitor_name) / [`set_monitor_name(Option<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::set_monitor_name): <p>The name of the monitor.</p>
    ///   - [`event_id(impl ::std::convert::Into<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::event_id) / [`set_event_id(Option<String>)`](crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::set_event_id): <p>The internally generated identifier of a health event. Because <code>EventID</code> contains the forward slash (“/”) character, you must URL-encode the <code>EventID</code> field in the request URL.</p>
    /// - On success, responds with [`GetHealthEventOutput`](crate::operation::get_health_event::GetHealthEventOutput) with field(s):
    ///   - [`event_arn(Option<String>)`](crate::operation::get_health_event::GetHealthEventOutput::event_arn): <p>The Amazon Resource Name (ARN) of the event.</p>
    ///   - [`event_id(Option<String>)`](crate::operation::get_health_event::GetHealthEventOutput::event_id): <p>The internally generated identifier of a health event.</p>
    ///   - [`started_at(Option<DateTime>)`](crate::operation::get_health_event::GetHealthEventOutput::started_at): <p>The time when a health event started.</p>
    ///   - [`ended_at(Option<DateTime>)`](crate::operation::get_health_event::GetHealthEventOutput::ended_at): <p>The time when a health event was resolved. If the health event is still active, the end time is not set.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::get_health_event::GetHealthEventOutput::created_at): <p>The time when a health event was created.</p>
    ///   - [`last_updated_at(Option<DateTime>)`](crate::operation::get_health_event::GetHealthEventOutput::last_updated_at): <p>The time when a health event was last updated or recalculated.</p>
    ///   - [`impacted_locations(Option<Vec<ImpactedLocation>>)`](crate::operation::get_health_event::GetHealthEventOutput::impacted_locations): <p>The locations affected by a health event.</p>
    ///   - [`status(Option<HealthEventStatus>)`](crate::operation::get_health_event::GetHealthEventOutput::status): <p>The status of a health event.</p>
    ///   - [`percent_of_total_traffic_impacted(Option<f64>)`](crate::operation::get_health_event::GetHealthEventOutput::percent_of_total_traffic_impacted): <p>The impact on total traffic that a health event has.</p>
    ///   - [`impact_type(Option<HealthEventImpactType>)`](crate::operation::get_health_event::GetHealthEventOutput::impact_type): <p>The type of impairment of a specific health event.</p>
    ///   - [`health_score_threshold(f64)`](crate::operation::get_health_event::GetHealthEventOutput::health_score_threshold): <p>The threshold percentage for health events when Amazon CloudWatch Internet Monitor creates a health event.</p>
    /// - On failure, responds with [`SdkError<GetHealthEventError>`](crate::operation::get_health_event::GetHealthEventError)
    pub fn get_health_event(&self) -> crate::operation::get_health_event::builders::GetHealthEventFluentBuilder {
        crate::operation::get_health_event::builders::GetHealthEventFluentBuilder::new(self.handle.clone())
    }
}
