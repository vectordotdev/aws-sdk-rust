// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Configuration to manage IoT Job's package version reporting. If configured, Jobs updates the thing's reserved named shadow with the package version information up on successful job completion.</p>
/// <p> <b>Note:</b> For each job, the destinationPackageVersions attribute has to be set with the correct data for Jobs to report to the thing shadow. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VersionUpdateByJobsConfig {
    /// <p>Indicates whether the Job is enabled or not.</p>
    pub enabled: ::std::option::Option<bool>,
    /// <p>The Amazon Resource Name (ARN) of the role that grants permission to the IoT jobs service to update the reserved named shadow when the job successfully completes.</p>
    pub role_arn: ::std::option::Option<::std::string::String>,
}
impl VersionUpdateByJobsConfig {
    /// <p>Indicates whether the Job is enabled or not.</p>
    pub fn enabled(&self) -> ::std::option::Option<bool> {
        self.enabled
    }
    /// <p>The Amazon Resource Name (ARN) of the role that grants permission to the IoT jobs service to update the reserved named shadow when the job successfully completes.</p>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
}
impl VersionUpdateByJobsConfig {
    /// Creates a new builder-style object to manufacture [`VersionUpdateByJobsConfig`](crate::types::VersionUpdateByJobsConfig).
    pub fn builder() -> crate::types::builders::VersionUpdateByJobsConfigBuilder {
        crate::types::builders::VersionUpdateByJobsConfigBuilder::default()
    }
}

/// A builder for [`VersionUpdateByJobsConfig`](crate::types::VersionUpdateByJobsConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VersionUpdateByJobsConfigBuilder {
    pub(crate) enabled: ::std::option::Option<bool>,
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
}
impl VersionUpdateByJobsConfigBuilder {
    /// <p>Indicates whether the Job is enabled or not.</p>
    pub fn enabled(mut self, input: bool) -> Self {
        self.enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether the Job is enabled or not.</p>
    pub fn set_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.enabled = input;
        self
    }
    /// <p>Indicates whether the Job is enabled or not.</p>
    pub fn get_enabled(&self) -> &::std::option::Option<bool> {
        &self.enabled
    }
    /// <p>The Amazon Resource Name (ARN) of the role that grants permission to the IoT jobs service to update the reserved named shadow when the job successfully completes.</p>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the role that grants permission to the IoT jobs service to update the reserved named shadow when the job successfully completes.</p>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the role that grants permission to the IoT jobs service to update the reserved named shadow when the job successfully completes.</p>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// Consumes the builder and constructs a [`VersionUpdateByJobsConfig`](crate::types::VersionUpdateByJobsConfig).
    pub fn build(self) -> crate::types::VersionUpdateByJobsConfig {
        crate::types::VersionUpdateByJobsConfig {
            enabled: self.enabled,
            role_arn: self.role_arn,
        }
    }
}
