// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about one of the policies that determined an authorization decision.</p>
/// <p>This data type is used as an element in a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorized.html">IsAuthorized</a> and <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_IsAuthorizedWithToken.html">IsAuthorizedWithToken</a> operations.</p>
/// <p>Example: <code>"determiningPolicies":[{"policyId":"SPEXAMPLEabcdefg111111"}]</code> </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeterminingPolicyItem {
    /// <p>The Id of a policy that determined to an authorization decision.</p>
    /// <p>Example: <code>"policyId":"SPEXAMPLEabcdefg111111"</code> </p>
    pub policy_id: ::std::option::Option<::std::string::String>,
}
impl DeterminingPolicyItem {
    /// <p>The Id of a policy that determined to an authorization decision.</p>
    /// <p>Example: <code>"policyId":"SPEXAMPLEabcdefg111111"</code> </p>
    pub fn policy_id(&self) -> ::std::option::Option<&str> {
        self.policy_id.as_deref()
    }
}
impl DeterminingPolicyItem {
    /// Creates a new builder-style object to manufacture [`DeterminingPolicyItem`](crate::types::DeterminingPolicyItem).
    pub fn builder() -> crate::types::builders::DeterminingPolicyItemBuilder {
        crate::types::builders::DeterminingPolicyItemBuilder::default()
    }
}

/// A builder for [`DeterminingPolicyItem`](crate::types::DeterminingPolicyItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeterminingPolicyItemBuilder {
    pub(crate) policy_id: ::std::option::Option<::std::string::String>,
}
impl DeterminingPolicyItemBuilder {
    /// <p>The Id of a policy that determined to an authorization decision.</p>
    /// <p>Example: <code>"policyId":"SPEXAMPLEabcdefg111111"</code> </p>
    pub fn policy_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Id of a policy that determined to an authorization decision.</p>
    /// <p>Example: <code>"policyId":"SPEXAMPLEabcdefg111111"</code> </p>
    pub fn set_policy_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_id = input;
        self
    }
    /// <p>The Id of a policy that determined to an authorization decision.</p>
    /// <p>Example: <code>"policyId":"SPEXAMPLEabcdefg111111"</code> </p>
    pub fn get_policy_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_id
    }
    /// Consumes the builder and constructs a [`DeterminingPolicyItem`](crate::types::DeterminingPolicyItem).
    pub fn build(self) -> crate::types::DeterminingPolicyItem {
        crate::types::DeterminingPolicyItem { policy_id: self.policy_id }
    }
}
