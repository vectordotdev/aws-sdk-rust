// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about a policy template</p>
/// <p>This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicyTemplates.html">ListPolicyTemplates</a> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PolicyTemplateItem {
    /// <p>The unique identifier of the policy store that contains the template.</p>
    pub policy_store_id: ::std::option::Option<::std::string::String>,
    /// <p>The unique identifier of the policy template.</p>
    pub policy_template_id: ::std::option::Option<::std::string::String>,
    /// <p>The description attached to the policy template.</p>
    pub description: ::std::option::Option<::std::string::String>,
    /// <p>The date and time that the policy template was created.</p>
    pub created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time that the policy template was most recently updated.</p>
    pub last_updated_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl PolicyTemplateItem {
    /// <p>The unique identifier of the policy store that contains the template.</p>
    pub fn policy_store_id(&self) -> ::std::option::Option<&str> {
        self.policy_store_id.as_deref()
    }
    /// <p>The unique identifier of the policy template.</p>
    pub fn policy_template_id(&self) -> ::std::option::Option<&str> {
        self.policy_template_id.as_deref()
    }
    /// <p>The description attached to the policy template.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
    /// <p>The date and time that the policy template was created.</p>
    pub fn created_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_date.as_ref()
    }
    /// <p>The date and time that the policy template was most recently updated.</p>
    pub fn last_updated_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_date.as_ref()
    }
}
impl PolicyTemplateItem {
    /// Creates a new builder-style object to manufacture [`PolicyTemplateItem`](crate::types::PolicyTemplateItem).
    pub fn builder() -> crate::types::builders::PolicyTemplateItemBuilder {
        crate::types::builders::PolicyTemplateItemBuilder::default()
    }
}

/// A builder for [`PolicyTemplateItem`](crate::types::PolicyTemplateItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PolicyTemplateItemBuilder {
    pub(crate) policy_store_id: ::std::option::Option<::std::string::String>,
    pub(crate) policy_template_id: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
    pub(crate) created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl PolicyTemplateItemBuilder {
    /// <p>The unique identifier of the policy store that contains the template.</p>
    pub fn policy_store_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_store_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the policy store that contains the template.</p>
    pub fn set_policy_store_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_store_id = input;
        self
    }
    /// <p>The unique identifier of the policy store that contains the template.</p>
    pub fn get_policy_store_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_store_id
    }
    /// <p>The unique identifier of the policy template.</p>
    pub fn policy_template_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_template_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the policy template.</p>
    pub fn set_policy_template_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_template_id = input;
        self
    }
    /// <p>The unique identifier of the policy template.</p>
    pub fn get_policy_template_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_template_id
    }
    /// <p>The description attached to the policy template.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description attached to the policy template.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description attached to the policy template.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// <p>The date and time that the policy template was created.</p>
    pub fn created_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the policy template was created.</p>
    pub fn set_created_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_date = input;
        self
    }
    /// <p>The date and time that the policy template was created.</p>
    pub fn get_created_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_date
    }
    /// <p>The date and time that the policy template was most recently updated.</p>
    pub fn last_updated_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time that the policy template was most recently updated.</p>
    pub fn set_last_updated_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_date = input;
        self
    }
    /// <p>The date and time that the policy template was most recently updated.</p>
    pub fn get_last_updated_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_date
    }
    /// Consumes the builder and constructs a [`PolicyTemplateItem`](crate::types::PolicyTemplateItem).
    pub fn build(self) -> crate::types::PolicyTemplateItem {
        crate::types::PolicyTemplateItem {
            policy_store_id: self.policy_store_id,
            policy_template_id: self.policy_template_id,
            description: self.description,
            created_date: self.created_date,
            last_updated_date: self.last_updated_date,
        }
    }
}
