// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that defines an identity source.</p>
/// <p>This data type is used as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListIdentityStores.html">ListIdentityStores</a> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IdentitySourceItem {
    /// <p>The date and time the identity source was originally created.</p>
    pub created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>A structure that contains the details of the associated identity provider (IdP).</p>
    pub details: ::std::option::Option<crate::types::IdentitySourceItemDetails>,
    /// <p>The unique identifier of the identity source.</p>
    pub identity_source_id: ::std::option::Option<::std::string::String>,
    /// <p>The date and time the identity source was most recently updated.</p>
    pub last_updated_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The identifier of the policy store that contains the identity source.</p>
    pub policy_store_id: ::std::option::Option<::std::string::String>,
    /// <p>The Cedar entity type of the principals returned from the IdP associated with this identity source.</p>
    pub principal_entity_type: ::std::option::Option<::std::string::String>,
}
impl IdentitySourceItem {
    /// <p>The date and time the identity source was originally created.</p>
    pub fn created_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_date.as_ref()
    }
    /// <p>A structure that contains the details of the associated identity provider (IdP).</p>
    pub fn details(&self) -> ::std::option::Option<&crate::types::IdentitySourceItemDetails> {
        self.details.as_ref()
    }
    /// <p>The unique identifier of the identity source.</p>
    pub fn identity_source_id(&self) -> ::std::option::Option<&str> {
        self.identity_source_id.as_deref()
    }
    /// <p>The date and time the identity source was most recently updated.</p>
    pub fn last_updated_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_date.as_ref()
    }
    /// <p>The identifier of the policy store that contains the identity source.</p>
    pub fn policy_store_id(&self) -> ::std::option::Option<&str> {
        self.policy_store_id.as_deref()
    }
    /// <p>The Cedar entity type of the principals returned from the IdP associated with this identity source.</p>
    pub fn principal_entity_type(&self) -> ::std::option::Option<&str> {
        self.principal_entity_type.as_deref()
    }
}
impl IdentitySourceItem {
    /// Creates a new builder-style object to manufacture [`IdentitySourceItem`](crate::types::IdentitySourceItem).
    pub fn builder() -> crate::types::builders::IdentitySourceItemBuilder {
        crate::types::builders::IdentitySourceItemBuilder::default()
    }
}

/// A builder for [`IdentitySourceItem`](crate::types::IdentitySourceItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IdentitySourceItemBuilder {
    pub(crate) created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) details: ::std::option::Option<crate::types::IdentitySourceItemDetails>,
    pub(crate) identity_source_id: ::std::option::Option<::std::string::String>,
    pub(crate) last_updated_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) policy_store_id: ::std::option::Option<::std::string::String>,
    pub(crate) principal_entity_type: ::std::option::Option<::std::string::String>,
}
impl IdentitySourceItemBuilder {
    /// <p>The date and time the identity source was originally created.</p>
    pub fn created_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the identity source was originally created.</p>
    pub fn set_created_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_date = input;
        self
    }
    /// <p>The date and time the identity source was originally created.</p>
    pub fn get_created_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_date
    }
    /// <p>A structure that contains the details of the associated identity provider (IdP).</p>
    pub fn details(mut self, input: crate::types::IdentitySourceItemDetails) -> Self {
        self.details = ::std::option::Option::Some(input);
        self
    }
    /// <p>A structure that contains the details of the associated identity provider (IdP).</p>
    pub fn set_details(mut self, input: ::std::option::Option<crate::types::IdentitySourceItemDetails>) -> Self {
        self.details = input;
        self
    }
    /// <p>A structure that contains the details of the associated identity provider (IdP).</p>
    pub fn get_details(&self) -> &::std::option::Option<crate::types::IdentitySourceItemDetails> {
        &self.details
    }
    /// <p>The unique identifier of the identity source.</p>
    pub fn identity_source_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.identity_source_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the identity source.</p>
    pub fn set_identity_source_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.identity_source_id = input;
        self
    }
    /// <p>The unique identifier of the identity source.</p>
    pub fn get_identity_source_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.identity_source_id
    }
    /// <p>The date and time the identity source was most recently updated.</p>
    pub fn last_updated_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the identity source was most recently updated.</p>
    pub fn set_last_updated_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_date = input;
        self
    }
    /// <p>The date and time the identity source was most recently updated.</p>
    pub fn get_last_updated_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_date
    }
    /// <p>The identifier of the policy store that contains the identity source.</p>
    pub fn policy_store_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_store_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the policy store that contains the identity source.</p>
    pub fn set_policy_store_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_store_id = input;
        self
    }
    /// <p>The identifier of the policy store that contains the identity source.</p>
    pub fn get_policy_store_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_store_id
    }
    /// <p>The Cedar entity type of the principals returned from the IdP associated with this identity source.</p>
    pub fn principal_entity_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.principal_entity_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Cedar entity type of the principals returned from the IdP associated with this identity source.</p>
    pub fn set_principal_entity_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.principal_entity_type = input;
        self
    }
    /// <p>The Cedar entity type of the principals returned from the IdP associated with this identity source.</p>
    pub fn get_principal_entity_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.principal_entity_type
    }
    /// Consumes the builder and constructs a [`IdentitySourceItem`](crate::types::IdentitySourceItem).
    pub fn build(self) -> crate::types::IdentitySourceItem {
        crate::types::IdentitySourceItem {
            created_date: self.created_date,
            details: self.details,
            identity_source_id: self.identity_source_id,
            last_updated_date: self.last_updated_date,
            policy_store_id: self.policy_store_id,
            principal_entity_type: self.principal_entity_type,
        }
    }
}
