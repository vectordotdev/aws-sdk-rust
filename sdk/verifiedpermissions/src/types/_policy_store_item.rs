// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a policy store.</p>
/// <p>This data type is used as a response parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_ListPolicyStores.html">ListPolicyStores</a> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PolicyStoreItem {
    /// <p>The unique identifier of the policy store.</p>
    pub policy_store_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the policy store.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The date and time the policy was created.</p>
    pub created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl PolicyStoreItem {
    /// <p>The unique identifier of the policy store.</p>
    pub fn policy_store_id(&self) -> ::std::option::Option<&str> {
        self.policy_store_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the policy store.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The date and time the policy was created.</p>
    pub fn created_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_date.as_ref()
    }
}
impl PolicyStoreItem {
    /// Creates a new builder-style object to manufacture [`PolicyStoreItem`](crate::types::PolicyStoreItem).
    pub fn builder() -> crate::types::builders::PolicyStoreItemBuilder {
        crate::types::builders::PolicyStoreItemBuilder::default()
    }
}

/// A builder for [`PolicyStoreItem`](crate::types::PolicyStoreItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PolicyStoreItemBuilder {
    pub(crate) policy_store_id: ::std::option::Option<::std::string::String>,
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) created_date: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl PolicyStoreItemBuilder {
    /// <p>The unique identifier of the policy store.</p>
    pub fn policy_store_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_store_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the policy store.</p>
    pub fn set_policy_store_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_store_id = input;
        self
    }
    /// <p>The unique identifier of the policy store.</p>
    pub fn get_policy_store_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_store_id
    }
    /// <p>The Amazon Resource Name (ARN) of the policy store.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the policy store.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the policy store.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The date and time the policy was created.</p>
    pub fn created_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time the policy was created.</p>
    pub fn set_created_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_date = input;
        self
    }
    /// <p>The date and time the policy was created.</p>
    pub fn get_created_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_date
    }
    /// Consumes the builder and constructs a [`PolicyStoreItem`](crate::types::PolicyStoreItem).
    pub fn build(self) -> crate::types::PolicyStoreItem {
        crate::types::PolicyStoreItem {
            policy_store_id: self.policy_store_id,
            arn: self.arn,
            created_date: self.created_date,
        }
    }
}
