// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configuration details of a Amazon Cognito user pool for use with an identity source.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateCognitoUserPoolConfiguration {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool associated with this identity source.</p>
    pub user_pool_arn: ::std::option::Option<::std::string::String>,
    /// <p>The client ID of an app client that is configured for the specified Amazon Cognito user pool.</p>
    pub client_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl UpdateCognitoUserPoolConfiguration {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool associated with this identity source.</p>
    pub fn user_pool_arn(&self) -> ::std::option::Option<&str> {
        self.user_pool_arn.as_deref()
    }
    /// <p>The client ID of an app client that is configured for the specified Amazon Cognito user pool.</p>
    pub fn client_ids(&self) -> ::std::option::Option<&[::std::string::String]> {
        self.client_ids.as_deref()
    }
}
impl UpdateCognitoUserPoolConfiguration {
    /// Creates a new builder-style object to manufacture [`UpdateCognitoUserPoolConfiguration`](crate::types::UpdateCognitoUserPoolConfiguration).
    pub fn builder() -> crate::types::builders::UpdateCognitoUserPoolConfigurationBuilder {
        crate::types::builders::UpdateCognitoUserPoolConfigurationBuilder::default()
    }
}

/// A builder for [`UpdateCognitoUserPoolConfiguration`](crate::types::UpdateCognitoUserPoolConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateCognitoUserPoolConfigurationBuilder {
    pub(crate) user_pool_arn: ::std::option::Option<::std::string::String>,
    pub(crate) client_ids: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl UpdateCognitoUserPoolConfigurationBuilder {
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool associated with this identity source.</p>
    pub fn user_pool_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_pool_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool associated with this identity source.</p>
    pub fn set_user_pool_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_pool_arn = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the Amazon Cognito user pool associated with this identity source.</p>
    pub fn get_user_pool_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_pool_arn
    }
    /// Appends an item to `client_ids`.
    ///
    /// To override the contents of this collection use [`set_client_ids`](Self::set_client_ids).
    ///
    /// <p>The client ID of an app client that is configured for the specified Amazon Cognito user pool.</p>
    pub fn client_ids(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.client_ids.unwrap_or_default();
        v.push(input.into());
        self.client_ids = ::std::option::Option::Some(v);
        self
    }
    /// <p>The client ID of an app client that is configured for the specified Amazon Cognito user pool.</p>
    pub fn set_client_ids(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.client_ids = input;
        self
    }
    /// <p>The client ID of an app client that is configured for the specified Amazon Cognito user pool.</p>
    pub fn get_client_ids(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.client_ids
    }
    /// Consumes the builder and constructs a [`UpdateCognitoUserPoolConfiguration`](crate::types::UpdateCognitoUserPoolConfiguration).
    pub fn build(self) -> crate::types::UpdateCognitoUserPoolConfiguration {
        crate::types::UpdateCognitoUserPoolConfiguration {
            user_pool_arn: self.user_pool_arn,
            client_ids: self.client_ids,
        }
    }
}
