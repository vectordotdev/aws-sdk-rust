// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains configuration information used when creating a new identity source.</p> <note>
/// <p>At this time, the only valid member of this structure is a Amazon Cognito user pool configuration.</p>
/// <p>You must specify a <code>userPoolArn</code>, and optionally, a <code>ClientId</code>.</p>
/// </note>
/// <p>This data type is used as a request parameter for the <a href="https://docs.aws.amazon.com/verifiedpermissions/latest/apireference/API_CreateIdentitySource.html">CreateIdentitySource</a> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum Configuration {
    /// <p>Contains configuration details of a Amazon Cognito user pool that Verified Permissions can use as a source of authenticated identities as entities. It specifies the <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of a Amazon Cognito user pool and one or more application client IDs.</p>
    /// <p>Example: <code>"configuration":{"cognitoUserPoolConfiguration":{"userPoolArn":"arn:aws:cognito-idp:us-east-1:123456789012:userpool/us-east-1_1a2b3c4d5","clientIds": ["a1b2c3d4e5f6g7h8i9j0kalbmc"]}}</code> </p>
    CognitoUserPoolConfiguration(crate::types::CognitoUserPoolConfiguration),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl Configuration {
    #[allow(irrefutable_let_patterns)]
    /// Tries to convert the enum instance into [`CognitoUserPoolConfiguration`](crate::types::Configuration::CognitoUserPoolConfiguration), extracting the inner [`CognitoUserPoolConfiguration`](crate::types::CognitoUserPoolConfiguration).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_cognito_user_pool_configuration(&self) -> ::std::result::Result<&crate::types::CognitoUserPoolConfiguration, &Self> {
        if let Configuration::CognitoUserPoolConfiguration(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`CognitoUserPoolConfiguration`](crate::types::Configuration::CognitoUserPoolConfiguration).
    pub fn is_cognito_user_pool_configuration(&self) -> bool {
        self.as_cognito_user_pool_configuration().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
