// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about on-call rotations that recur monthly.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MonthlySetting {
    /// <p>The day of the month when monthly recurring on-call rotations begin.</p>
    pub day_of_month: ::std::option::Option<i32>,
    /// <p>The time of day when a monthly recurring on-call shift rotation begins.</p>
    pub hand_off_time: ::std::option::Option<crate::types::HandOffTime>,
}
impl MonthlySetting {
    /// <p>The day of the month when monthly recurring on-call rotations begin.</p>
    pub fn day_of_month(&self) -> ::std::option::Option<i32> {
        self.day_of_month
    }
    /// <p>The time of day when a monthly recurring on-call shift rotation begins.</p>
    pub fn hand_off_time(&self) -> ::std::option::Option<&crate::types::HandOffTime> {
        self.hand_off_time.as_ref()
    }
}
impl MonthlySetting {
    /// Creates a new builder-style object to manufacture [`MonthlySetting`](crate::types::MonthlySetting).
    pub fn builder() -> crate::types::builders::MonthlySettingBuilder {
        crate::types::builders::MonthlySettingBuilder::default()
    }
}

/// A builder for [`MonthlySetting`](crate::types::MonthlySetting).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MonthlySettingBuilder {
    pub(crate) day_of_month: ::std::option::Option<i32>,
    pub(crate) hand_off_time: ::std::option::Option<crate::types::HandOffTime>,
}
impl MonthlySettingBuilder {
    /// <p>The day of the month when monthly recurring on-call rotations begin.</p>
    pub fn day_of_month(mut self, input: i32) -> Self {
        self.day_of_month = ::std::option::Option::Some(input);
        self
    }
    /// <p>The day of the month when monthly recurring on-call rotations begin.</p>
    pub fn set_day_of_month(mut self, input: ::std::option::Option<i32>) -> Self {
        self.day_of_month = input;
        self
    }
    /// <p>The day of the month when monthly recurring on-call rotations begin.</p>
    pub fn get_day_of_month(&self) -> &::std::option::Option<i32> {
        &self.day_of_month
    }
    /// <p>The time of day when a monthly recurring on-call shift rotation begins.</p>
    pub fn hand_off_time(mut self, input: crate::types::HandOffTime) -> Self {
        self.hand_off_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time of day when a monthly recurring on-call shift rotation begins.</p>
    pub fn set_hand_off_time(mut self, input: ::std::option::Option<crate::types::HandOffTime>) -> Self {
        self.hand_off_time = input;
        self
    }
    /// <p>The time of day when a monthly recurring on-call shift rotation begins.</p>
    pub fn get_hand_off_time(&self) -> &::std::option::Option<crate::types::HandOffTime> {
        &self.hand_off_time
    }
    /// Consumes the builder and constructs a [`MonthlySetting`](crate::types::MonthlySetting).
    pub fn build(self) -> crate::types::MonthlySetting {
        crate::types::MonthlySetting {
            day_of_month: self.day_of_month,
            hand_off_time: self.hand_off_time,
        }
    }
}
