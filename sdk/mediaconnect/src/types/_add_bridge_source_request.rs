// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Add a source to an existing bridge.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddBridgeSourceRequest {
    /// Add a flow source to an existing bridge.
    pub flow_source: ::std::option::Option<crate::types::AddBridgeFlowSourceRequest>,
    /// Add a network source to an existing bridge.
    pub network_source: ::std::option::Option<crate::types::AddBridgeNetworkSourceRequest>,
}
impl AddBridgeSourceRequest {
    /// Add a flow source to an existing bridge.
    pub fn flow_source(&self) -> ::std::option::Option<&crate::types::AddBridgeFlowSourceRequest> {
        self.flow_source.as_ref()
    }
    /// Add a network source to an existing bridge.
    pub fn network_source(&self) -> ::std::option::Option<&crate::types::AddBridgeNetworkSourceRequest> {
        self.network_source.as_ref()
    }
}
impl AddBridgeSourceRequest {
    /// Creates a new builder-style object to manufacture [`AddBridgeSourceRequest`](crate::types::AddBridgeSourceRequest).
    pub fn builder() -> crate::types::builders::AddBridgeSourceRequestBuilder {
        crate::types::builders::AddBridgeSourceRequestBuilder::default()
    }
}

/// A builder for [`AddBridgeSourceRequest`](crate::types::AddBridgeSourceRequest).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AddBridgeSourceRequestBuilder {
    pub(crate) flow_source: ::std::option::Option<crate::types::AddBridgeFlowSourceRequest>,
    pub(crate) network_source: ::std::option::Option<crate::types::AddBridgeNetworkSourceRequest>,
}
impl AddBridgeSourceRequestBuilder {
    /// Add a flow source to an existing bridge.
    pub fn flow_source(mut self, input: crate::types::AddBridgeFlowSourceRequest) -> Self {
        self.flow_source = ::std::option::Option::Some(input);
        self
    }
    /// Add a flow source to an existing bridge.
    pub fn set_flow_source(mut self, input: ::std::option::Option<crate::types::AddBridgeFlowSourceRequest>) -> Self {
        self.flow_source = input;
        self
    }
    /// Add a flow source to an existing bridge.
    pub fn get_flow_source(&self) -> &::std::option::Option<crate::types::AddBridgeFlowSourceRequest> {
        &self.flow_source
    }
    /// Add a network source to an existing bridge.
    pub fn network_source(mut self, input: crate::types::AddBridgeNetworkSourceRequest) -> Self {
        self.network_source = ::std::option::Option::Some(input);
        self
    }
    /// Add a network source to an existing bridge.
    pub fn set_network_source(mut self, input: ::std::option::Option<crate::types::AddBridgeNetworkSourceRequest>) -> Self {
        self.network_source = input;
        self
    }
    /// Add a network source to an existing bridge.
    pub fn get_network_source(&self) -> &::std::option::Option<crate::types::AddBridgeNetworkSourceRequest> {
        &self.network_source
    }
    /// Consumes the builder and constructs a [`AddBridgeSourceRequest`](crate::types::AddBridgeSourceRequest).
    pub fn build(self) -> crate::types::AddBridgeSourceRequest {
        crate::types::AddBridgeSourceRequest {
            flow_source: self.flow_source,
            network_source: self.network_source,
        }
    }
}
