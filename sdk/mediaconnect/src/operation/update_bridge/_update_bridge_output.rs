// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateBridgeOutput {
    /// A Bridge is the connection between your datacenter's Instances and the AWS cloud. A bridge can be used to send video from the AWS cloud to your datacenter or from your datacenter to the AWS cloud.
    pub bridge: ::std::option::Option<crate::types::Bridge>,
    _request_id: Option<String>,
}
impl UpdateBridgeOutput {
    /// A Bridge is the connection between your datacenter's Instances and the AWS cloud. A bridge can be used to send video from the AWS cloud to your datacenter or from your datacenter to the AWS cloud.
    pub fn bridge(&self) -> ::std::option::Option<&crate::types::Bridge> {
        self.bridge.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for UpdateBridgeOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateBridgeOutput {
    /// Creates a new builder-style object to manufacture [`UpdateBridgeOutput`](crate::operation::update_bridge::UpdateBridgeOutput).
    pub fn builder() -> crate::operation::update_bridge::builders::UpdateBridgeOutputBuilder {
        crate::operation::update_bridge::builders::UpdateBridgeOutputBuilder::default()
    }
}

/// A builder for [`UpdateBridgeOutput`](crate::operation::update_bridge::UpdateBridgeOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateBridgeOutputBuilder {
    pub(crate) bridge: ::std::option::Option<crate::types::Bridge>,
    _request_id: Option<String>,
}
impl UpdateBridgeOutputBuilder {
    /// A Bridge is the connection between your datacenter's Instances and the AWS cloud. A bridge can be used to send video from the AWS cloud to your datacenter or from your datacenter to the AWS cloud.
    pub fn bridge(mut self, input: crate::types::Bridge) -> Self {
        self.bridge = ::std::option::Option::Some(input);
        self
    }
    /// A Bridge is the connection between your datacenter's Instances and the AWS cloud. A bridge can be used to send video from the AWS cloud to your datacenter or from your datacenter to the AWS cloud.
    pub fn set_bridge(mut self, input: ::std::option::Option<crate::types::Bridge>) -> Self {
        self.bridge = input;
        self
    }
    /// A Bridge is the connection between your datacenter's Instances and the AWS cloud. A bridge can be used to send video from the AWS cloud to your datacenter or from your datacenter to the AWS cloud.
    pub fn get_bridge(&self) -> &::std::option::Option<crate::types::Bridge> {
        &self.bridge
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateBridgeOutput`](crate::operation::update_bridge::UpdateBridgeOutput).
    pub fn build(self) -> crate::operation::update_bridge::UpdateBridgeOutput {
        crate::operation::update_bridge::UpdateBridgeOutput {
            bridge: self.bridge,
            _request_id: self._request_id,
        }
    }
}
