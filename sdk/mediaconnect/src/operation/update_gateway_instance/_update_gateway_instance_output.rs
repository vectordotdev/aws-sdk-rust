// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateGatewayInstanceOutput {
    /// The availability of the instance to host new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED, no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can be added to this instance.
    pub bridge_placement: ::std::option::Option<crate::types::BridgePlacement>,
    /// The Amazon Resource Name (ARN) of the instance.
    pub gateway_instance_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl UpdateGatewayInstanceOutput {
    /// The availability of the instance to host new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED, no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can be added to this instance.
    pub fn bridge_placement(&self) -> ::std::option::Option<&crate::types::BridgePlacement> {
        self.bridge_placement.as_ref()
    }
    /// The Amazon Resource Name (ARN) of the instance.
    pub fn gateway_instance_arn(&self) -> ::std::option::Option<&str> {
        self.gateway_instance_arn.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for UpdateGatewayInstanceOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl UpdateGatewayInstanceOutput {
    /// Creates a new builder-style object to manufacture [`UpdateGatewayInstanceOutput`](crate::operation::update_gateway_instance::UpdateGatewayInstanceOutput).
    pub fn builder() -> crate::operation::update_gateway_instance::builders::UpdateGatewayInstanceOutputBuilder {
        crate::operation::update_gateway_instance::builders::UpdateGatewayInstanceOutputBuilder::default()
    }
}

/// A builder for [`UpdateGatewayInstanceOutput`](crate::operation::update_gateway_instance::UpdateGatewayInstanceOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateGatewayInstanceOutputBuilder {
    pub(crate) bridge_placement: ::std::option::Option<crate::types::BridgePlacement>,
    pub(crate) gateway_instance_arn: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl UpdateGatewayInstanceOutputBuilder {
    /// The availability of the instance to host new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED, no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can be added to this instance.
    pub fn bridge_placement(mut self, input: crate::types::BridgePlacement) -> Self {
        self.bridge_placement = ::std::option::Option::Some(input);
        self
    }
    /// The availability of the instance to host new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED, no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can be added to this instance.
    pub fn set_bridge_placement(mut self, input: ::std::option::Option<crate::types::BridgePlacement>) -> Self {
        self.bridge_placement = input;
        self
    }
    /// The availability of the instance to host new bridges. The bridgePlacement property can be LOCKED or AVAILABLE. If it is LOCKED, no new bridges can be deployed to this instance. If it is AVAILABLE, new bridges can be added to this instance.
    pub fn get_bridge_placement(&self) -> &::std::option::Option<crate::types::BridgePlacement> {
        &self.bridge_placement
    }
    /// The Amazon Resource Name (ARN) of the instance.
    pub fn gateway_instance_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.gateway_instance_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// The Amazon Resource Name (ARN) of the instance.
    pub fn set_gateway_instance_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.gateway_instance_arn = input;
        self
    }
    /// The Amazon Resource Name (ARN) of the instance.
    pub fn get_gateway_instance_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.gateway_instance_arn
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`UpdateGatewayInstanceOutput`](crate::operation::update_gateway_instance::UpdateGatewayInstanceOutput).
    pub fn build(self) -> crate::operation::update_gateway_instance::UpdateGatewayInstanceOutput {
        crate::operation::update_gateway_instance::UpdateGatewayInstanceOutput {
            bridge_placement: self.bridge_placement,
            gateway_instance_arn: self.gateway_instance_arn,
            _request_id: self._request_id,
        }
    }
}
