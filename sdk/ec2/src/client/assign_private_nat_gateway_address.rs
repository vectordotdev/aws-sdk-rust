// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssignPrivateNatGatewayAddress`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`nat_gateway_id(impl ::std::convert::Into<String>)`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::nat_gateway_id) / [`set_nat_gateway_id(Option<String>)`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::set_nat_gateway_id): <p>The ID of the NAT gateway.</p>
    ///   - [`private_ip_addresses(Vec<String>)`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::private_ip_addresses) / [`set_private_ip_addresses(Option<Vec<String>>)`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::set_private_ip_addresses): <p>The private IPv4 addresses you want to assign to the private NAT gateway.</p>
    ///   - [`private_ip_address_count(i32)`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::private_ip_address_count) / [`set_private_ip_address_count(Option<i32>)`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::set_private_ip_address_count): <p>The number of private IP addresses to assign to the NAT gateway. You can't specify this parameter when also specifying private IP addresses.</p>
    ///   - [`dry_run(bool)`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`AssignPrivateNatGatewayAddressOutput`](crate::operation::assign_private_nat_gateway_address::AssignPrivateNatGatewayAddressOutput) with field(s):
    ///   - [`nat_gateway_id(Option<String>)`](crate::operation::assign_private_nat_gateway_address::AssignPrivateNatGatewayAddressOutput::nat_gateway_id): <p>The ID of the NAT gateway.</p>
    ///   - [`nat_gateway_addresses(Option<Vec<NatGatewayAddress>>)`](crate::operation::assign_private_nat_gateway_address::AssignPrivateNatGatewayAddressOutput::nat_gateway_addresses): <p>NAT gateway IP addresses.</p>
    /// - On failure, responds with [`SdkError<AssignPrivateNatGatewayAddressError>`](crate::operation::assign_private_nat_gateway_address::AssignPrivateNatGatewayAddressError)
    pub fn assign_private_nat_gateway_address(
        &self,
    ) -> crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder {
        crate::operation::assign_private_nat_gateway_address::builders::AssignPrivateNatGatewayAddressFluentBuilder::new(self.handle.clone())
    }
}
