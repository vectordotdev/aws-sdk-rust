// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateAddress`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`allocation_id(impl ::std::convert::Into<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::allocation_id) / [`set_allocation_id(Option<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::set_allocation_id): <p>The allocation ID. This is required.</p>
    ///   - [`instance_id(impl ::std::convert::Into<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::instance_id) / [`set_instance_id(Option<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::set_instance_id): <p>The ID of the instance. The instance must have exactly one attached network interface. You can specify either the instance ID or the network interface ID, but not both.</p>
    ///   - [`public_ip(impl ::std::convert::Into<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::public_ip) / [`set_public_ip(Option<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::set_public_ip): <p>Deprecated.</p>
    ///   - [`allow_reassociation(bool)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::allow_reassociation) / [`set_allow_reassociation(Option<bool>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::set_allow_reassociation): <p>Reassociation is automatic, but you can specify false to ensure the operation fails if the Elastic IP address is already associated with another resource.</p>
    ///   - [`dry_run(bool)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`network_interface_id(impl ::std::convert::Into<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::network_interface_id) / [`set_network_interface_id(Option<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::set_network_interface_id): <p>The ID of the network interface. If the instance has more than one network interface, you must specify a network interface ID.</p>  <p>You can specify either the instance ID or the network interface ID, but not both. </p>
    ///   - [`private_ip_address(impl ::std::convert::Into<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::private_ip_address) / [`set_private_ip_address(Option<String>)`](crate::operation::associate_address::builders::AssociateAddressFluentBuilder::set_private_ip_address): <p>The primary or secondary private IP address to associate with the Elastic IP address. If no private IP address is specified, the Elastic IP address is associated with the primary private IP address.</p>
    /// - On success, responds with [`AssociateAddressOutput`](crate::operation::associate_address::AssociateAddressOutput) with field(s):
    ///   - [`association_id(Option<String>)`](crate::operation::associate_address::AssociateAddressOutput::association_id): <p>The ID that represents the association of the Elastic IP address with an instance.</p>
    /// - On failure, responds with [`SdkError<AssociateAddressError>`](crate::operation::associate_address::AssociateAddressError)
    pub fn associate_address(&self) -> crate::operation::associate_address::builders::AssociateAddressFluentBuilder {
        crate::operation::associate_address::builders::AssociateAddressFluentBuilder::new(self.handle.clone())
    }
}
