// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateVerifiedAccessEndpoint`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`verified_access_group_id(impl ::std::convert::Into<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::verified_access_group_id) / [`set_verified_access_group_id(Option<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_verified_access_group_id): <p>The ID of the Verified Access group to associate the endpoint with.</p>
    ///   - [`endpoint_type(VerifiedAccessEndpointType)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::endpoint_type) / [`set_endpoint_type(Option<VerifiedAccessEndpointType>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_endpoint_type): <p>The type of Verified Access endpoint to create.</p>
    ///   - [`attachment_type(VerifiedAccessEndpointAttachmentType)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::attachment_type) / [`set_attachment_type(Option<VerifiedAccessEndpointAttachmentType>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_attachment_type): <p>The type of attachment.</p>
    ///   - [`domain_certificate_arn(impl ::std::convert::Into<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::domain_certificate_arn) / [`set_domain_certificate_arn(Option<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_domain_certificate_arn): <p>The ARN of the public TLS/SSL certificate in Amazon Web Services Certificate Manager to associate with the endpoint. The CN in the certificate must match the DNS name your end users will use to reach your application.</p>
    ///   - [`application_domain(impl ::std::convert::Into<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::application_domain) / [`set_application_domain(Option<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_application_domain): <p>The DNS name for users to reach your application.</p>
    ///   - [`endpoint_domain_prefix(impl ::std::convert::Into<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::endpoint_domain_prefix) / [`set_endpoint_domain_prefix(Option<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_endpoint_domain_prefix): <p>A custom identifier that is prepended to the DNS name that is generated for the endpoint.</p>
    ///   - [`security_group_ids(Vec<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec<String>>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_security_group_ids): <p>The IDs of the security groups to associate with the Verified Access endpoint.</p>
    ///   - [`load_balancer_options(CreateVerifiedAccessEndpointLoadBalancerOptions)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::load_balancer_options) / [`set_load_balancer_options(Option<CreateVerifiedAccessEndpointLoadBalancerOptions>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_load_balancer_options): <p>The load balancer details. This parameter is required if the endpoint type is <code>load-balancer</code>.</p>
    ///   - [`network_interface_options(CreateVerifiedAccessEndpointEniOptions)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::network_interface_options) / [`set_network_interface_options(Option<CreateVerifiedAccessEndpointEniOptions>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_network_interface_options): <p>The network interface details. This parameter is required if the endpoint type is <code>network-interface</code>.</p>
    ///   - [`description(impl ::std::convert::Into<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_description): <p>A description for the Verified Access endpoint.</p>
    ///   - [`policy_document(impl ::std::convert::Into<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::policy_document) / [`set_policy_document(Option<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_policy_document): <p>The Verified Access policy document.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_tag_specifications): <p>The tags to assign to the Verified Access endpoint.</p>
    ///   - [`client_token(impl ::std::convert::Into<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_client_token): <p>A unique, case-sensitive token that you provide to ensure idempotency of your modification request. For more information, see <a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/Run_Instance_Idempotency.html">Ensuring Idempotency</a>.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    /// - On success, responds with [`CreateVerifiedAccessEndpointOutput`](crate::operation::create_verified_access_endpoint::CreateVerifiedAccessEndpointOutput) with field(s):
    ///   - [`verified_access_endpoint(Option<VerifiedAccessEndpoint>)`](crate::operation::create_verified_access_endpoint::CreateVerifiedAccessEndpointOutput::verified_access_endpoint): <p>The ID of the Verified Access endpoint.</p>
    /// - On failure, responds with [`SdkError<CreateVerifiedAccessEndpointError>`](crate::operation::create_verified_access_endpoint::CreateVerifiedAccessEndpointError)
    pub fn create_verified_access_endpoint(
        &self,
    ) -> crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder {
        crate::operation::create_verified_access_endpoint::builders::CreateVerifiedAccessEndpointFluentBuilder::new(self.handle.clone())
    }
}
