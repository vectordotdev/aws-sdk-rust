// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateInstanceConnectEndpoint`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`dry_run(bool)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`subnet_id(impl ::std::convert::Into<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::subnet_id) / [`set_subnet_id(Option<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_subnet_id): <p>The ID of the subnet in which to create the EC2 Instance Connect Endpoint.</p>
    ///   - [`security_group_ids(Vec<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::security_group_ids) / [`set_security_group_ids(Option<Vec<String>>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_security_group_ids): <p>One or more security groups to associate with the endpoint. If you don't specify a security group, the default security group for your VPC will be associated with the endpoint.</p>
    ///   - [`preserve_client_ip(bool)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::preserve_client_ip) / [`set_preserve_client_ip(Option<bool>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_preserve_client_ip): <p>Indicates whether your client's IP address is preserved as the source. The value is <code>true</code> or <code>false</code>.</p>  <ul>   <li> <p>If <code>true</code>, your client's IP address is used when you connect to a resource.</p> </li>   <li> <p>If <code>false</code>, the elastic network interface IP address is used when you connect to a resource.</p> </li>  </ul>  <p>Default: <code>true</code> </p>
    ///   - [`client_token(impl ::std::convert::Into<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_client_token): <p>Unique, case-sensitive identifier that you provide to ensure the idempotency of the request.</p>
    ///   - [`tag_specifications(Vec<TagSpecification>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::tag_specifications) / [`set_tag_specifications(Option<Vec<TagSpecification>>)`](crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::set_tag_specifications): <p>The tags to apply to the EC2 Instance Connect Endpoint during creation.</p>
    /// - On success, responds with [`CreateInstanceConnectEndpointOutput`](crate::operation::create_instance_connect_endpoint::CreateInstanceConnectEndpointOutput) with field(s):
    ///   - [`instance_connect_endpoint(Option<Ec2InstanceConnectEndpoint>)`](crate::operation::create_instance_connect_endpoint::CreateInstanceConnectEndpointOutput::instance_connect_endpoint): <p>Information about the EC2 Instance Connect Endpoint.</p>
    ///   - [`client_token(Option<String>)`](crate::operation::create_instance_connect_endpoint::CreateInstanceConnectEndpointOutput::client_token): <p>Unique, case-sensitive idempotency token provided by the client in the the request.</p>
    /// - On failure, responds with [`SdkError<CreateInstanceConnectEndpointError>`](crate::operation::create_instance_connect_endpoint::CreateInstanceConnectEndpointError)
    pub fn create_instance_connect_endpoint(
        &self,
    ) -> crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder {
        crate::operation::create_instance_connect_endpoint::builders::CreateInstanceConnectEndpointFluentBuilder::new(self.handle.clone())
    }
}
