// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLocalGatewayRoute`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`destination_cidr_block(impl ::std::convert::Into<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::destination_cidr_block) / [`set_destination_cidr_block(Option<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::set_destination_cidr_block): <p>The CIDR range used for destination matches. Routing decisions are based on the most specific match.</p>
    ///   - [`local_gateway_route_table_id(impl ::std::convert::Into<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::local_gateway_route_table_id) / [`set_local_gateway_route_table_id(Option<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::set_local_gateway_route_table_id): <p>The ID of the local gateway route table.</p>
    ///   - [`local_gateway_virtual_interface_group_id(impl ::std::convert::Into<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::local_gateway_virtual_interface_group_id) / [`set_local_gateway_virtual_interface_group_id(Option<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::set_local_gateway_virtual_interface_group_id): <p>The ID of the virtual interface group.</p>
    ///   - [`dry_run(bool)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::dry_run) / [`set_dry_run(Option<bool>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::set_dry_run): <p>Checks whether you have the required permissions for the action, without actually making the request, and provides an error response. If you have the required permissions, the error response is <code>DryRunOperation</code>. Otherwise, it is <code>UnauthorizedOperation</code>.</p>
    ///   - [`network_interface_id(impl ::std::convert::Into<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::network_interface_id) / [`set_network_interface_id(Option<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::set_network_interface_id): <p>The ID of the network interface.</p>
    ///   - [`destination_prefix_list_id(impl ::std::convert::Into<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::destination_prefix_list_id) / [`set_destination_prefix_list_id(Option<String>)`](crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::set_destination_prefix_list_id): <p> The ID of the prefix list. Use a prefix list in place of <code>DestinationCidrBlock</code>. You cannot use <code>DestinationPrefixListId</code> and <code>DestinationCidrBlock</code> in the same request. </p>
    /// - On success, responds with [`CreateLocalGatewayRouteOutput`](crate::operation::create_local_gateway_route::CreateLocalGatewayRouteOutput) with field(s):
    ///   - [`route(Option<LocalGatewayRoute>)`](crate::operation::create_local_gateway_route::CreateLocalGatewayRouteOutput::route): <p>Information about the route.</p>
    /// - On failure, responds with [`SdkError<CreateLocalGatewayRouteError>`](crate::operation::create_local_gateway_route::CreateLocalGatewayRouteError)
    pub fn create_local_gateway_route(&self) -> crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder {
        crate::operation::create_local_gateway_route::builders::CreateLocalGatewayRouteFluentBuilder::new(self.handle.clone())
    }
}
