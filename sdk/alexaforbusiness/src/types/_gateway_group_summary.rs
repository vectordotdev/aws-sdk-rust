// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of a gateway group.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GatewayGroupSummary {
    /// <p>The ARN of the gateway group.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the gateway group.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The description of the gateway group.</p>
    pub description: ::std::option::Option<::std::string::String>,
}
impl GatewayGroupSummary {
    /// <p>The ARN of the gateway group.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>The name of the gateway group.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The description of the gateway group.</p>
    pub fn description(&self) -> ::std::option::Option<&str> {
        self.description.as_deref()
    }
}
impl GatewayGroupSummary {
    /// Creates a new builder-style object to manufacture [`GatewayGroupSummary`](crate::types::GatewayGroupSummary).
    pub fn builder() -> crate::types::builders::GatewayGroupSummaryBuilder {
        crate::types::builders::GatewayGroupSummaryBuilder::default()
    }
}

/// A builder for [`GatewayGroupSummary`](crate::types::GatewayGroupSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GatewayGroupSummaryBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) description: ::std::option::Option<::std::string::String>,
}
impl GatewayGroupSummaryBuilder {
    /// <p>The ARN of the gateway group.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the gateway group.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ARN of the gateway group.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// <p>The name of the gateway group.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the gateway group.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the gateway group.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The description of the gateway group.</p>
    pub fn description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The description of the gateway group.</p>
    pub fn set_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.description = input;
        self
    }
    /// <p>The description of the gateway group.</p>
    pub fn get_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.description
    }
    /// Consumes the builder and constructs a [`GatewayGroupSummary`](crate::types::GatewayGroupSummary).
    pub fn build(self) -> crate::types::GatewayGroupSummary {
        crate::types::GatewayGroupSummary {
            arn: self.arn,
            name: self.name,
            description: self.description,
        }
    }
}
