// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the installed EKS add-on (GuardDuty security agent).</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AddonDetails {
    /// <p>Version of the installed EKS add-on.</p>
    pub addon_version: ::std::option::Option<::std::string::String>,
    /// <p>Status of the installed EKS add-on.</p>
    pub addon_status: ::std::option::Option<::std::string::String>,
}
impl AddonDetails {
    /// <p>Version of the installed EKS add-on.</p>
    pub fn addon_version(&self) -> ::std::option::Option<&str> {
        self.addon_version.as_deref()
    }
    /// <p>Status of the installed EKS add-on.</p>
    pub fn addon_status(&self) -> ::std::option::Option<&str> {
        self.addon_status.as_deref()
    }
}
impl AddonDetails {
    /// Creates a new builder-style object to manufacture [`AddonDetails`](crate::types::AddonDetails).
    pub fn builder() -> crate::types::builders::AddonDetailsBuilder {
        crate::types::builders::AddonDetailsBuilder::default()
    }
}

/// A builder for [`AddonDetails`](crate::types::AddonDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AddonDetailsBuilder {
    pub(crate) addon_version: ::std::option::Option<::std::string::String>,
    pub(crate) addon_status: ::std::option::Option<::std::string::String>,
}
impl AddonDetailsBuilder {
    /// <p>Version of the installed EKS add-on.</p>
    pub fn addon_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.addon_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Version of the installed EKS add-on.</p>
    pub fn set_addon_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.addon_version = input;
        self
    }
    /// <p>Version of the installed EKS add-on.</p>
    pub fn get_addon_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.addon_version
    }
    /// <p>Status of the installed EKS add-on.</p>
    pub fn addon_status(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.addon_status = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Status of the installed EKS add-on.</p>
    pub fn set_addon_status(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.addon_status = input;
        self
    }
    /// <p>Status of the installed EKS add-on.</p>
    pub fn get_addon_status(&self) -> &::std::option::Option<::std::string::String> {
        &self.addon_status
    }
    /// Consumes the builder and constructs a [`AddonDetails`](crate::types::AddonDetails).
    pub fn build(self) -> crate::types::AddonDetails {
        crate::types::AddonDetails {
            addon_version: self.addon_version,
            addon_status: self.addon_status,
        }
    }
}
