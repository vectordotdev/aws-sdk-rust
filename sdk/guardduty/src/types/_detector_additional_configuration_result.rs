// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about the additional configuration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DetectorAdditionalConfigurationResult {
    /// <p>Name of the additional configuration.</p>
    pub name: ::std::option::Option<crate::types::FeatureAdditionalConfiguration>,
    /// <p>Status of the additional configuration.</p>
    pub status: ::std::option::Option<crate::types::FeatureStatus>,
    /// <p>The timestamp at which the additional configuration was last updated. This is in UTC format.</p>
    pub updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DetectorAdditionalConfigurationResult {
    /// <p>Name of the additional configuration.</p>
    pub fn name(&self) -> ::std::option::Option<&crate::types::FeatureAdditionalConfiguration> {
        self.name.as_ref()
    }
    /// <p>Status of the additional configuration.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::FeatureStatus> {
        self.status.as_ref()
    }
    /// <p>The timestamp at which the additional configuration was last updated. This is in UTC format.</p>
    pub fn updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl DetectorAdditionalConfigurationResult {
    /// Creates a new builder-style object to manufacture [`DetectorAdditionalConfigurationResult`](crate::types::DetectorAdditionalConfigurationResult).
    pub fn builder() -> crate::types::builders::DetectorAdditionalConfigurationResultBuilder {
        crate::types::builders::DetectorAdditionalConfigurationResultBuilder::default()
    }
}

/// A builder for [`DetectorAdditionalConfigurationResult`](crate::types::DetectorAdditionalConfigurationResult).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DetectorAdditionalConfigurationResultBuilder {
    pub(crate) name: ::std::option::Option<crate::types::FeatureAdditionalConfiguration>,
    pub(crate) status: ::std::option::Option<crate::types::FeatureStatus>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DetectorAdditionalConfigurationResultBuilder {
    /// <p>Name of the additional configuration.</p>
    pub fn name(mut self, input: crate::types::FeatureAdditionalConfiguration) -> Self {
        self.name = ::std::option::Option::Some(input);
        self
    }
    /// <p>Name of the additional configuration.</p>
    pub fn set_name(mut self, input: ::std::option::Option<crate::types::FeatureAdditionalConfiguration>) -> Self {
        self.name = input;
        self
    }
    /// <p>Name of the additional configuration.</p>
    pub fn get_name(&self) -> &::std::option::Option<crate::types::FeatureAdditionalConfiguration> {
        &self.name
    }
    /// <p>Status of the additional configuration.</p>
    pub fn status(mut self, input: crate::types::FeatureStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Status of the additional configuration.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::FeatureStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Status of the additional configuration.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::FeatureStatus> {
        &self.status
    }
    /// <p>The timestamp at which the additional configuration was last updated. This is in UTC format.</p>
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp at which the additional configuration was last updated. This is in UTC format.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp at which the additional configuration was last updated. This is in UTC format.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`DetectorAdditionalConfigurationResult`](crate::types::DetectorAdditionalConfigurationResult).
    pub fn build(self) -> crate::types::DetectorAdditionalConfigurationResult {
        crate::types::DetectorAdditionalConfigurationResult {
            name: self.name,
            status: self.status,
            updated_at: self.updated_at,
        }
    }
}
