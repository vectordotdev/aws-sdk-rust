// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the API action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsApiCallAction {
    /// <p>The Amazon Web Services API name.</p>
    pub api: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Web Services API caller type.</p>
    pub caller_type: ::std::option::Option<::std::string::String>,
    /// <p>The domain information for the Amazon Web Services API call.</p>
    pub domain_details: ::std::option::Option<crate::types::DomainDetails>,
    /// <p>The error code of the failed Amazon Web Services API action.</p>
    pub error_code: ::std::option::Option<::std::string::String>,
    /// <p>The agent through which the API request was made.</p>
    pub user_agent: ::std::option::Option<::std::string::String>,
    /// <p>The remote IP information of the connection that initiated the Amazon Web Services API call.</p>
    pub remote_ip_details: ::std::option::Option<crate::types::RemoteIpDetails>,
    /// <p>The Amazon Web Services service name whose API was invoked.</p>
    pub service_name: ::std::option::Option<::std::string::String>,
    /// <p>The details of the Amazon Web Services account that made the API call. This field appears if the call was made from outside your account.</p>
    pub remote_account_details: ::std::option::Option<crate::types::RemoteAccountDetails>,
    /// <p>The details of the Amazon Web Services account that made the API call. This field identifies the resources that were affected by this API call.</p>
    pub affected_resources: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl AwsApiCallAction {
    /// <p>The Amazon Web Services API name.</p>
    pub fn api(&self) -> ::std::option::Option<&str> {
        self.api.as_deref()
    }
    /// <p>The Amazon Web Services API caller type.</p>
    pub fn caller_type(&self) -> ::std::option::Option<&str> {
        self.caller_type.as_deref()
    }
    /// <p>The domain information for the Amazon Web Services API call.</p>
    pub fn domain_details(&self) -> ::std::option::Option<&crate::types::DomainDetails> {
        self.domain_details.as_ref()
    }
    /// <p>The error code of the failed Amazon Web Services API action.</p>
    pub fn error_code(&self) -> ::std::option::Option<&str> {
        self.error_code.as_deref()
    }
    /// <p>The agent through which the API request was made.</p>
    pub fn user_agent(&self) -> ::std::option::Option<&str> {
        self.user_agent.as_deref()
    }
    /// <p>The remote IP information of the connection that initiated the Amazon Web Services API call.</p>
    pub fn remote_ip_details(&self) -> ::std::option::Option<&crate::types::RemoteIpDetails> {
        self.remote_ip_details.as_ref()
    }
    /// <p>The Amazon Web Services service name whose API was invoked.</p>
    pub fn service_name(&self) -> ::std::option::Option<&str> {
        self.service_name.as_deref()
    }
    /// <p>The details of the Amazon Web Services account that made the API call. This field appears if the call was made from outside your account.</p>
    pub fn remote_account_details(&self) -> ::std::option::Option<&crate::types::RemoteAccountDetails> {
        self.remote_account_details.as_ref()
    }
    /// <p>The details of the Amazon Web Services account that made the API call. This field identifies the resources that were affected by this API call.</p>
    pub fn affected_resources(&self) -> ::std::option::Option<&::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        self.affected_resources.as_ref()
    }
}
impl AwsApiCallAction {
    /// Creates a new builder-style object to manufacture [`AwsApiCallAction`](crate::types::AwsApiCallAction).
    pub fn builder() -> crate::types::builders::AwsApiCallActionBuilder {
        crate::types::builders::AwsApiCallActionBuilder::default()
    }
}

/// A builder for [`AwsApiCallAction`](crate::types::AwsApiCallAction).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsApiCallActionBuilder {
    pub(crate) api: ::std::option::Option<::std::string::String>,
    pub(crate) caller_type: ::std::option::Option<::std::string::String>,
    pub(crate) domain_details: ::std::option::Option<crate::types::DomainDetails>,
    pub(crate) error_code: ::std::option::Option<::std::string::String>,
    pub(crate) user_agent: ::std::option::Option<::std::string::String>,
    pub(crate) remote_ip_details: ::std::option::Option<crate::types::RemoteIpDetails>,
    pub(crate) service_name: ::std::option::Option<::std::string::String>,
    pub(crate) remote_account_details: ::std::option::Option<crate::types::RemoteAccountDetails>,
    pub(crate) affected_resources: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
}
impl AwsApiCallActionBuilder {
    /// <p>The Amazon Web Services API name.</p>
    pub fn api(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.api = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services API name.</p>
    pub fn set_api(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.api = input;
        self
    }
    /// <p>The Amazon Web Services API name.</p>
    pub fn get_api(&self) -> &::std::option::Option<::std::string::String> {
        &self.api
    }
    /// <p>The Amazon Web Services API caller type.</p>
    pub fn caller_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.caller_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services API caller type.</p>
    pub fn set_caller_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.caller_type = input;
        self
    }
    /// <p>The Amazon Web Services API caller type.</p>
    pub fn get_caller_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.caller_type
    }
    /// <p>The domain information for the Amazon Web Services API call.</p>
    pub fn domain_details(mut self, input: crate::types::DomainDetails) -> Self {
        self.domain_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>The domain information for the Amazon Web Services API call.</p>
    pub fn set_domain_details(mut self, input: ::std::option::Option<crate::types::DomainDetails>) -> Self {
        self.domain_details = input;
        self
    }
    /// <p>The domain information for the Amazon Web Services API call.</p>
    pub fn get_domain_details(&self) -> &::std::option::Option<crate::types::DomainDetails> {
        &self.domain_details
    }
    /// <p>The error code of the failed Amazon Web Services API action.</p>
    pub fn error_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error code of the failed Amazon Web Services API action.</p>
    pub fn set_error_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_code = input;
        self
    }
    /// <p>The error code of the failed Amazon Web Services API action.</p>
    pub fn get_error_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_code
    }
    /// <p>The agent through which the API request was made.</p>
    pub fn user_agent(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.user_agent = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The agent through which the API request was made.</p>
    pub fn set_user_agent(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.user_agent = input;
        self
    }
    /// <p>The agent through which the API request was made.</p>
    pub fn get_user_agent(&self) -> &::std::option::Option<::std::string::String> {
        &self.user_agent
    }
    /// <p>The remote IP information of the connection that initiated the Amazon Web Services API call.</p>
    pub fn remote_ip_details(mut self, input: crate::types::RemoteIpDetails) -> Self {
        self.remote_ip_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>The remote IP information of the connection that initiated the Amazon Web Services API call.</p>
    pub fn set_remote_ip_details(mut self, input: ::std::option::Option<crate::types::RemoteIpDetails>) -> Self {
        self.remote_ip_details = input;
        self
    }
    /// <p>The remote IP information of the connection that initiated the Amazon Web Services API call.</p>
    pub fn get_remote_ip_details(&self) -> &::std::option::Option<crate::types::RemoteIpDetails> {
        &self.remote_ip_details
    }
    /// <p>The Amazon Web Services service name whose API was invoked.</p>
    pub fn service_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.service_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Web Services service name whose API was invoked.</p>
    pub fn set_service_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.service_name = input;
        self
    }
    /// <p>The Amazon Web Services service name whose API was invoked.</p>
    pub fn get_service_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.service_name
    }
    /// <p>The details of the Amazon Web Services account that made the API call. This field appears if the call was made from outside your account.</p>
    pub fn remote_account_details(mut self, input: crate::types::RemoteAccountDetails) -> Self {
        self.remote_account_details = ::std::option::Option::Some(input);
        self
    }
    /// <p>The details of the Amazon Web Services account that made the API call. This field appears if the call was made from outside your account.</p>
    pub fn set_remote_account_details(mut self, input: ::std::option::Option<crate::types::RemoteAccountDetails>) -> Self {
        self.remote_account_details = input;
        self
    }
    /// <p>The details of the Amazon Web Services account that made the API call. This field appears if the call was made from outside your account.</p>
    pub fn get_remote_account_details(&self) -> &::std::option::Option<crate::types::RemoteAccountDetails> {
        &self.remote_account_details
    }
    /// Adds a key-value pair to `affected_resources`.
    ///
    /// To override the contents of this collection use [`set_affected_resources`](Self::set_affected_resources).
    ///
    /// <p>The details of the Amazon Web Services account that made the API call. This field identifies the resources that were affected by this API call.</p>
    pub fn affected_resources(
        mut self,
        k: impl ::std::convert::Into<::std::string::String>,
        v: impl ::std::convert::Into<::std::string::String>,
    ) -> Self {
        let mut hash_map = self.affected_resources.unwrap_or_default();
        hash_map.insert(k.into(), v.into());
        self.affected_resources = ::std::option::Option::Some(hash_map);
        self
    }
    /// <p>The details of the Amazon Web Services account that made the API call. This field identifies the resources that were affected by this API call.</p>
    pub fn set_affected_resources(
        mut self,
        input: ::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>>,
    ) -> Self {
        self.affected_resources = input;
        self
    }
    /// <p>The details of the Amazon Web Services account that made the API call. This field identifies the resources that were affected by this API call.</p>
    pub fn get_affected_resources(&self) -> &::std::option::Option<::std::collections::HashMap<::std::string::String, ::std::string::String>> {
        &self.affected_resources
    }
    /// Consumes the builder and constructs a [`AwsApiCallAction`](crate::types::AwsApiCallAction).
    pub fn build(self) -> crate::types::AwsApiCallAction {
        crate::types::AwsApiCallAction {
            api: self.api,
            caller_type: self.caller_type,
            domain_details: self.domain_details,
            error_code: self.error_code,
            user_agent: self.user_agent,
            remote_ip_details: self.remote_ip_details,
            service_name: self.service_name,
            remote_account_details: self.remote_account_details,
            affected_resources: self.affected_resources,
        }
    }
}
