// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Specifies one or more service names that are used to list anomalies. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListAnomaliesForInsightFilters {
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub service_collection: ::std::option::Option<crate::types::ServiceCollection>,
}
impl ListAnomaliesForInsightFilters {
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn service_collection(&self) -> ::std::option::Option<&crate::types::ServiceCollection> {
        self.service_collection.as_ref()
    }
}
impl ListAnomaliesForInsightFilters {
    /// Creates a new builder-style object to manufacture [`ListAnomaliesForInsightFilters`](crate::types::ListAnomaliesForInsightFilters).
    pub fn builder() -> crate::types::builders::ListAnomaliesForInsightFiltersBuilder {
        crate::types::builders::ListAnomaliesForInsightFiltersBuilder::default()
    }
}

/// A builder for [`ListAnomaliesForInsightFilters`](crate::types::ListAnomaliesForInsightFilters).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListAnomaliesForInsightFiltersBuilder {
    pub(crate) service_collection: ::std::option::Option<crate::types::ServiceCollection>,
}
impl ListAnomaliesForInsightFiltersBuilder {
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn service_collection(mut self, input: crate::types::ServiceCollection) -> Self {
        self.service_collection = ::std::option::Option::Some(input);
        self
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn set_service_collection(mut self, input: ::std::option::Option<crate::types::ServiceCollection>) -> Self {
        self.service_collection = input;
        self
    }
    /// <p>A collection of the names of Amazon Web Services services.</p>
    pub fn get_service_collection(&self) -> &::std::option::Option<crate::types::ServiceCollection> {
        &self.service_collection
    }
    /// Consumes the builder and constructs a [`ListAnomaliesForInsightFilters`](crate::types::ListAnomaliesForInsightFilters).
    pub fn build(self) -> crate::types::ListAnomaliesForInsightFilters {
        crate::types::ListAnomaliesForInsightFilters {
            service_collection: self.service_collection,
        }
    }
}
