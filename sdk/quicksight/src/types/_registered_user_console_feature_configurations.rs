// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The feature configurations of an embedded Amazon QuickSight console.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RegisteredUserConsoleFeatureConfigurations {
    /// <p>The state persistence configurations of an embedded Amazon QuickSight console.</p>
    pub state_persistence: ::std::option::Option<crate::types::StatePersistenceConfigurations>,
}
impl RegisteredUserConsoleFeatureConfigurations {
    /// <p>The state persistence configurations of an embedded Amazon QuickSight console.</p>
    pub fn state_persistence(&self) -> ::std::option::Option<&crate::types::StatePersistenceConfigurations> {
        self.state_persistence.as_ref()
    }
}
impl RegisteredUserConsoleFeatureConfigurations {
    /// Creates a new builder-style object to manufacture [`RegisteredUserConsoleFeatureConfigurations`](crate::types::RegisteredUserConsoleFeatureConfigurations).
    pub fn builder() -> crate::types::builders::RegisteredUserConsoleFeatureConfigurationsBuilder {
        crate::types::builders::RegisteredUserConsoleFeatureConfigurationsBuilder::default()
    }
}

/// A builder for [`RegisteredUserConsoleFeatureConfigurations`](crate::types::RegisteredUserConsoleFeatureConfigurations).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RegisteredUserConsoleFeatureConfigurationsBuilder {
    pub(crate) state_persistence: ::std::option::Option<crate::types::StatePersistenceConfigurations>,
}
impl RegisteredUserConsoleFeatureConfigurationsBuilder {
    /// <p>The state persistence configurations of an embedded Amazon QuickSight console.</p>
    pub fn state_persistence(mut self, input: crate::types::StatePersistenceConfigurations) -> Self {
        self.state_persistence = ::std::option::Option::Some(input);
        self
    }
    /// <p>The state persistence configurations of an embedded Amazon QuickSight console.</p>
    pub fn set_state_persistence(mut self, input: ::std::option::Option<crate::types::StatePersistenceConfigurations>) -> Self {
        self.state_persistence = input;
        self
    }
    /// <p>The state persistence configurations of an embedded Amazon QuickSight console.</p>
    pub fn get_state_persistence(&self) -> &::std::option::Option<crate::types::StatePersistenceConfigurations> {
        &self.state_persistence
    }
    /// Consumes the builder and constructs a [`RegisteredUserConsoleFeatureConfigurations`](crate::types::RegisteredUserConsoleFeatureConfigurations).
    pub fn build(self) -> crate::types::RegisteredUserConsoleFeatureConfigurations {
        crate::types::RegisteredUserConsoleFeatureConfigurations {
            state_persistence: self.state_persistence,
        }
    }
}
