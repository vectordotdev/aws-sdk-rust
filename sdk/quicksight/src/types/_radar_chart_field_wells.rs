// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The field wells of a radar chart visual.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RadarChartFieldWells {
    /// <p>The aggregated field wells of a radar chart visual.</p>
    pub radar_chart_aggregated_field_wells: ::std::option::Option<crate::types::RadarChartAggregatedFieldWells>,
}
impl RadarChartFieldWells {
    /// <p>The aggregated field wells of a radar chart visual.</p>
    pub fn radar_chart_aggregated_field_wells(&self) -> ::std::option::Option<&crate::types::RadarChartAggregatedFieldWells> {
        self.radar_chart_aggregated_field_wells.as_ref()
    }
}
impl RadarChartFieldWells {
    /// Creates a new builder-style object to manufacture [`RadarChartFieldWells`](crate::types::RadarChartFieldWells).
    pub fn builder() -> crate::types::builders::RadarChartFieldWellsBuilder {
        crate::types::builders::RadarChartFieldWellsBuilder::default()
    }
}

/// A builder for [`RadarChartFieldWells`](crate::types::RadarChartFieldWells).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RadarChartFieldWellsBuilder {
    pub(crate) radar_chart_aggregated_field_wells: ::std::option::Option<crate::types::RadarChartAggregatedFieldWells>,
}
impl RadarChartFieldWellsBuilder {
    /// <p>The aggregated field wells of a radar chart visual.</p>
    pub fn radar_chart_aggregated_field_wells(mut self, input: crate::types::RadarChartAggregatedFieldWells) -> Self {
        self.radar_chart_aggregated_field_wells = ::std::option::Option::Some(input);
        self
    }
    /// <p>The aggregated field wells of a radar chart visual.</p>
    pub fn set_radar_chart_aggregated_field_wells(mut self, input: ::std::option::Option<crate::types::RadarChartAggregatedFieldWells>) -> Self {
        self.radar_chart_aggregated_field_wells = input;
        self
    }
    /// <p>The aggregated field wells of a radar chart visual.</p>
    pub fn get_radar_chart_aggregated_field_wells(&self) -> &::std::option::Option<crate::types::RadarChartAggregatedFieldWells> {
        &self.radar_chart_aggregated_field_wells
    }
    /// Consumes the builder and constructs a [`RadarChartFieldWells`](crate::types::RadarChartFieldWells).
    pub fn build(self) -> crate::types::RadarChartFieldWells {
        crate::types::RadarChartFieldWells {
            radar_chart_aggregated_field_wells: self.radar_chart_aggregated_field_wells,
        }
    }
}
