// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that represents a data aggregation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataAggregation {
    /// <p>The level of time precision that is used to aggregate <code>DateTime</code> values.</p>
    pub dataset_row_date_granularity: ::std::option::Option<crate::types::TopicTimeGranularity>,
    /// <p>The column name for the default date.</p>
    pub default_date_column_name: ::std::option::Option<::std::string::String>,
}
impl DataAggregation {
    /// <p>The level of time precision that is used to aggregate <code>DateTime</code> values.</p>
    pub fn dataset_row_date_granularity(&self) -> ::std::option::Option<&crate::types::TopicTimeGranularity> {
        self.dataset_row_date_granularity.as_ref()
    }
    /// <p>The column name for the default date.</p>
    pub fn default_date_column_name(&self) -> ::std::option::Option<&str> {
        self.default_date_column_name.as_deref()
    }
}
impl DataAggregation {
    /// Creates a new builder-style object to manufacture [`DataAggregation`](crate::types::DataAggregation).
    pub fn builder() -> crate::types::builders::DataAggregationBuilder {
        crate::types::builders::DataAggregationBuilder::default()
    }
}

/// A builder for [`DataAggregation`](crate::types::DataAggregation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DataAggregationBuilder {
    pub(crate) dataset_row_date_granularity: ::std::option::Option<crate::types::TopicTimeGranularity>,
    pub(crate) default_date_column_name: ::std::option::Option<::std::string::String>,
}
impl DataAggregationBuilder {
    /// <p>The level of time precision that is used to aggregate <code>DateTime</code> values.</p>
    pub fn dataset_row_date_granularity(mut self, input: crate::types::TopicTimeGranularity) -> Self {
        self.dataset_row_date_granularity = ::std::option::Option::Some(input);
        self
    }
    /// <p>The level of time precision that is used to aggregate <code>DateTime</code> values.</p>
    pub fn set_dataset_row_date_granularity(mut self, input: ::std::option::Option<crate::types::TopicTimeGranularity>) -> Self {
        self.dataset_row_date_granularity = input;
        self
    }
    /// <p>The level of time precision that is used to aggregate <code>DateTime</code> values.</p>
    pub fn get_dataset_row_date_granularity(&self) -> &::std::option::Option<crate::types::TopicTimeGranularity> {
        &self.dataset_row_date_granularity
    }
    /// <p>The column name for the default date.</p>
    pub fn default_date_column_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.default_date_column_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The column name for the default date.</p>
    pub fn set_default_date_column_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.default_date_column_name = input;
        self
    }
    /// <p>The column name for the default date.</p>
    pub fn get_default_date_column_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.default_date_column_name
    }
    /// Consumes the builder and constructs a [`DataAggregation`](crate::types::DataAggregation).
    pub fn build(self) -> crate::types::DataAggregation {
        crate::types::DataAggregation {
            dataset_row_date_granularity: self.dataset_row_date_granularity,
            default_date_column_name: self.default_date_column_name,
        }
    }
}
