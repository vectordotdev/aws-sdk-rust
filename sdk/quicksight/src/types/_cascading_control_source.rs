// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The source controls that are used in a <code>CascadingControlConfiguration</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CascadingControlSource {
    /// <p>The source sheet control ID of a <code>CascadingControlSource</code>.</p>
    pub source_sheet_control_id: ::std::option::Option<::std::string::String>,
    /// <p>The column identifier that determines which column to look up for the source sheet control.</p>
    pub column_to_match: ::std::option::Option<crate::types::ColumnIdentifier>,
}
impl CascadingControlSource {
    /// <p>The source sheet control ID of a <code>CascadingControlSource</code>.</p>
    pub fn source_sheet_control_id(&self) -> ::std::option::Option<&str> {
        self.source_sheet_control_id.as_deref()
    }
    /// <p>The column identifier that determines which column to look up for the source sheet control.</p>
    pub fn column_to_match(&self) -> ::std::option::Option<&crate::types::ColumnIdentifier> {
        self.column_to_match.as_ref()
    }
}
impl CascadingControlSource {
    /// Creates a new builder-style object to manufacture [`CascadingControlSource`](crate::types::CascadingControlSource).
    pub fn builder() -> crate::types::builders::CascadingControlSourceBuilder {
        crate::types::builders::CascadingControlSourceBuilder::default()
    }
}

/// A builder for [`CascadingControlSource`](crate::types::CascadingControlSource).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CascadingControlSourceBuilder {
    pub(crate) source_sheet_control_id: ::std::option::Option<::std::string::String>,
    pub(crate) column_to_match: ::std::option::Option<crate::types::ColumnIdentifier>,
}
impl CascadingControlSourceBuilder {
    /// <p>The source sheet control ID of a <code>CascadingControlSource</code>.</p>
    pub fn source_sheet_control_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_sheet_control_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The source sheet control ID of a <code>CascadingControlSource</code>.</p>
    pub fn set_source_sheet_control_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_sheet_control_id = input;
        self
    }
    /// <p>The source sheet control ID of a <code>CascadingControlSource</code>.</p>
    pub fn get_source_sheet_control_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_sheet_control_id
    }
    /// <p>The column identifier that determines which column to look up for the source sheet control.</p>
    pub fn column_to_match(mut self, input: crate::types::ColumnIdentifier) -> Self {
        self.column_to_match = ::std::option::Option::Some(input);
        self
    }
    /// <p>The column identifier that determines which column to look up for the source sheet control.</p>
    pub fn set_column_to_match(mut self, input: ::std::option::Option<crate::types::ColumnIdentifier>) -> Self {
        self.column_to_match = input;
        self
    }
    /// <p>The column identifier that determines which column to look up for the source sheet control.</p>
    pub fn get_column_to_match(&self) -> &::std::option::Option<crate::types::ColumnIdentifier> {
        &self.column_to_match
    }
    /// Consumes the builder and constructs a [`CascadingControlSource`](crate::types::CascadingControlSource).
    pub fn build(self) -> crate::types::CascadingControlSource {
        crate::types::CascadingControlSource {
            source_sheet_control_id: self.source_sheet_control_id,
            column_to_match: self.column_to_match,
        }
    }
}
