// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The point style of the geospatial map.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GeospatialPointStyleOptions {
    /// <p>The selected point styles (point, cluster) of the geospatial map.</p>
    pub selected_point_style: ::std::option::Option<crate::types::GeospatialSelectedPointStyle>,
    /// <p>The cluster marker configuration of the geospatial point style.</p>
    pub cluster_marker_configuration: ::std::option::Option<crate::types::ClusterMarkerConfiguration>,
    /// <p>The heatmap configuration of the geospatial point style.</p>
    pub heatmap_configuration: ::std::option::Option<crate::types::GeospatialHeatmapConfiguration>,
}
impl GeospatialPointStyleOptions {
    /// <p>The selected point styles (point, cluster) of the geospatial map.</p>
    pub fn selected_point_style(&self) -> ::std::option::Option<&crate::types::GeospatialSelectedPointStyle> {
        self.selected_point_style.as_ref()
    }
    /// <p>The cluster marker configuration of the geospatial point style.</p>
    pub fn cluster_marker_configuration(&self) -> ::std::option::Option<&crate::types::ClusterMarkerConfiguration> {
        self.cluster_marker_configuration.as_ref()
    }
    /// <p>The heatmap configuration of the geospatial point style.</p>
    pub fn heatmap_configuration(&self) -> ::std::option::Option<&crate::types::GeospatialHeatmapConfiguration> {
        self.heatmap_configuration.as_ref()
    }
}
impl GeospatialPointStyleOptions {
    /// Creates a new builder-style object to manufacture [`GeospatialPointStyleOptions`](crate::types::GeospatialPointStyleOptions).
    pub fn builder() -> crate::types::builders::GeospatialPointStyleOptionsBuilder {
        crate::types::builders::GeospatialPointStyleOptionsBuilder::default()
    }
}

/// A builder for [`GeospatialPointStyleOptions`](crate::types::GeospatialPointStyleOptions).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GeospatialPointStyleOptionsBuilder {
    pub(crate) selected_point_style: ::std::option::Option<crate::types::GeospatialSelectedPointStyle>,
    pub(crate) cluster_marker_configuration: ::std::option::Option<crate::types::ClusterMarkerConfiguration>,
    pub(crate) heatmap_configuration: ::std::option::Option<crate::types::GeospatialHeatmapConfiguration>,
}
impl GeospatialPointStyleOptionsBuilder {
    /// <p>The selected point styles (point, cluster) of the geospatial map.</p>
    pub fn selected_point_style(mut self, input: crate::types::GeospatialSelectedPointStyle) -> Self {
        self.selected_point_style = ::std::option::Option::Some(input);
        self
    }
    /// <p>The selected point styles (point, cluster) of the geospatial map.</p>
    pub fn set_selected_point_style(mut self, input: ::std::option::Option<crate::types::GeospatialSelectedPointStyle>) -> Self {
        self.selected_point_style = input;
        self
    }
    /// <p>The selected point styles (point, cluster) of the geospatial map.</p>
    pub fn get_selected_point_style(&self) -> &::std::option::Option<crate::types::GeospatialSelectedPointStyle> {
        &self.selected_point_style
    }
    /// <p>The cluster marker configuration of the geospatial point style.</p>
    pub fn cluster_marker_configuration(mut self, input: crate::types::ClusterMarkerConfiguration) -> Self {
        self.cluster_marker_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The cluster marker configuration of the geospatial point style.</p>
    pub fn set_cluster_marker_configuration(mut self, input: ::std::option::Option<crate::types::ClusterMarkerConfiguration>) -> Self {
        self.cluster_marker_configuration = input;
        self
    }
    /// <p>The cluster marker configuration of the geospatial point style.</p>
    pub fn get_cluster_marker_configuration(&self) -> &::std::option::Option<crate::types::ClusterMarkerConfiguration> {
        &self.cluster_marker_configuration
    }
    /// <p>The heatmap configuration of the geospatial point style.</p>
    pub fn heatmap_configuration(mut self, input: crate::types::GeospatialHeatmapConfiguration) -> Self {
        self.heatmap_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>The heatmap configuration of the geospatial point style.</p>
    pub fn set_heatmap_configuration(mut self, input: ::std::option::Option<crate::types::GeospatialHeatmapConfiguration>) -> Self {
        self.heatmap_configuration = input;
        self
    }
    /// <p>The heatmap configuration of the geospatial point style.</p>
    pub fn get_heatmap_configuration(&self) -> &::std::option::Option<crate::types::GeospatialHeatmapConfiguration> {
        &self.heatmap_configuration
    }
    /// Consumes the builder and constructs a [`GeospatialPointStyleOptions`](crate::types::GeospatialPointStyleOptions).
    pub fn build(self) -> crate::types::GeospatialPointStyleOptions {
        crate::types::GeospatialPointStyleOptions {
            selected_point_style: self.selected_point_style,
            cluster_marker_configuration: self.cluster_marker_configuration,
            heatmap_configuration: self.heatmap_configuration,
        }
    }
}
