// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configured style settings of a radar chart.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RadarChartAreaStyleSettings {
    /// <p>The visibility settings of a radar chart.</p>
    pub visibility: ::std::option::Option<crate::types::Visibility>,
}
impl RadarChartAreaStyleSettings {
    /// <p>The visibility settings of a radar chart.</p>
    pub fn visibility(&self) -> ::std::option::Option<&crate::types::Visibility> {
        self.visibility.as_ref()
    }
}
impl RadarChartAreaStyleSettings {
    /// Creates a new builder-style object to manufacture [`RadarChartAreaStyleSettings`](crate::types::RadarChartAreaStyleSettings).
    pub fn builder() -> crate::types::builders::RadarChartAreaStyleSettingsBuilder {
        crate::types::builders::RadarChartAreaStyleSettingsBuilder::default()
    }
}

/// A builder for [`RadarChartAreaStyleSettings`](crate::types::RadarChartAreaStyleSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RadarChartAreaStyleSettingsBuilder {
    pub(crate) visibility: ::std::option::Option<crate::types::Visibility>,
}
impl RadarChartAreaStyleSettingsBuilder {
    /// <p>The visibility settings of a radar chart.</p>
    pub fn visibility(mut self, input: crate::types::Visibility) -> Self {
        self.visibility = ::std::option::Option::Some(input);
        self
    }
    /// <p>The visibility settings of a radar chart.</p>
    pub fn set_visibility(mut self, input: ::std::option::Option<crate::types::Visibility>) -> Self {
        self.visibility = input;
        self
    }
    /// <p>The visibility settings of a radar chart.</p>
    pub fn get_visibility(&self) -> &::std::option::Option<crate::types::Visibility> {
        &self.visibility
    }
    /// Consumes the builder and constructs a [`RadarChartAreaStyleSettings`](crate::types::RadarChartAreaStyleSettings).
    pub fn build(self) -> crate::types::RadarChartAreaStyleSettings {
        crate::types::RadarChartAreaStyleSettings { visibility: self.visibility }
    }
}
