// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Controls how a specific <code>Dashboard</code> resource is parameterized in the returned CloudFormation template.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetBundleExportJobDashboardOverrideProperties {
    /// <p>The ARN of the specific <code>Dashboard</code> resource whose override properties are configured in this structure.</p>
    pub arn: ::std::option::Option<::std::string::String>,
    /// <p>A list of <code>Dashboard</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub properties: ::std::option::Option<::std::vec::Vec<crate::types::AssetBundleExportJobDashboardPropertyToOverride>>,
}
impl AssetBundleExportJobDashboardOverrideProperties {
    /// <p>The ARN of the specific <code>Dashboard</code> resource whose override properties are configured in this structure.</p>
    pub fn arn(&self) -> ::std::option::Option<&str> {
        self.arn.as_deref()
    }
    /// <p>A list of <code>Dashboard</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub fn properties(&self) -> ::std::option::Option<&[crate::types::AssetBundleExportJobDashboardPropertyToOverride]> {
        self.properties.as_deref()
    }
}
impl AssetBundleExportJobDashboardOverrideProperties {
    /// Creates a new builder-style object to manufacture [`AssetBundleExportJobDashboardOverrideProperties`](crate::types::AssetBundleExportJobDashboardOverrideProperties).
    pub fn builder() -> crate::types::builders::AssetBundleExportJobDashboardOverridePropertiesBuilder {
        crate::types::builders::AssetBundleExportJobDashboardOverridePropertiesBuilder::default()
    }
}

/// A builder for [`AssetBundleExportJobDashboardOverrideProperties`](crate::types::AssetBundleExportJobDashboardOverrideProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssetBundleExportJobDashboardOverridePropertiesBuilder {
    pub(crate) arn: ::std::option::Option<::std::string::String>,
    pub(crate) properties: ::std::option::Option<::std::vec::Vec<crate::types::AssetBundleExportJobDashboardPropertyToOverride>>,
}
impl AssetBundleExportJobDashboardOverridePropertiesBuilder {
    /// <p>The ARN of the specific <code>Dashboard</code> resource whose override properties are configured in this structure.</p>
    pub fn arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the specific <code>Dashboard</code> resource whose override properties are configured in this structure.</p>
    pub fn set_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.arn = input;
        self
    }
    /// <p>The ARN of the specific <code>Dashboard</code> resource whose override properties are configured in this structure.</p>
    pub fn get_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.arn
    }
    /// Appends an item to `properties`.
    ///
    /// To override the contents of this collection use [`set_properties`](Self::set_properties).
    ///
    /// <p>A list of <code>Dashboard</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub fn properties(mut self, input: crate::types::AssetBundleExportJobDashboardPropertyToOverride) -> Self {
        let mut v = self.properties.unwrap_or_default();
        v.push(input);
        self.properties = ::std::option::Option::Some(v);
        self
    }
    /// <p>A list of <code>Dashboard</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub fn set_properties(
        mut self,
        input: ::std::option::Option<::std::vec::Vec<crate::types::AssetBundleExportJobDashboardPropertyToOverride>>,
    ) -> Self {
        self.properties = input;
        self
    }
    /// <p>A list of <code>Dashboard</code> resource properties to generate variables for in the returned CloudFormation template.</p>
    pub fn get_properties(&self) -> &::std::option::Option<::std::vec::Vec<crate::types::AssetBundleExportJobDashboardPropertyToOverride>> {
        &self.properties
    }
    /// Consumes the builder and constructs a [`AssetBundleExportJobDashboardOverrideProperties`](crate::types::AssetBundleExportJobDashboardOverrideProperties).
    pub fn build(self) -> crate::types::AssetBundleExportJobDashboardOverrideProperties {
        crate::types::AssetBundleExportJobDashboardOverrideProperties {
            arn: self.arn,
            properties: self.properties,
        }
    }
}
