// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information on the error that caused the snapshot job to fail.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SnapshotJobResultErrorInfo {
    /// <p>The error message.</p>
    pub error_message: ::std::option::Option<::std::string::String>,
    /// <p>The error type.</p>
    pub error_type: ::std::option::Option<::std::string::String>,
}
impl SnapshotJobResultErrorInfo {
    /// <p>The error message.</p>
    pub fn error_message(&self) -> ::std::option::Option<&str> {
        self.error_message.as_deref()
    }
    /// <p>The error type.</p>
    pub fn error_type(&self) -> ::std::option::Option<&str> {
        self.error_type.as_deref()
    }
}
impl SnapshotJobResultErrorInfo {
    /// Creates a new builder-style object to manufacture [`SnapshotJobResultErrorInfo`](crate::types::SnapshotJobResultErrorInfo).
    pub fn builder() -> crate::types::builders::SnapshotJobResultErrorInfoBuilder {
        crate::types::builders::SnapshotJobResultErrorInfoBuilder::default()
    }
}

/// A builder for [`SnapshotJobResultErrorInfo`](crate::types::SnapshotJobResultErrorInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SnapshotJobResultErrorInfoBuilder {
    pub(crate) error_message: ::std::option::Option<::std::string::String>,
    pub(crate) error_type: ::std::option::Option<::std::string::String>,
}
impl SnapshotJobResultErrorInfoBuilder {
    /// <p>The error message.</p>
    pub fn error_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error message.</p>
    pub fn set_error_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_message = input;
        self
    }
    /// <p>The error message.</p>
    pub fn get_error_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_message
    }
    /// <p>The error type.</p>
    pub fn error_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.error_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The error type.</p>
    pub fn set_error_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.error_type = input;
        self
    }
    /// <p>The error type.</p>
    pub fn get_error_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.error_type
    }
    /// Consumes the builder and constructs a [`SnapshotJobResultErrorInfo`](crate::types::SnapshotJobResultErrorInfo).
    pub fn build(self) -> crate::types::SnapshotJobResultErrorInfo {
        crate::types::SnapshotJobResultErrorInfo {
            error_message: self.error_message,
            error_type: self.error_type,
        }
    }
}
