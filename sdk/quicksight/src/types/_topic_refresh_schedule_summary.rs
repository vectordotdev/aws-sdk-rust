// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of the refresh schedule details for a dataset.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TopicRefreshScheduleSummary {
    /// <p>The ID of the dataset.</p>
    pub dataset_id: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the dataset.</p>
    pub dataset_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the dataset.</p>
    pub dataset_name: ::std::option::Option<::std::string::String>,
    /// <p>The definition of a refresh schedule.</p>
    pub refresh_schedule: ::std::option::Option<crate::types::TopicRefreshSchedule>,
}
impl TopicRefreshScheduleSummary {
    /// <p>The ID of the dataset.</p>
    pub fn dataset_id(&self) -> ::std::option::Option<&str> {
        self.dataset_id.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the dataset.</p>
    pub fn dataset_arn(&self) -> ::std::option::Option<&str> {
        self.dataset_arn.as_deref()
    }
    /// <p>The name of the dataset.</p>
    pub fn dataset_name(&self) -> ::std::option::Option<&str> {
        self.dataset_name.as_deref()
    }
    /// <p>The definition of a refresh schedule.</p>
    pub fn refresh_schedule(&self) -> ::std::option::Option<&crate::types::TopicRefreshSchedule> {
        self.refresh_schedule.as_ref()
    }
}
impl TopicRefreshScheduleSummary {
    /// Creates a new builder-style object to manufacture [`TopicRefreshScheduleSummary`](crate::types::TopicRefreshScheduleSummary).
    pub fn builder() -> crate::types::builders::TopicRefreshScheduleSummaryBuilder {
        crate::types::builders::TopicRefreshScheduleSummaryBuilder::default()
    }
}

/// A builder for [`TopicRefreshScheduleSummary`](crate::types::TopicRefreshScheduleSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TopicRefreshScheduleSummaryBuilder {
    pub(crate) dataset_id: ::std::option::Option<::std::string::String>,
    pub(crate) dataset_arn: ::std::option::Option<::std::string::String>,
    pub(crate) dataset_name: ::std::option::Option<::std::string::String>,
    pub(crate) refresh_schedule: ::std::option::Option<crate::types::TopicRefreshSchedule>,
}
impl TopicRefreshScheduleSummaryBuilder {
    /// <p>The ID of the dataset.</p>
    pub fn dataset_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.dataset_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID of the dataset.</p>
    pub fn set_dataset_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.dataset_id = input;
        self
    }
    /// <p>The ID of the dataset.</p>
    pub fn get_dataset_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.dataset_id
    }
    /// <p>The Amazon Resource Name (ARN) of the dataset.</p>
    pub fn dataset_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.dataset_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the dataset.</p>
    pub fn set_dataset_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.dataset_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the dataset.</p>
    pub fn get_dataset_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.dataset_arn
    }
    /// <p>The name of the dataset.</p>
    pub fn dataset_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.dataset_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the dataset.</p>
    pub fn set_dataset_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.dataset_name = input;
        self
    }
    /// <p>The name of the dataset.</p>
    pub fn get_dataset_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.dataset_name
    }
    /// <p>The definition of a refresh schedule.</p>
    pub fn refresh_schedule(mut self, input: crate::types::TopicRefreshSchedule) -> Self {
        self.refresh_schedule = ::std::option::Option::Some(input);
        self
    }
    /// <p>The definition of a refresh schedule.</p>
    pub fn set_refresh_schedule(mut self, input: ::std::option::Option<crate::types::TopicRefreshSchedule>) -> Self {
        self.refresh_schedule = input;
        self
    }
    /// <p>The definition of a refresh schedule.</p>
    pub fn get_refresh_schedule(&self) -> &::std::option::Option<crate::types::TopicRefreshSchedule> {
        &self.refresh_schedule
    }
    /// Consumes the builder and constructs a [`TopicRefreshScheduleSummary`](crate::types::TopicRefreshScheduleSummary).
    pub fn build(self) -> crate::types::TopicRefreshScheduleSummary {
        crate::types::TopicRefreshScheduleSummary {
            dataset_id: self.dataset_id,
            dataset_arn: self.dataset_arn,
            dataset_name: self.dataset_name,
            refresh_schedule: self.refresh_schedule,
        }
    }
}
