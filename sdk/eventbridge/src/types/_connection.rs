// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about a connection.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Connection {
    /// <p>The ARN of the connection.</p>
    pub connection_arn: ::std::option::Option<::std::string::String>,
    /// <p>The name of the connection.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The state of the connection.</p>
    pub connection_state: ::std::option::Option<crate::types::ConnectionState>,
    /// <p>The reason that the connection is in the connection state.</p>
    pub state_reason: ::std::option::Option<::std::string::String>,
    /// <p>The authorization type specified for the connection.</p> <note>
    /// <p>OAUTH tokens are refreshed when a 401 or 407 response is returned.</p>
    /// </note>
    pub authorization_type: ::std::option::Option<crate::types::ConnectionAuthorizationType>,
    /// <p>A time stamp for the time that the connection was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>A time stamp for the time that the connection was last modified.</p>
    pub last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    pub last_authorized_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl Connection {
    /// <p>The ARN of the connection.</p>
    pub fn connection_arn(&self) -> ::std::option::Option<&str> {
        self.connection_arn.as_deref()
    }
    /// <p>The name of the connection.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The state of the connection.</p>
    pub fn connection_state(&self) -> ::std::option::Option<&crate::types::ConnectionState> {
        self.connection_state.as_ref()
    }
    /// <p>The reason that the connection is in the connection state.</p>
    pub fn state_reason(&self) -> ::std::option::Option<&str> {
        self.state_reason.as_deref()
    }
    /// <p>The authorization type specified for the connection.</p> <note>
    /// <p>OAUTH tokens are refreshed when a 401 or 407 response is returned.</p>
    /// </note>
    pub fn authorization_type(&self) -> ::std::option::Option<&crate::types::ConnectionAuthorizationType> {
        self.authorization_type.as_ref()
    }
    /// <p>A time stamp for the time that the connection was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>A time stamp for the time that the connection was last modified.</p>
    pub fn last_modified_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_time.as_ref()
    }
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    pub fn last_authorized_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_authorized_time.as_ref()
    }
}
impl Connection {
    /// Creates a new builder-style object to manufacture [`Connection`](crate::types::Connection).
    pub fn builder() -> crate::types::builders::ConnectionBuilder {
        crate::types::builders::ConnectionBuilder::default()
    }
}

/// A builder for [`Connection`](crate::types::Connection).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConnectionBuilder {
    pub(crate) connection_arn: ::std::option::Option<::std::string::String>,
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) connection_state: ::std::option::Option<crate::types::ConnectionState>,
    pub(crate) state_reason: ::std::option::Option<::std::string::String>,
    pub(crate) authorization_type: ::std::option::Option<crate::types::ConnectionAuthorizationType>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_authorized_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ConnectionBuilder {
    /// <p>The ARN of the connection.</p>
    pub fn connection_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.connection_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the connection.</p>
    pub fn set_connection_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.connection_arn = input;
        self
    }
    /// <p>The ARN of the connection.</p>
    pub fn get_connection_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.connection_arn
    }
    /// <p>The name of the connection.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the connection.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the connection.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The state of the connection.</p>
    pub fn connection_state(mut self, input: crate::types::ConnectionState) -> Self {
        self.connection_state = ::std::option::Option::Some(input);
        self
    }
    /// <p>The state of the connection.</p>
    pub fn set_connection_state(mut self, input: ::std::option::Option<crate::types::ConnectionState>) -> Self {
        self.connection_state = input;
        self
    }
    /// <p>The state of the connection.</p>
    pub fn get_connection_state(&self) -> &::std::option::Option<crate::types::ConnectionState> {
        &self.connection_state
    }
    /// <p>The reason that the connection is in the connection state.</p>
    pub fn state_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The reason that the connection is in the connection state.</p>
    pub fn set_state_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state_reason = input;
        self
    }
    /// <p>The reason that the connection is in the connection state.</p>
    pub fn get_state_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.state_reason
    }
    /// <p>The authorization type specified for the connection.</p> <note>
    /// <p>OAUTH tokens are refreshed when a 401 or 407 response is returned.</p>
    /// </note>
    pub fn authorization_type(mut self, input: crate::types::ConnectionAuthorizationType) -> Self {
        self.authorization_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The authorization type specified for the connection.</p> <note>
    /// <p>OAUTH tokens are refreshed when a 401 or 407 response is returned.</p>
    /// </note>
    pub fn set_authorization_type(mut self, input: ::std::option::Option<crate::types::ConnectionAuthorizationType>) -> Self {
        self.authorization_type = input;
        self
    }
    /// <p>The authorization type specified for the connection.</p> <note>
    /// <p>OAUTH tokens are refreshed when a 401 or 407 response is returned.</p>
    /// </note>
    pub fn get_authorization_type(&self) -> &::std::option::Option<crate::types::ConnectionAuthorizationType> {
        &self.authorization_type
    }
    /// <p>A time stamp for the time that the connection was created.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>A time stamp for the time that the connection was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>A time stamp for the time that the connection was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>A time stamp for the time that the connection was last modified.</p>
    pub fn last_modified_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>A time stamp for the time that the connection was last modified.</p>
    pub fn set_last_modified_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_time = input;
        self
    }
    /// <p>A time stamp for the time that the connection was last modified.</p>
    pub fn get_last_modified_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_time
    }
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    pub fn last_authorized_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_authorized_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    pub fn set_last_authorized_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_authorized_time = input;
        self
    }
    /// <p>A time stamp for the time that the connection was last authorized.</p>
    pub fn get_last_authorized_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_authorized_time
    }
    /// Consumes the builder and constructs a [`Connection`](crate::types::Connection).
    pub fn build(self) -> crate::types::Connection {
        crate::types::Connection {
            connection_arn: self.connection_arn,
            name: self.name,
            connection_state: self.connection_state,
            state_reason: self.state_reason,
            authorization_type: self.authorization_type,
            creation_time: self.creation_time,
            last_modified_time: self.last_modified_time,
            last_authorized_time: self.last_authorized_time,
        }
    }
}
