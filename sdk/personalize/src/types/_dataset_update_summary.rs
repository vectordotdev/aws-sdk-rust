// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes an update to a dataset.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DatasetUpdateSummary {
    /// <p>The Amazon Resource Name (ARN) of the schema that replaced the previous schema of the dataset.</p>
    pub schema_arn: ::std::option::Option<::std::string::String>,
    /// <p>The status of the dataset update. </p>
    pub status: ::std::option::Option<::std::string::String>,
    /// <p>If updating a dataset fails, provides the reason why.</p>
    pub failure_reason: ::std::option::Option<::std::string::String>,
    /// <p>The creation date and time (in Unix time) of the dataset update.</p>
    pub creation_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The last update date and time (in Unix time) of the dataset.</p>
    pub last_updated_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DatasetUpdateSummary {
    /// <p>The Amazon Resource Name (ARN) of the schema that replaced the previous schema of the dataset.</p>
    pub fn schema_arn(&self) -> ::std::option::Option<&str> {
        self.schema_arn.as_deref()
    }
    /// <p>The status of the dataset update. </p>
    pub fn status(&self) -> ::std::option::Option<&str> {
        self.status.as_deref()
    }
    /// <p>If updating a dataset fails, provides the reason why.</p>
    pub fn failure_reason(&self) -> ::std::option::Option<&str> {
        self.failure_reason.as_deref()
    }
    /// <p>The creation date and time (in Unix time) of the dataset update.</p>
    pub fn creation_date_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_date_time.as_ref()
    }
    /// <p>The last update date and time (in Unix time) of the dataset.</p>
    pub fn last_updated_date_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_date_time.as_ref()
    }
}
impl DatasetUpdateSummary {
    /// Creates a new builder-style object to manufacture [`DatasetUpdateSummary`](crate::types::DatasetUpdateSummary).
    pub fn builder() -> crate::types::builders::DatasetUpdateSummaryBuilder {
        crate::types::builders::DatasetUpdateSummaryBuilder::default()
    }
}

/// A builder for [`DatasetUpdateSummary`](crate::types::DatasetUpdateSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DatasetUpdateSummaryBuilder {
    pub(crate) schema_arn: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<::std::string::String>,
    pub(crate) failure_reason: ::std::option::Option<::std::string::String>,
    pub(crate) creation_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_date_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DatasetUpdateSummaryBuilder {
    /// <p>The Amazon Resource Name (ARN) of the schema that replaced the previous schema of the dataset.</p>
    pub fn schema_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.schema_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the schema that replaced the previous schema of the dataset.</p>
    pub fn set_schema_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.schema_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the schema that replaced the previous schema of the dataset.</p>
    pub fn get_schema_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.schema_arn
    }
    /// <p>The status of the dataset update. </p>
    pub fn status(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The status of the dataset update. </p>
    pub fn set_status(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the dataset update. </p>
    pub fn get_status(&self) -> &::std::option::Option<::std::string::String> {
        &self.status
    }
    /// <p>If updating a dataset fails, provides the reason why.</p>
    pub fn failure_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.failure_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>If updating a dataset fails, provides the reason why.</p>
    pub fn set_failure_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.failure_reason = input;
        self
    }
    /// <p>If updating a dataset fails, provides the reason why.</p>
    pub fn get_failure_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.failure_reason
    }
    /// <p>The creation date and time (in Unix time) of the dataset update.</p>
    pub fn creation_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation date and time (in Unix time) of the dataset update.</p>
    pub fn set_creation_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date_time = input;
        self
    }
    /// <p>The creation date and time (in Unix time) of the dataset update.</p>
    pub fn get_creation_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date_time
    }
    /// <p>The last update date and time (in Unix time) of the dataset.</p>
    pub fn last_updated_date_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_date_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The last update date and time (in Unix time) of the dataset.</p>
    pub fn set_last_updated_date_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_date_time = input;
        self
    }
    /// <p>The last update date and time (in Unix time) of the dataset.</p>
    pub fn get_last_updated_date_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_date_time
    }
    /// Consumes the builder and constructs a [`DatasetUpdateSummary`](crate::types::DatasetUpdateSummary).
    pub fn build(self) -> crate::types::DatasetUpdateSummary {
        crate::types::DatasetUpdateSummary {
            schema_arn: self.schema_arn,
            status: self.status,
            failure_reason: self.failure_reason,
            creation_date_time: self.creation_date_time,
            last_updated_date_time: self.last_updated_date_time,
        }
    }
}
