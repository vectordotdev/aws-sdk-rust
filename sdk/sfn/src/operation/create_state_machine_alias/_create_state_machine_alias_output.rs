// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CreateStateMachineAliasOutput {
    /// <p>The Amazon Resource Name (ARN) that identifies the created state machine alias.</p>
    pub state_machine_alias_arn: ::std::option::Option<::std::string::String>,
    /// <p>The date the state machine alias was created.</p>
    pub creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateStateMachineAliasOutput {
    /// <p>The Amazon Resource Name (ARN) that identifies the created state machine alias.</p>
    pub fn state_machine_alias_arn(&self) -> ::std::option::Option<&str> {
        self.state_machine_alias_arn.as_deref()
    }
    /// <p>The date the state machine alias was created.</p>
    pub fn creation_date(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_date.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for CreateStateMachineAliasOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CreateStateMachineAliasOutput {
    /// Creates a new builder-style object to manufacture [`CreateStateMachineAliasOutput`](crate::operation::create_state_machine_alias::CreateStateMachineAliasOutput).
    pub fn builder() -> crate::operation::create_state_machine_alias::builders::CreateStateMachineAliasOutputBuilder {
        crate::operation::create_state_machine_alias::builders::CreateStateMachineAliasOutputBuilder::default()
    }
}

/// A builder for [`CreateStateMachineAliasOutput`](crate::operation::create_state_machine_alias::CreateStateMachineAliasOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CreateStateMachineAliasOutputBuilder {
    pub(crate) state_machine_alias_arn: ::std::option::Option<::std::string::String>,
    pub(crate) creation_date: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl CreateStateMachineAliasOutputBuilder {
    /// <p>The Amazon Resource Name (ARN) that identifies the created state machine alias.</p>
    pub fn state_machine_alias_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state_machine_alias_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) that identifies the created state machine alias.</p>
    pub fn set_state_machine_alias_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state_machine_alias_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) that identifies the created state machine alias.</p>
    pub fn get_state_machine_alias_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.state_machine_alias_arn
    }
    /// <p>The date the state machine alias was created.</p>
    pub fn creation_date(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_date = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date the state machine alias was created.</p>
    pub fn set_creation_date(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_date = input;
        self
    }
    /// <p>The date the state machine alias was created.</p>
    pub fn get_creation_date(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_date
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CreateStateMachineAliasOutput`](crate::operation::create_state_machine_alias::CreateStateMachineAliasOutput).
    pub fn build(self) -> crate::operation::create_state_machine_alias::CreateStateMachineAliasOutput {
        crate::operation::create_state_machine_alias::CreateStateMachineAliasOutput {
            state_machine_alias_arn: self.state_machine_alias_arn,
            creation_date: self.creation_date,
            _request_id: self._request_id,
        }
    }
}
