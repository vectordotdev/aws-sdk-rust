// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains details about the start of a task during an execution.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TaskStartedEventDetails {
    /// <p>The service name of the resource in a task state.</p>
    pub resource_type: ::std::option::Option<::std::string::String>,
    /// <p>The action of the resource called by a task state.</p>
    pub resource: ::std::option::Option<::std::string::String>,
}
impl TaskStartedEventDetails {
    /// <p>The service name of the resource in a task state.</p>
    pub fn resource_type(&self) -> ::std::option::Option<&str> {
        self.resource_type.as_deref()
    }
    /// <p>The action of the resource called by a task state.</p>
    pub fn resource(&self) -> ::std::option::Option<&str> {
        self.resource.as_deref()
    }
}
impl TaskStartedEventDetails {
    /// Creates a new builder-style object to manufacture [`TaskStartedEventDetails`](crate::types::TaskStartedEventDetails).
    pub fn builder() -> crate::types::builders::TaskStartedEventDetailsBuilder {
        crate::types::builders::TaskStartedEventDetailsBuilder::default()
    }
}

/// A builder for [`TaskStartedEventDetails`](crate::types::TaskStartedEventDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TaskStartedEventDetailsBuilder {
    pub(crate) resource_type: ::std::option::Option<::std::string::String>,
    pub(crate) resource: ::std::option::Option<::std::string::String>,
}
impl TaskStartedEventDetailsBuilder {
    /// <p>The service name of the resource in a task state.</p>
    pub fn resource_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The service name of the resource in a task state.</p>
    pub fn set_resource_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource_type = input;
        self
    }
    /// <p>The service name of the resource in a task state.</p>
    pub fn get_resource_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource_type
    }
    /// <p>The action of the resource called by a task state.</p>
    pub fn resource(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.resource = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The action of the resource called by a task state.</p>
    pub fn set_resource(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.resource = input;
        self
    }
    /// <p>The action of the resource called by a task state.</p>
    pub fn get_resource(&self) -> &::std::option::Option<::std::string::String> {
        &self.resource
    }
    /// Consumes the builder and constructs a [`TaskStartedEventDetails`](crate::types::TaskStartedEventDetails).
    pub fn build(self) -> crate::types::TaskStartedEventDetails {
        crate::types::TaskStartedEventDetails {
            resource_type: self.resource_type,
            resource: self.resource,
        }
    }
}
