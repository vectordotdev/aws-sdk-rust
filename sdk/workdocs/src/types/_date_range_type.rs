// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Filters results based on timestamp range (in epochs).</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DateRangeType {
    /// <p>Timestamp range start value (in epochs)</p>
    pub start_value: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Timestamp range end value (in epochs).</p>
    pub end_value: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DateRangeType {
    /// <p>Timestamp range start value (in epochs)</p>
    pub fn start_value(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.start_value.as_ref()
    }
    /// <p>Timestamp range end value (in epochs).</p>
    pub fn end_value(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_value.as_ref()
    }
}
impl DateRangeType {
    /// Creates a new builder-style object to manufacture [`DateRangeType`](crate::types::DateRangeType).
    pub fn builder() -> crate::types::builders::DateRangeTypeBuilder {
        crate::types::builders::DateRangeTypeBuilder::default()
    }
}

/// A builder for [`DateRangeType`](crate::types::DateRangeType).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DateRangeTypeBuilder {
    pub(crate) start_value: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_value: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl DateRangeTypeBuilder {
    /// <p>Timestamp range start value (in epochs)</p>
    pub fn start_value(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.start_value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp range start value (in epochs)</p>
    pub fn set_start_value(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.start_value = input;
        self
    }
    /// <p>Timestamp range start value (in epochs)</p>
    pub fn get_start_value(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.start_value
    }
    /// <p>Timestamp range end value (in epochs).</p>
    pub fn end_value(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_value = ::std::option::Option::Some(input);
        self
    }
    /// <p>Timestamp range end value (in epochs).</p>
    pub fn set_end_value(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_value = input;
        self
    }
    /// <p>Timestamp range end value (in epochs).</p>
    pub fn get_end_value(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_value
    }
    /// Consumes the builder and constructs a [`DateRangeType`](crate::types::DateRangeType).
    pub fn build(self) -> crate::types::DateRangeType {
        crate::types::DateRangeType {
            start_value: self.start_value,
            end_value: self.end_value,
        }
    }
}
