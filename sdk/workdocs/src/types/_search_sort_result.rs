// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of the sort operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SearchSortResult {
    /// <p>Sort search results based on this field name.</p>
    pub field: ::std::option::Option<crate::types::OrderByFieldType>,
    /// <p>Sort direction.</p>
    pub order: ::std::option::Option<crate::types::SortOrder>,
}
impl SearchSortResult {
    /// <p>Sort search results based on this field name.</p>
    pub fn field(&self) -> ::std::option::Option<&crate::types::OrderByFieldType> {
        self.field.as_ref()
    }
    /// <p>Sort direction.</p>
    pub fn order(&self) -> ::std::option::Option<&crate::types::SortOrder> {
        self.order.as_ref()
    }
}
impl SearchSortResult {
    /// Creates a new builder-style object to manufacture [`SearchSortResult`](crate::types::SearchSortResult).
    pub fn builder() -> crate::types::builders::SearchSortResultBuilder {
        crate::types::builders::SearchSortResultBuilder::default()
    }
}

/// A builder for [`SearchSortResult`](crate::types::SearchSortResult).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SearchSortResultBuilder {
    pub(crate) field: ::std::option::Option<crate::types::OrderByFieldType>,
    pub(crate) order: ::std::option::Option<crate::types::SortOrder>,
}
impl SearchSortResultBuilder {
    /// <p>Sort search results based on this field name.</p>
    pub fn field(mut self, input: crate::types::OrderByFieldType) -> Self {
        self.field = ::std::option::Option::Some(input);
        self
    }
    /// <p>Sort search results based on this field name.</p>
    pub fn set_field(mut self, input: ::std::option::Option<crate::types::OrderByFieldType>) -> Self {
        self.field = input;
        self
    }
    /// <p>Sort search results based on this field name.</p>
    pub fn get_field(&self) -> &::std::option::Option<crate::types::OrderByFieldType> {
        &self.field
    }
    /// <p>Sort direction.</p>
    pub fn order(mut self, input: crate::types::SortOrder) -> Self {
        self.order = ::std::option::Option::Some(input);
        self
    }
    /// <p>Sort direction.</p>
    pub fn set_order(mut self, input: ::std::option::Option<crate::types::SortOrder>) -> Self {
        self.order = input;
        self
    }
    /// <p>Sort direction.</p>
    pub fn get_order(&self) -> &::std::option::Option<crate::types::SortOrder> {
        &self.order
    }
    /// Consumes the builder and constructs a [`SearchSortResult`](crate::types::SearchSortResult).
    pub fn build(self) -> crate::types::SearchSortResult {
        crate::types::SearchSortResult {
            field: self.field,
            order: self.order,
        }
    }
}
