// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details of changeset.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct KxChangesetListEntry {
    /// <p>A unique identifier for the changeset.</p>
    pub changeset_id: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp at which the changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>Beginning time from which the changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub active_from_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp at which the changeset was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub last_modified_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p> Status of the changeset.</p>
    /// <ul>
    /// <li> <p>Pending – Changeset creation is pending.</p> </li>
    /// <li> <p>Processing – Changeset creation is running.</p> </li>
    /// <li> <p>Failed – Changeset creation has failed.</p> </li>
    /// <li> <p>Complete – Changeset creation has succeeded.</p> </li>
    /// </ul>
    pub status: ::std::option::Option<crate::types::ChangesetStatus>,
}
impl KxChangesetListEntry {
    /// <p>A unique identifier for the changeset.</p>
    pub fn changeset_id(&self) -> ::std::option::Option<&str> {
        self.changeset_id.as_deref()
    }
    /// <p>The timestamp at which the changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn created_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_timestamp.as_ref()
    }
    /// <p>Beginning time from which the changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn active_from_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.active_from_timestamp.as_ref()
    }
    /// <p>The timestamp at which the changeset was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn last_modified_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_modified_timestamp.as_ref()
    }
    /// <p> Status of the changeset.</p>
    /// <ul>
    /// <li> <p>Pending – Changeset creation is pending.</p> </li>
    /// <li> <p>Processing – Changeset creation is running.</p> </li>
    /// <li> <p>Failed – Changeset creation has failed.</p> </li>
    /// <li> <p>Complete – Changeset creation has succeeded.</p> </li>
    /// </ul>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ChangesetStatus> {
        self.status.as_ref()
    }
}
impl KxChangesetListEntry {
    /// Creates a new builder-style object to manufacture [`KxChangesetListEntry`](crate::types::KxChangesetListEntry).
    pub fn builder() -> crate::types::builders::KxChangesetListEntryBuilder {
        crate::types::builders::KxChangesetListEntryBuilder::default()
    }
}

/// A builder for [`KxChangesetListEntry`](crate::types::KxChangesetListEntry).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct KxChangesetListEntryBuilder {
    pub(crate) changeset_id: ::std::option::Option<::std::string::String>,
    pub(crate) created_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) active_from_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_modified_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::ChangesetStatus>,
}
impl KxChangesetListEntryBuilder {
    /// <p>A unique identifier for the changeset.</p>
    pub fn changeset_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.changeset_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the changeset.</p>
    pub fn set_changeset_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.changeset_id = input;
        self
    }
    /// <p>A unique identifier for the changeset.</p>
    pub fn get_changeset_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.changeset_id
    }
    /// <p>The timestamp at which the changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn created_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp at which the changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn set_created_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_timestamp = input;
        self
    }
    /// <p>The timestamp at which the changeset was created in FinSpace. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn get_created_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_timestamp
    }
    /// <p>Beginning time from which the changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn active_from_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.active_from_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>Beginning time from which the changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn set_active_from_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.active_from_timestamp = input;
        self
    }
    /// <p>Beginning time from which the changeset is active. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn get_active_from_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.active_from_timestamp
    }
    /// <p>The timestamp at which the changeset was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn last_modified_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_modified_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp at which the changeset was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn set_last_modified_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_modified_timestamp = input;
        self
    }
    /// <p>The timestamp at which the changeset was modified. The value is determined as epoch time in milliseconds. For example, the value for Monday, November 1, 2021 12:00:00 PM UTC is specified as 1635768000000.</p>
    pub fn get_last_modified_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_modified_timestamp
    }
    /// <p> Status of the changeset.</p>
    /// <ul>
    /// <li> <p>Pending – Changeset creation is pending.</p> </li>
    /// <li> <p>Processing – Changeset creation is running.</p> </li>
    /// <li> <p>Failed – Changeset creation has failed.</p> </li>
    /// <li> <p>Complete – Changeset creation has succeeded.</p> </li>
    /// </ul>
    pub fn status(mut self, input: crate::types::ChangesetStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p> Status of the changeset.</p>
    /// <ul>
    /// <li> <p>Pending – Changeset creation is pending.</p> </li>
    /// <li> <p>Processing – Changeset creation is running.</p> </li>
    /// <li> <p>Failed – Changeset creation has failed.</p> </li>
    /// <li> <p>Complete – Changeset creation has succeeded.</p> </li>
    /// </ul>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ChangesetStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p> Status of the changeset.</p>
    /// <ul>
    /// <li> <p>Pending – Changeset creation is pending.</p> </li>
    /// <li> <p>Processing – Changeset creation is running.</p> </li>
    /// <li> <p>Failed – Changeset creation has failed.</p> </li>
    /// <li> <p>Complete – Changeset creation has succeeded.</p> </li>
    /// </ul>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ChangesetStatus> {
        &self.status
    }
    /// Consumes the builder and constructs a [`KxChangesetListEntry`](crate::types::KxChangesetListEntry).
    pub fn build(self) -> crate::types::KxChangesetListEntry {
        crate::types::KxChangesetListEntry {
            changeset_id: self.changeset_id,
            created_timestamp: self.created_timestamp,
            active_from_timestamp: self.active_from_timestamp,
            last_modified_timestamp: self.last_modified_timestamp,
            status: self.status,
        }
    }
}
