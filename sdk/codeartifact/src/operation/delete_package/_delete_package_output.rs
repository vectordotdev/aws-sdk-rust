// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DeletePackageOutput {
    /// <p> Details about a package, including its format, namespace, and name. </p>
    pub deleted_package: ::std::option::Option<crate::types::PackageSummary>,
    _request_id: Option<String>,
}
impl DeletePackageOutput {
    /// <p> Details about a package, including its format, namespace, and name. </p>
    pub fn deleted_package(&self) -> ::std::option::Option<&crate::types::PackageSummary> {
        self.deleted_package.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for DeletePackageOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl DeletePackageOutput {
    /// Creates a new builder-style object to manufacture [`DeletePackageOutput`](crate::operation::delete_package::DeletePackageOutput).
    pub fn builder() -> crate::operation::delete_package::builders::DeletePackageOutputBuilder {
        crate::operation::delete_package::builders::DeletePackageOutputBuilder::default()
    }
}

/// A builder for [`DeletePackageOutput`](crate::operation::delete_package::DeletePackageOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DeletePackageOutputBuilder {
    pub(crate) deleted_package: ::std::option::Option<crate::types::PackageSummary>,
    _request_id: Option<String>,
}
impl DeletePackageOutputBuilder {
    /// <p> Details about a package, including its format, namespace, and name. </p>
    pub fn deleted_package(mut self, input: crate::types::PackageSummary) -> Self {
        self.deleted_package = ::std::option::Option::Some(input);
        self
    }
    /// <p> Details about a package, including its format, namespace, and name. </p>
    pub fn set_deleted_package(mut self, input: ::std::option::Option<crate::types::PackageSummary>) -> Self {
        self.deleted_package = input;
        self
    }
    /// <p> Details about a package, including its format, namespace, and name. </p>
    pub fn get_deleted_package(&self) -> &::std::option::Option<crate::types::PackageSummary> {
        &self.deleted_package
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`DeletePackageOutput`](crate::operation::delete_package::DeletePackageOutput).
    pub fn build(self) -> crate::operation::delete_package::DeletePackageOutput {
        crate::operation::delete_package::DeletePackageOutput {
            deleted_package: self.deleted_package,
            _request_id: self._request_id,
        }
    }
}
