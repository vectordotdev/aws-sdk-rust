// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CompleteMultipartReadSetUploadOutput {
    /// <p> The read set ID created for an uploaded read set. </p>
    pub read_set_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CompleteMultipartReadSetUploadOutput {
    /// <p> The read set ID created for an uploaded read set. </p>
    pub fn read_set_id(&self) -> ::std::option::Option<&str> {
        self.read_set_id.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for CompleteMultipartReadSetUploadOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl CompleteMultipartReadSetUploadOutput {
    /// Creates a new builder-style object to manufacture [`CompleteMultipartReadSetUploadOutput`](crate::operation::complete_multipart_read_set_upload::CompleteMultipartReadSetUploadOutput).
    pub fn builder() -> crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadOutputBuilder {
        crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadOutputBuilder::default()
    }
}

/// A builder for [`CompleteMultipartReadSetUploadOutput`](crate::operation::complete_multipart_read_set_upload::CompleteMultipartReadSetUploadOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CompleteMultipartReadSetUploadOutputBuilder {
    pub(crate) read_set_id: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl CompleteMultipartReadSetUploadOutputBuilder {
    /// <p> The read set ID created for an uploaded read set. </p>
    pub fn read_set_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.read_set_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The read set ID created for an uploaded read set. </p>
    pub fn set_read_set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.read_set_id = input;
        self
    }
    /// <p> The read set ID created for an uploaded read set. </p>
    pub fn get_read_set_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.read_set_id
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`CompleteMultipartReadSetUploadOutput`](crate::operation::complete_multipart_read_set_upload::CompleteMultipartReadSetUploadOutput).
    pub fn build(self) -> crate::operation::complete_multipart_read_set_upload::CompleteMultipartReadSetUploadOutput {
        crate::operation::complete_multipart_read_set_upload::CompleteMultipartReadSetUploadOutput {
            read_set_id: self.read_set_id,
            _request_id: self._request_id,
        }
    }
}
