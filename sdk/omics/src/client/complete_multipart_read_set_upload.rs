// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CompleteMultipartReadSetUpload`](crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`sequence_store_id(impl ::std::convert::Into<String>)`](crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder::sequence_store_id) / [`set_sequence_store_id(Option<String>)`](crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder::set_sequence_store_id): <p> The sequence store ID for the store involved in the multipart upload. </p>
    ///   - [`upload_id(impl ::std::convert::Into<String>)`](crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder::upload_id) / [`set_upload_id(Option<String>)`](crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder::set_upload_id): <p> The ID for the multipart upload. </p>
    ///   - [`parts(Vec<CompleteReadSetUploadPartListItem>)`](crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder::parts) / [`set_parts(Option<Vec<CompleteReadSetUploadPartListItem>>)`](crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder::set_parts): <p> The individual uploads or parts of a multipart upload. </p>
    /// - On success, responds with [`CompleteMultipartReadSetUploadOutput`](crate::operation::complete_multipart_read_set_upload::CompleteMultipartReadSetUploadOutput) with field(s):
    ///   - [`read_set_id(Option<String>)`](crate::operation::complete_multipart_read_set_upload::CompleteMultipartReadSetUploadOutput::read_set_id): <p> The read set ID created for an uploaded read set. </p>
    /// - On failure, responds with [`SdkError<CompleteMultipartReadSetUploadError>`](crate::operation::complete_multipart_read_set_upload::CompleteMultipartReadSetUploadError)
    pub fn complete_multipart_read_set_upload(
        &self,
    ) -> crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder {
        crate::operation::complete_multipart_read_set_upload::builders::CompleteMultipartReadSetUploadFluentBuilder::new(self.handle.clone())
    }
}
