// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_keyspace;

pub(crate) mod shape_create_table;

pub(crate) mod shape_delete_keyspace;

pub(crate) mod shape_delete_table;

pub(crate) mod shape_get_keyspace;

pub(crate) mod shape_get_table;

pub(crate) mod shape_list_keyspaces;

pub(crate) mod shape_list_tables;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_restore_table;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_table;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_keyspace_input;

pub(crate) mod shape_create_table_input;

pub(crate) mod shape_delete_keyspace_input;

pub(crate) mod shape_delete_table_input;

pub(crate) mod shape_get_keyspace_input;

pub(crate) mod shape_get_table_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_keyspaces_input;

pub(crate) mod shape_list_tables_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_restore_table_input;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_table_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_capacity_specification;

pub(crate) mod shape_capacity_specification_summary;

pub(crate) mod shape_client_side_timestamps;

pub(crate) mod shape_column_definition;

pub(crate) mod shape_comment;

pub(crate) mod shape_encryption_specification;

pub(crate) mod shape_keyspace_summary_list;

pub(crate) mod shape_point_in_time_recovery;

pub(crate) mod shape_point_in_time_recovery_summary;

pub(crate) mod shape_region_list;

pub(crate) mod shape_replication_specification;

pub(crate) mod shape_schema_definition;

pub(crate) mod shape_table_summary_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_time_to_live;

pub(crate) mod shape_clustering_key;

pub(crate) mod shape_clustering_key_list;

pub(crate) mod shape_column_definition_list;

pub(crate) mod shape_keyspace_summary;

pub(crate) mod shape_partition_key;

pub(crate) mod shape_partition_key_list;

pub(crate) mod shape_static_column;

pub(crate) mod shape_static_column_list;

pub(crate) mod shape_table_summary;
