// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_batch_execute_statement;

pub(crate) mod shape_begin_transaction;

pub(crate) mod shape_commit_transaction;

pub(crate) mod shape_execute_sql;

pub(crate) mod shape_execute_statement;

pub(crate) mod shape_rollback_transaction;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_bad_request_exception;

pub(crate) mod shape_batch_execute_statement_input;

pub(crate) mod shape_begin_transaction_input;

pub(crate) mod shape_commit_transaction_input;

pub(crate) mod shape_execute_sql_input;

pub(crate) mod shape_execute_statement_input;

pub(crate) mod shape_forbidden_exception;

pub(crate) mod shape_internal_server_error_exception;

pub(crate) mod shape_not_found_exception;

pub(crate) mod shape_rollback_transaction_input;

pub(crate) mod shape_service_unavailable_error;

pub(crate) mod shape_statement_timeout_exception;

pub(crate) mod shape_field_list;

pub(crate) mod shape_metadata;

pub(crate) mod shape_result_set_options;

pub(crate) mod shape_sql_parameter;

pub(crate) mod shape_sql_records;

pub(crate) mod shape_sql_statement_results;

pub(crate) mod shape_update_results;

pub(crate) mod shape_column_metadata;

pub(crate) mod shape_field;

pub(crate) mod shape_sql_statement_result;

pub(crate) mod shape_update_result;

pub(crate) mod shape_array_value;

pub(crate) mod shape_result_frame;

pub(crate) mod shape_array_of_array;

pub(crate) mod shape_boolean_array;

pub(crate) mod shape_double_array;

pub(crate) mod shape_long_array;

pub(crate) mod shape_records;

pub(crate) mod shape_result_set_metadata;

pub(crate) mod shape_string_array;

pub(crate) mod shape_record;

pub(crate) mod shape_row;

pub(crate) mod shape_value;

pub(crate) mod shape_array_value_list;

pub(crate) mod shape_struct_value;
