// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Summary information about the human loop.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HumanLoopSummary {
    /// <p>The name of the human loop.</p>
    pub human_loop_name: ::std::option::Option<::std::string::String>,
    /// <p>The status of the human loop. </p>
    pub human_loop_status: ::std::option::Option<crate::types::HumanLoopStatus>,
    /// <p>When Amazon Augmented AI created the human loop.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The reason why the human loop failed. A failure reason is returned when the status of the human loop is <code>Failed</code>.</p>
    pub failure_reason: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of the flow definition used to configure the human loop.</p>
    pub flow_definition_arn: ::std::option::Option<::std::string::String>,
}
impl HumanLoopSummary {
    /// <p>The name of the human loop.</p>
    pub fn human_loop_name(&self) -> ::std::option::Option<&str> {
        self.human_loop_name.as_deref()
    }
    /// <p>The status of the human loop. </p>
    pub fn human_loop_status(&self) -> ::std::option::Option<&crate::types::HumanLoopStatus> {
        self.human_loop_status.as_ref()
    }
    /// <p>When Amazon Augmented AI created the human loop.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The reason why the human loop failed. A failure reason is returned when the status of the human loop is <code>Failed</code>.</p>
    pub fn failure_reason(&self) -> ::std::option::Option<&str> {
        self.failure_reason.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition used to configure the human loop.</p>
    pub fn flow_definition_arn(&self) -> ::std::option::Option<&str> {
        self.flow_definition_arn.as_deref()
    }
}
impl HumanLoopSummary {
    /// Creates a new builder-style object to manufacture [`HumanLoopSummary`](crate::types::HumanLoopSummary).
    pub fn builder() -> crate::types::builders::HumanLoopSummaryBuilder {
        crate::types::builders::HumanLoopSummaryBuilder::default()
    }
}

/// A builder for [`HumanLoopSummary`](crate::types::HumanLoopSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct HumanLoopSummaryBuilder {
    pub(crate) human_loop_name: ::std::option::Option<::std::string::String>,
    pub(crate) human_loop_status: ::std::option::Option<crate::types::HumanLoopStatus>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) failure_reason: ::std::option::Option<::std::string::String>,
    pub(crate) flow_definition_arn: ::std::option::Option<::std::string::String>,
}
impl HumanLoopSummaryBuilder {
    /// <p>The name of the human loop.</p>
    pub fn human_loop_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.human_loop_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the human loop.</p>
    pub fn set_human_loop_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.human_loop_name = input;
        self
    }
    /// <p>The name of the human loop.</p>
    pub fn get_human_loop_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.human_loop_name
    }
    /// <p>The status of the human loop. </p>
    pub fn human_loop_status(mut self, input: crate::types::HumanLoopStatus) -> Self {
        self.human_loop_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the human loop. </p>
    pub fn set_human_loop_status(mut self, input: ::std::option::Option<crate::types::HumanLoopStatus>) -> Self {
        self.human_loop_status = input;
        self
    }
    /// <p>The status of the human loop. </p>
    pub fn get_human_loop_status(&self) -> &::std::option::Option<crate::types::HumanLoopStatus> {
        &self.human_loop_status
    }
    /// <p>When Amazon Augmented AI created the human loop.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>When Amazon Augmented AI created the human loop.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>When Amazon Augmented AI created the human loop.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The reason why the human loop failed. A failure reason is returned when the status of the human loop is <code>Failed</code>.</p>
    pub fn failure_reason(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.failure_reason = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The reason why the human loop failed. A failure reason is returned when the status of the human loop is <code>Failed</code>.</p>
    pub fn set_failure_reason(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.failure_reason = input;
        self
    }
    /// <p>The reason why the human loop failed. A failure reason is returned when the status of the human loop is <code>Failed</code>.</p>
    pub fn get_failure_reason(&self) -> &::std::option::Option<::std::string::String> {
        &self.failure_reason
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition used to configure the human loop.</p>
    pub fn flow_definition_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flow_definition_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition used to configure the human loop.</p>
    pub fn set_flow_definition_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flow_definition_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the flow definition used to configure the human loop.</p>
    pub fn get_flow_definition_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.flow_definition_arn
    }
    /// Consumes the builder and constructs a [`HumanLoopSummary`](crate::types::HumanLoopSummary).
    pub fn build(self) -> crate::types::HumanLoopSummary {
        crate::types::HumanLoopSummary {
            human_loop_name: self.human_loop_name,
            human_loop_status: self.human_loop_status,
            creation_time: self.creation_time,
            failure_reason: self.failure_reason,
            flow_definition_arn: self.flow_definition_arn,
        }
    }
}
