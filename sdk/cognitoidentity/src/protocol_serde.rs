// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_identity_pool;

pub(crate) mod shape_delete_identities;

pub(crate) mod shape_delete_identity_pool;

pub(crate) mod shape_describe_identity;

pub(crate) mod shape_describe_identity_pool;

pub(crate) mod shape_get_credentials_for_identity;

pub(crate) mod shape_get_id;

pub(crate) mod shape_get_identity_pool_roles;

pub(crate) mod shape_get_open_id_token;

pub(crate) mod shape_get_open_id_token_for_developer_identity;

pub(crate) mod shape_get_principal_tag_attribute_map;

pub(crate) mod shape_list_identities;

pub(crate) mod shape_list_identity_pools;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_lookup_developer_identity;

pub(crate) mod shape_merge_developer_identities;

pub(crate) mod shape_set_identity_pool_roles;

pub(crate) mod shape_set_principal_tag_attribute_map;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_unlink_developer_identity;

pub(crate) mod shape_unlink_identity;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_identity_pool;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_concurrent_modification_exception;

pub(crate) mod shape_create_identity_pool_input;

pub(crate) mod shape_delete_identities_input;

pub(crate) mod shape_delete_identity_pool_input;

pub(crate) mod shape_describe_identity_input;

pub(crate) mod shape_describe_identity_pool_input;

pub(crate) mod shape_developer_user_already_registered_exception;

pub(crate) mod shape_external_service_exception;

pub(crate) mod shape_get_credentials_for_identity_input;

pub(crate) mod shape_get_id_input;

pub(crate) mod shape_get_identity_pool_roles_input;

pub(crate) mod shape_get_open_id_token_for_developer_identity_input;

pub(crate) mod shape_get_open_id_token_input;

pub(crate) mod shape_get_principal_tag_attribute_map_input;

pub(crate) mod shape_internal_error_exception;

pub(crate) mod shape_invalid_identity_pool_configuration_exception;

pub(crate) mod shape_invalid_parameter_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_list_identities_input;

pub(crate) mod shape_list_identity_pools_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_lookup_developer_identity_input;

pub(crate) mod shape_merge_developer_identities_input;

pub(crate) mod shape_not_authorized_exception;

pub(crate) mod shape_resource_conflict_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_set_identity_pool_roles_input;

pub(crate) mod shape_set_principal_tag_attribute_map_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_too_many_requests_exception;

pub(crate) mod shape_unlink_developer_identity_input;

pub(crate) mod shape_unlink_identity_input;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_identity_pool_input;

pub(crate) mod shape_cognito_identity_provider;

pub(crate) mod shape_cognito_identity_provider_list;

pub(crate) mod shape_credentials;

pub(crate) mod shape_developer_user_identifier_list;

pub(crate) mod shape_identities_list;

pub(crate) mod shape_identity_pool_tags_type;

pub(crate) mod shape_identity_pools_list;

pub(crate) mod shape_identity_providers;

pub(crate) mod shape_logins_list;

pub(crate) mod shape_oidc_provider_list;

pub(crate) mod shape_principal_tags;

pub(crate) mod shape_role_mapping;

pub(crate) mod shape_role_mapping_map;

pub(crate) mod shape_roles_map;

pub(crate) mod shape_saml_provider_list;

pub(crate) mod shape_unprocessed_identity_id_list;

pub(crate) mod shape_identity_description;

pub(crate) mod shape_identity_pool_short_description;

pub(crate) mod shape_rules_configuration_type;

pub(crate) mod shape_unprocessed_identity_id;

pub(crate) mod shape_mapping_rule;

pub(crate) mod shape_mapping_rules_list;
