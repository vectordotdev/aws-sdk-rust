// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration object for an event concatenation pipeline.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MeetingEventsConcatenationConfiguration {
    /// <p>Enables or disables the configuration object.</p>
    pub state: ::std::option::Option<crate::types::ArtifactsConcatenationState>,
}
impl MeetingEventsConcatenationConfiguration {
    /// <p>Enables or disables the configuration object.</p>
    pub fn state(&self) -> ::std::option::Option<&crate::types::ArtifactsConcatenationState> {
        self.state.as_ref()
    }
}
impl MeetingEventsConcatenationConfiguration {
    /// Creates a new builder-style object to manufacture [`MeetingEventsConcatenationConfiguration`](crate::types::MeetingEventsConcatenationConfiguration).
    pub fn builder() -> crate::types::builders::MeetingEventsConcatenationConfigurationBuilder {
        crate::types::builders::MeetingEventsConcatenationConfigurationBuilder::default()
    }
}

/// A builder for [`MeetingEventsConcatenationConfiguration`](crate::types::MeetingEventsConcatenationConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MeetingEventsConcatenationConfigurationBuilder {
    pub(crate) state: ::std::option::Option<crate::types::ArtifactsConcatenationState>,
}
impl MeetingEventsConcatenationConfigurationBuilder {
    /// <p>Enables or disables the configuration object.</p>
    pub fn state(mut self, input: crate::types::ArtifactsConcatenationState) -> Self {
        self.state = ::std::option::Option::Some(input);
        self
    }
    /// <p>Enables or disables the configuration object.</p>
    pub fn set_state(mut self, input: ::std::option::Option<crate::types::ArtifactsConcatenationState>) -> Self {
        self.state = input;
        self
    }
    /// <p>Enables or disables the configuration object.</p>
    pub fn get_state(&self) -> &::std::option::Option<crate::types::ArtifactsConcatenationState> {
        &self.state
    }
    /// Consumes the builder and constructs a [`MeetingEventsConcatenationConfiguration`](crate::types::MeetingEventsConcatenationConfiguration).
    pub fn build(self) -> crate::types::MeetingEventsConcatenationConfiguration {
        crate::types::MeetingEventsConcatenationConfiguration { state: self.state }
    }
}
