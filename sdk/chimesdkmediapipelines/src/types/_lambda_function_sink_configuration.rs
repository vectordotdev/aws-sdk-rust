// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains the configuration settings for an AWS Lambda function's data sink.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq)]
pub struct LambdaFunctionSinkConfiguration {
    /// <p>The ARN of the sink.</p>
    pub insights_target: ::std::option::Option<::std::string::String>,
}
impl LambdaFunctionSinkConfiguration {
    /// <p>The ARN of the sink.</p>
    pub fn insights_target(&self) -> ::std::option::Option<&str> {
        self.insights_target.as_deref()
    }
}
impl ::std::fmt::Debug for LambdaFunctionSinkConfiguration {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("LambdaFunctionSinkConfiguration");
        formatter.field("insights_target", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
impl LambdaFunctionSinkConfiguration {
    /// Creates a new builder-style object to manufacture [`LambdaFunctionSinkConfiguration`](crate::types::LambdaFunctionSinkConfiguration).
    pub fn builder() -> crate::types::builders::LambdaFunctionSinkConfigurationBuilder {
        crate::types::builders::LambdaFunctionSinkConfigurationBuilder::default()
    }
}

/// A builder for [`LambdaFunctionSinkConfiguration`](crate::types::LambdaFunctionSinkConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default)]
pub struct LambdaFunctionSinkConfigurationBuilder {
    pub(crate) insights_target: ::std::option::Option<::std::string::String>,
}
impl LambdaFunctionSinkConfigurationBuilder {
    /// <p>The ARN of the sink.</p>
    pub fn insights_target(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.insights_target = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the sink.</p>
    pub fn set_insights_target(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.insights_target = input;
        self
    }
    /// <p>The ARN of the sink.</p>
    pub fn get_insights_target(&self) -> &::std::option::Option<::std::string::String> {
        &self.insights_target
    }
    /// Consumes the builder and constructs a [`LambdaFunctionSinkConfiguration`](crate::types::LambdaFunctionSinkConfiguration).
    pub fn build(self) -> crate::types::LambdaFunctionSinkConfiguration {
        crate::types::LambdaFunctionSinkConfiguration {
            insights_target: self.insights_target,
        }
    }
}
impl ::std::fmt::Debug for LambdaFunctionSinkConfigurationBuilder {
    fn fmt(&self, f: &mut ::std::fmt::Formatter<'_>) -> ::std::fmt::Result {
        let mut formatter = f.debug_struct("LambdaFunctionSinkConfigurationBuilder");
        formatter.field("insights_target", &"*** Sensitive Data Redacted ***");
        formatter.finish()
    }
}
