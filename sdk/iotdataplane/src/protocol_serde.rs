// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_delete_thing_shadow;

pub(crate) mod shape_get_retained_message;

pub(crate) mod shape_get_thing_shadow;

pub(crate) mod shape_list_named_shadows_for_thing;

pub(crate) mod shape_list_retained_messages;

pub(crate) mod shape_publish;

pub(crate) mod shape_publish_input;

pub(crate) mod shape_update_thing_shadow;

pub(crate) mod shape_update_thing_shadow_input;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_delete_thing_shadow_output;

pub(crate) mod shape_get_thing_shadow_output;

pub(crate) mod shape_internal_failure_exception;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_method_not_allowed_exception;

pub(crate) mod shape_request_entity_too_large_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_unavailable_exception;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_unauthorized_exception;

pub(crate) mod shape_unsupported_document_encoding_exception;

pub(crate) mod shape_update_thing_shadow_output;

pub(crate) mod shape_named_shadow_list;

pub(crate) mod shape_retained_message_list;

pub(crate) mod shape_retained_message_summary;
