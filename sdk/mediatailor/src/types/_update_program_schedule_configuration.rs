// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Schedule configuration parameters.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct UpdateProgramScheduleConfiguration {
    /// <p>Program transition configuration.</p>
    pub transition: ::std::option::Option<crate::types::UpdateProgramTransition>,
    /// <p>Program clip range configuration.</p>
    pub clip_range: ::std::option::Option<crate::types::ClipRange>,
}
impl UpdateProgramScheduleConfiguration {
    /// <p>Program transition configuration.</p>
    pub fn transition(&self) -> ::std::option::Option<&crate::types::UpdateProgramTransition> {
        self.transition.as_ref()
    }
    /// <p>Program clip range configuration.</p>
    pub fn clip_range(&self) -> ::std::option::Option<&crate::types::ClipRange> {
        self.clip_range.as_ref()
    }
}
impl UpdateProgramScheduleConfiguration {
    /// Creates a new builder-style object to manufacture [`UpdateProgramScheduleConfiguration`](crate::types::UpdateProgramScheduleConfiguration).
    pub fn builder() -> crate::types::builders::UpdateProgramScheduleConfigurationBuilder {
        crate::types::builders::UpdateProgramScheduleConfigurationBuilder::default()
    }
}

/// A builder for [`UpdateProgramScheduleConfiguration`](crate::types::UpdateProgramScheduleConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct UpdateProgramScheduleConfigurationBuilder {
    pub(crate) transition: ::std::option::Option<crate::types::UpdateProgramTransition>,
    pub(crate) clip_range: ::std::option::Option<crate::types::ClipRange>,
}
impl UpdateProgramScheduleConfigurationBuilder {
    /// <p>Program transition configuration.</p>
    pub fn transition(mut self, input: crate::types::UpdateProgramTransition) -> Self {
        self.transition = ::std::option::Option::Some(input);
        self
    }
    /// <p>Program transition configuration.</p>
    pub fn set_transition(mut self, input: ::std::option::Option<crate::types::UpdateProgramTransition>) -> Self {
        self.transition = input;
        self
    }
    /// <p>Program transition configuration.</p>
    pub fn get_transition(&self) -> &::std::option::Option<crate::types::UpdateProgramTransition> {
        &self.transition
    }
    /// <p>Program clip range configuration.</p>
    pub fn clip_range(mut self, input: crate::types::ClipRange) -> Self {
        self.clip_range = ::std::option::Option::Some(input);
        self
    }
    /// <p>Program clip range configuration.</p>
    pub fn set_clip_range(mut self, input: ::std::option::Option<crate::types::ClipRange>) -> Self {
        self.clip_range = input;
        self
    }
    /// <p>Program clip range configuration.</p>
    pub fn get_clip_range(&self) -> &::std::option::Option<crate::types::ClipRange> {
        &self.clip_range
    }
    /// Consumes the builder and constructs a [`UpdateProgramScheduleConfiguration`](crate::types::UpdateProgramScheduleConfiguration).
    pub fn build(self) -> crate::types::UpdateProgramScheduleConfiguration {
        crate::types::UpdateProgramScheduleConfiguration {
            transition: self.transition,
            clip_range: self.clip_range,
        }
    }
}
