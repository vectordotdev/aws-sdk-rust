// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub fn ser_data_lake_configuration(
    object: &mut ::aws_smithy_json::serialize::JsonObjectWriter,
    input: &crate::types::DataLakeConfiguration,
) -> Result<(), ::aws_smithy_http::operation::error::SerializationError> {
    if let Some(var_1) = &input.region {
        object.key("region").string(var_1.as_str());
    }
    if let Some(var_2) = &input.encryption_configuration {
        #[allow(unused_mut)]
        let mut object_3 = object.key("encryptionConfiguration").start_object();
        crate::protocol_serde::shape_data_lake_encryption_configuration::ser_data_lake_encryption_configuration(&mut object_3, var_2)?;
        object_3.finish();
    }
    if let Some(var_4) = &input.lifecycle_configuration {
        #[allow(unused_mut)]
        let mut object_5 = object.key("lifecycleConfiguration").start_object();
        crate::protocol_serde::shape_data_lake_lifecycle_configuration::ser_data_lake_lifecycle_configuration(&mut object_5, var_4)?;
        object_5.finish();
    }
    if let Some(var_6) = &input.replication_configuration {
        #[allow(unused_mut)]
        let mut object_7 = object.key("replicationConfiguration").start_object();
        crate::protocol_serde::shape_data_lake_replication_configuration::ser_data_lake_replication_configuration(&mut object_7, var_6)?;
        object_7.finish();
    }
    Ok(())
}
