// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration for the Glue Crawler for the third-party custom source.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CustomLogSourceCrawlerConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be used by the Glue crawler. The recommended IAM policies are:</p>
    /// <ul>
    /// <li> <p>The managed policy <code>AWSGlueServiceRole</code> </p> </li>
    /// <li> <p>A custom policy granting access to your Amazon S3 Data Lake</p> </li>
    /// </ul>
    pub role_arn: ::std::option::Option<::std::string::String>,
}
impl CustomLogSourceCrawlerConfiguration {
    /// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be used by the Glue crawler. The recommended IAM policies are:</p>
    /// <ul>
    /// <li> <p>The managed policy <code>AWSGlueServiceRole</code> </p> </li>
    /// <li> <p>A custom policy granting access to your Amazon S3 Data Lake</p> </li>
    /// </ul>
    pub fn role_arn(&self) -> ::std::option::Option<&str> {
        self.role_arn.as_deref()
    }
}
impl CustomLogSourceCrawlerConfiguration {
    /// Creates a new builder-style object to manufacture [`CustomLogSourceCrawlerConfiguration`](crate::types::CustomLogSourceCrawlerConfiguration).
    pub fn builder() -> crate::types::builders::CustomLogSourceCrawlerConfigurationBuilder {
        crate::types::builders::CustomLogSourceCrawlerConfigurationBuilder::default()
    }
}

/// A builder for [`CustomLogSourceCrawlerConfiguration`](crate::types::CustomLogSourceCrawlerConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CustomLogSourceCrawlerConfigurationBuilder {
    pub(crate) role_arn: ::std::option::Option<::std::string::String>,
}
impl CustomLogSourceCrawlerConfigurationBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be used by the Glue crawler. The recommended IAM policies are:</p>
    /// <ul>
    /// <li> <p>The managed policy <code>AWSGlueServiceRole</code> </p> </li>
    /// <li> <p>A custom policy granting access to your Amazon S3 Data Lake</p> </li>
    /// </ul>
    pub fn role_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.role_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be used by the Glue crawler. The recommended IAM policies are:</p>
    /// <ul>
    /// <li> <p>The managed policy <code>AWSGlueServiceRole</code> </p> </li>
    /// <li> <p>A custom policy granting access to your Amazon S3 Data Lake</p> </li>
    /// </ul>
    pub fn set_role_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.role_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Identity and Access Management (IAM) role to be used by the Glue crawler. The recommended IAM policies are:</p>
    /// <ul>
    /// <li> <p>The managed policy <code>AWSGlueServiceRole</code> </p> </li>
    /// <li> <p>A custom policy granting access to your Amazon S3 Data Lake</p> </li>
    /// </ul>
    pub fn get_role_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.role_arn
    }
    /// Consumes the builder and constructs a [`CustomLogSourceCrawlerConfiguration`](crate::types::CustomLogSourceCrawlerConfiguration).
    pub fn build(self) -> crate::types::CustomLogSourceCrawlerConfiguration {
        crate::types::CustomLogSourceCrawlerConfiguration { role_arn: self.role_arn }
    }
}
