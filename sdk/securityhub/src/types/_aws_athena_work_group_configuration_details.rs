// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The configuration of the workgroup, which includes the location in Amazon Simple Storage Service (Amazon S3) where query results are stored, the encryption option, if any, used for query results, whether Amazon CloudWatch metrics are enabled for the workgroup, and the limit for the amount of bytes scanned (cutoff) per query, if it is specified. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsAthenaWorkGroupConfigurationDetails {
    /// <p> The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as client-side settings. If workgroup settings override client-side settings, then the query uses the workgroup settings.</p>
    pub result_configuration: ::std::option::Option<crate::types::AwsAthenaWorkGroupConfigurationResultConfigurationDetails>,
}
impl AwsAthenaWorkGroupConfigurationDetails {
    /// <p> The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as client-side settings. If workgroup settings override client-side settings, then the query uses the workgroup settings.</p>
    pub fn result_configuration(&self) -> ::std::option::Option<&crate::types::AwsAthenaWorkGroupConfigurationResultConfigurationDetails> {
        self.result_configuration.as_ref()
    }
}
impl AwsAthenaWorkGroupConfigurationDetails {
    /// Creates a new builder-style object to manufacture [`AwsAthenaWorkGroupConfigurationDetails`](crate::types::AwsAthenaWorkGroupConfigurationDetails).
    pub fn builder() -> crate::types::builders::AwsAthenaWorkGroupConfigurationDetailsBuilder {
        crate::types::builders::AwsAthenaWorkGroupConfigurationDetailsBuilder::default()
    }
}

/// A builder for [`AwsAthenaWorkGroupConfigurationDetails`](crate::types::AwsAthenaWorkGroupConfigurationDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsAthenaWorkGroupConfigurationDetailsBuilder {
    pub(crate) result_configuration: ::std::option::Option<crate::types::AwsAthenaWorkGroupConfigurationResultConfigurationDetails>,
}
impl AwsAthenaWorkGroupConfigurationDetailsBuilder {
    /// <p> The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as client-side settings. If workgroup settings override client-side settings, then the query uses the workgroup settings.</p>
    pub fn result_configuration(mut self, input: crate::types::AwsAthenaWorkGroupConfigurationResultConfigurationDetails) -> Self {
        self.result_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p> The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as client-side settings. If workgroup settings override client-side settings, then the query uses the workgroup settings.</p>
    pub fn set_result_configuration(
        mut self,
        input: ::std::option::Option<crate::types::AwsAthenaWorkGroupConfigurationResultConfigurationDetails>,
    ) -> Self {
        self.result_configuration = input;
        self
    }
    /// <p> The location in Amazon S3 where query and calculation results are stored and the encryption option, if any, used for query and calculation results. These are known as client-side settings. If workgroup settings override client-side settings, then the query uses the workgroup settings.</p>
    pub fn get_result_configuration(&self) -> &::std::option::Option<crate::types::AwsAthenaWorkGroupConfigurationResultConfigurationDetails> {
        &self.result_configuration
    }
    /// Consumes the builder and constructs a [`AwsAthenaWorkGroupConfigurationDetails`](crate::types::AwsAthenaWorkGroupConfigurationDetails).
    pub fn build(self) -> crate::types::AwsAthenaWorkGroupConfigurationDetails {
        crate::types::AwsAthenaWorkGroupConfigurationDetails {
            result_configuration: self.result_configuration,
        }
    }
}
