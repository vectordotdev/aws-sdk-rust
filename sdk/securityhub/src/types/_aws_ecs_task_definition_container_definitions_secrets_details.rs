// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A secret to pass to the container.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails {
    /// <p>The name of the secret.</p>
    pub name: ::std::option::Option<::std::string::String>,
    /// <p>The secret to expose to the container. The value is either the full ARN of the Secrets Manager secret or the full ARN of the parameter in the Systems Manager Parameter Store.</p>
    pub value_from: ::std::option::Option<::std::string::String>,
}
impl AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails {
    /// <p>The name of the secret.</p>
    pub fn name(&self) -> ::std::option::Option<&str> {
        self.name.as_deref()
    }
    /// <p>The secret to expose to the container. The value is either the full ARN of the Secrets Manager secret or the full ARN of the parameter in the Systems Manager Parameter Store.</p>
    pub fn value_from(&self) -> ::std::option::Option<&str> {
        self.value_from.as_deref()
    }
}
impl AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails {
    /// Creates a new builder-style object to manufacture [`AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails`](crate::types::AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails).
    pub fn builder() -> crate::types::builders::AwsEcsTaskDefinitionContainerDefinitionsSecretsDetailsBuilder {
        crate::types::builders::AwsEcsTaskDefinitionContainerDefinitionsSecretsDetailsBuilder::default()
    }
}

/// A builder for [`AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails`](crate::types::AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsEcsTaskDefinitionContainerDefinitionsSecretsDetailsBuilder {
    pub(crate) name: ::std::option::Option<::std::string::String>,
    pub(crate) value_from: ::std::option::Option<::std::string::String>,
}
impl AwsEcsTaskDefinitionContainerDefinitionsSecretsDetailsBuilder {
    /// <p>The name of the secret.</p>
    pub fn name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the secret.</p>
    pub fn set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.name = input;
        self
    }
    /// <p>The name of the secret.</p>
    pub fn get_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.name
    }
    /// <p>The secret to expose to the container. The value is either the full ARN of the Secrets Manager secret or the full ARN of the parameter in the Systems Manager Parameter Store.</p>
    pub fn value_from(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.value_from = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The secret to expose to the container. The value is either the full ARN of the Secrets Manager secret or the full ARN of the parameter in the Systems Manager Parameter Store.</p>
    pub fn set_value_from(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.value_from = input;
        self
    }
    /// <p>The secret to expose to the container. The value is either the full ARN of the Secrets Manager secret or the full ARN of the parameter in the Systems Manager Parameter Store.</p>
    pub fn get_value_from(&self) -> &::std::option::Option<::std::string::String> {
        &self.value_from
    }
    /// Consumes the builder and constructs a [`AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails`](crate::types::AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails).
    pub fn build(self) -> crate::types::AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails {
        crate::types::AwsEcsTaskDefinitionContainerDefinitionsSecretsDetails {
            name: self.name,
            value_from: self.value_from,
        }
    }
}
