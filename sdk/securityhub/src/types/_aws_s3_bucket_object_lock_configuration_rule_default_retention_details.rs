// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The default S3 Object Lock retention mode and period that you want to apply to new objects placed in the specified Amazon S3 bucket. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails {
    /// <p> The number of days that you want to specify for the default retention period. </p>
    pub days: i32,
    /// <p> The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. </p>
    pub mode: ::std::option::Option<::std::string::String>,
    /// <p> The number of years that you want to specify for the default retention period. </p>
    pub years: i32,
}
impl AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails {
    /// <p> The number of days that you want to specify for the default retention period. </p>
    pub fn days(&self) -> i32 {
        self.days
    }
    /// <p> The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. </p>
    pub fn mode(&self) -> ::std::option::Option<&str> {
        self.mode.as_deref()
    }
    /// <p> The number of years that you want to specify for the default retention period. </p>
    pub fn years(&self) -> i32 {
        self.years
    }
}
impl AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails {
    /// Creates a new builder-style object to manufacture [`AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails`](crate::types::AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails).
    pub fn builder() -> crate::types::builders::AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetailsBuilder {
        crate::types::builders::AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetailsBuilder::default()
    }
}

/// A builder for [`AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails`](crate::types::AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetailsBuilder {
    pub(crate) days: ::std::option::Option<i32>,
    pub(crate) mode: ::std::option::Option<::std::string::String>,
    pub(crate) years: ::std::option::Option<i32>,
}
impl AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetailsBuilder {
    /// <p> The number of days that you want to specify for the default retention period. </p>
    pub fn days(mut self, input: i32) -> Self {
        self.days = ::std::option::Option::Some(input);
        self
    }
    /// <p> The number of days that you want to specify for the default retention period. </p>
    pub fn set_days(mut self, input: ::std::option::Option<i32>) -> Self {
        self.days = input;
        self
    }
    /// <p> The number of days that you want to specify for the default retention period. </p>
    pub fn get_days(&self) -> &::std::option::Option<i32> {
        &self.days
    }
    /// <p> The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. </p>
    pub fn mode(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.mode = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. </p>
    pub fn set_mode(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.mode = input;
        self
    }
    /// <p> The default Object Lock retention mode you want to apply to new objects placed in the specified bucket. </p>
    pub fn get_mode(&self) -> &::std::option::Option<::std::string::String> {
        &self.mode
    }
    /// <p> The number of years that you want to specify for the default retention period. </p>
    pub fn years(mut self, input: i32) -> Self {
        self.years = ::std::option::Option::Some(input);
        self
    }
    /// <p> The number of years that you want to specify for the default retention period. </p>
    pub fn set_years(mut self, input: ::std::option::Option<i32>) -> Self {
        self.years = input;
        self
    }
    /// <p> The number of years that you want to specify for the default retention period. </p>
    pub fn get_years(&self) -> &::std::option::Option<i32> {
        &self.years
    }
    /// Consumes the builder and constructs a [`AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails`](crate::types::AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails).
    pub fn build(self) -> crate::types::AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails {
        crate::types::AwsS3BucketObjectLockConfigurationRuleDefaultRetentionDetails {
            days: self.days.unwrap_or_default(),
            mode: self.mode,
            years: self.years.unwrap_or_default(),
        }
    }
}
