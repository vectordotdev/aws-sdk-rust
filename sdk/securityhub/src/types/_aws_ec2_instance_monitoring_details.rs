// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The type of monitoring thatâ€™s turned on for an Amazon EC2 instance. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsEc2InstanceMonitoringDetails {
    /// <p> Indicates whether detailed monitoring is turned on. Otherwise, basic monitoring is turned on. </p>
    pub state: ::std::option::Option<::std::string::String>,
}
impl AwsEc2InstanceMonitoringDetails {
    /// <p> Indicates whether detailed monitoring is turned on. Otherwise, basic monitoring is turned on. </p>
    pub fn state(&self) -> ::std::option::Option<&str> {
        self.state.as_deref()
    }
}
impl AwsEc2InstanceMonitoringDetails {
    /// Creates a new builder-style object to manufacture [`AwsEc2InstanceMonitoringDetails`](crate::types::AwsEc2InstanceMonitoringDetails).
    pub fn builder() -> crate::types::builders::AwsEc2InstanceMonitoringDetailsBuilder {
        crate::types::builders::AwsEc2InstanceMonitoringDetailsBuilder::default()
    }
}

/// A builder for [`AwsEc2InstanceMonitoringDetails`](crate::types::AwsEc2InstanceMonitoringDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsEc2InstanceMonitoringDetailsBuilder {
    pub(crate) state: ::std::option::Option<::std::string::String>,
}
impl AwsEc2InstanceMonitoringDetailsBuilder {
    /// <p> Indicates whether detailed monitoring is turned on. Otherwise, basic monitoring is turned on. </p>
    pub fn state(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.state = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Indicates whether detailed monitoring is turned on. Otherwise, basic monitoring is turned on. </p>
    pub fn set_state(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.state = input;
        self
    }
    /// <p> Indicates whether detailed monitoring is turned on. Otherwise, basic monitoring is turned on. </p>
    pub fn get_state(&self) -> &::std::option::Option<::std::string::String> {
        &self.state
    }
    /// Consumes the builder and constructs a [`AwsEc2InstanceMonitoringDetails`](crate::types::AwsEc2InstanceMonitoringDetails).
    pub fn build(self) -> crate::types::AwsEc2InstanceMonitoringDetails {
        crate::types::AwsEc2InstanceMonitoringDetails { state: self.state }
    }
}
