// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> An object that contains information on the status of Kubernetes data sources for the detector. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsGuardDutyDetectorDataSourcesKubernetesDetails {
    /// <p> Describes whether Kubernetes audit logs are activated as a data source for the detector. </p>
    pub audit_logs: ::std::option::Option<crate::types::AwsGuardDutyDetectorDataSourcesKubernetesAuditLogsDetails>,
}
impl AwsGuardDutyDetectorDataSourcesKubernetesDetails {
    /// <p> Describes whether Kubernetes audit logs are activated as a data source for the detector. </p>
    pub fn audit_logs(&self) -> ::std::option::Option<&crate::types::AwsGuardDutyDetectorDataSourcesKubernetesAuditLogsDetails> {
        self.audit_logs.as_ref()
    }
}
impl AwsGuardDutyDetectorDataSourcesKubernetesDetails {
    /// Creates a new builder-style object to manufacture [`AwsGuardDutyDetectorDataSourcesKubernetesDetails`](crate::types::AwsGuardDutyDetectorDataSourcesKubernetesDetails).
    pub fn builder() -> crate::types::builders::AwsGuardDutyDetectorDataSourcesKubernetesDetailsBuilder {
        crate::types::builders::AwsGuardDutyDetectorDataSourcesKubernetesDetailsBuilder::default()
    }
}

/// A builder for [`AwsGuardDutyDetectorDataSourcesKubernetesDetails`](crate::types::AwsGuardDutyDetectorDataSourcesKubernetesDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsGuardDutyDetectorDataSourcesKubernetesDetailsBuilder {
    pub(crate) audit_logs: ::std::option::Option<crate::types::AwsGuardDutyDetectorDataSourcesKubernetesAuditLogsDetails>,
}
impl AwsGuardDutyDetectorDataSourcesKubernetesDetailsBuilder {
    /// <p> Describes whether Kubernetes audit logs are activated as a data source for the detector. </p>
    pub fn audit_logs(mut self, input: crate::types::AwsGuardDutyDetectorDataSourcesKubernetesAuditLogsDetails) -> Self {
        self.audit_logs = ::std::option::Option::Some(input);
        self
    }
    /// <p> Describes whether Kubernetes audit logs are activated as a data source for the detector. </p>
    pub fn set_audit_logs(mut self, input: ::std::option::Option<crate::types::AwsGuardDutyDetectorDataSourcesKubernetesAuditLogsDetails>) -> Self {
        self.audit_logs = input;
        self
    }
    /// <p> Describes whether Kubernetes audit logs are activated as a data source for the detector. </p>
    pub fn get_audit_logs(&self) -> &::std::option::Option<crate::types::AwsGuardDutyDetectorDataSourcesKubernetesAuditLogsDetails> {
        &self.audit_logs
    }
    /// Consumes the builder and constructs a [`AwsGuardDutyDetectorDataSourcesKubernetesDetails`](crate::types::AwsGuardDutyDetectorDataSourcesKubernetesDetails).
    pub fn build(self) -> crate::types::AwsGuardDutyDetectorDataSourcesKubernetesDetails {
        crate::types::AwsGuardDutyDetectorDataSourcesKubernetesDetails { audit_logs: self.audit_logs }
    }
}
