// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The container element for S3 Object Lock configuration parameters. In Amazon S3, Object Lock can help prevent objects from being deleted or overwritten for a fixed amount of time or indefinitely. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsS3BucketObjectLockConfiguration {
    /// <p> Indicates whether the bucket has an Object Lock configuration enabled. </p>
    pub object_lock_enabled: ::std::option::Option<::std::string::String>,
    /// <p> Specifies the Object Lock rule for the specified object. </p>
    pub rule: ::std::option::Option<crate::types::AwsS3BucketObjectLockConfigurationRuleDetails>,
}
impl AwsS3BucketObjectLockConfiguration {
    /// <p> Indicates whether the bucket has an Object Lock configuration enabled. </p>
    pub fn object_lock_enabled(&self) -> ::std::option::Option<&str> {
        self.object_lock_enabled.as_deref()
    }
    /// <p> Specifies the Object Lock rule for the specified object. </p>
    pub fn rule(&self) -> ::std::option::Option<&crate::types::AwsS3BucketObjectLockConfigurationRuleDetails> {
        self.rule.as_ref()
    }
}
impl AwsS3BucketObjectLockConfiguration {
    /// Creates a new builder-style object to manufacture [`AwsS3BucketObjectLockConfiguration`](crate::types::AwsS3BucketObjectLockConfiguration).
    pub fn builder() -> crate::types::builders::AwsS3BucketObjectLockConfigurationBuilder {
        crate::types::builders::AwsS3BucketObjectLockConfigurationBuilder::default()
    }
}

/// A builder for [`AwsS3BucketObjectLockConfiguration`](crate::types::AwsS3BucketObjectLockConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsS3BucketObjectLockConfigurationBuilder {
    pub(crate) object_lock_enabled: ::std::option::Option<::std::string::String>,
    pub(crate) rule: ::std::option::Option<crate::types::AwsS3BucketObjectLockConfigurationRuleDetails>,
}
impl AwsS3BucketObjectLockConfigurationBuilder {
    /// <p> Indicates whether the bucket has an Object Lock configuration enabled. </p>
    pub fn object_lock_enabled(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.object_lock_enabled = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Indicates whether the bucket has an Object Lock configuration enabled. </p>
    pub fn set_object_lock_enabled(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.object_lock_enabled = input;
        self
    }
    /// <p> Indicates whether the bucket has an Object Lock configuration enabled. </p>
    pub fn get_object_lock_enabled(&self) -> &::std::option::Option<::std::string::String> {
        &self.object_lock_enabled
    }
    /// <p> Specifies the Object Lock rule for the specified object. </p>
    pub fn rule(mut self, input: crate::types::AwsS3BucketObjectLockConfigurationRuleDetails) -> Self {
        self.rule = ::std::option::Option::Some(input);
        self
    }
    /// <p> Specifies the Object Lock rule for the specified object. </p>
    pub fn set_rule(mut self, input: ::std::option::Option<crate::types::AwsS3BucketObjectLockConfigurationRuleDetails>) -> Self {
        self.rule = input;
        self
    }
    /// <p> Specifies the Object Lock rule for the specified object. </p>
    pub fn get_rule(&self) -> &::std::option::Option<crate::types::AwsS3BucketObjectLockConfigurationRuleDetails> {
        &self.rule
    }
    /// Consumes the builder and constructs a [`AwsS3BucketObjectLockConfiguration`](crate::types::AwsS3BucketObjectLockConfiguration).
    pub fn build(self) -> crate::types::AwsS3BucketObjectLockConfiguration {
        crate::types::AwsS3BucketObjectLockConfiguration {
            object_lock_enabled: self.object_lock_enabled,
            rule: self.rule,
        }
    }
}
