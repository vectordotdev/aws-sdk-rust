// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Provides details about the broker usernames for the specified broker. Doesn't apply to RabbitMQ brokers. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsAmazonMqBrokerUsersDetails {
    /// <p> The type of change pending for the broker user. </p>
    pub pending_change: ::std::option::Option<::std::string::String>,
    /// <p> The username of the broker user. </p>
    pub username: ::std::option::Option<::std::string::String>,
}
impl AwsAmazonMqBrokerUsersDetails {
    /// <p> The type of change pending for the broker user. </p>
    pub fn pending_change(&self) -> ::std::option::Option<&str> {
        self.pending_change.as_deref()
    }
    /// <p> The username of the broker user. </p>
    pub fn username(&self) -> ::std::option::Option<&str> {
        self.username.as_deref()
    }
}
impl AwsAmazonMqBrokerUsersDetails {
    /// Creates a new builder-style object to manufacture [`AwsAmazonMqBrokerUsersDetails`](crate::types::AwsAmazonMqBrokerUsersDetails).
    pub fn builder() -> crate::types::builders::AwsAmazonMqBrokerUsersDetailsBuilder {
        crate::types::builders::AwsAmazonMqBrokerUsersDetailsBuilder::default()
    }
}

/// A builder for [`AwsAmazonMqBrokerUsersDetails`](crate::types::AwsAmazonMqBrokerUsersDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsAmazonMqBrokerUsersDetailsBuilder {
    pub(crate) pending_change: ::std::option::Option<::std::string::String>,
    pub(crate) username: ::std::option::Option<::std::string::String>,
}
impl AwsAmazonMqBrokerUsersDetailsBuilder {
    /// <p> The type of change pending for the broker user. </p>
    pub fn pending_change(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.pending_change = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The type of change pending for the broker user. </p>
    pub fn set_pending_change(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.pending_change = input;
        self
    }
    /// <p> The type of change pending for the broker user. </p>
    pub fn get_pending_change(&self) -> &::std::option::Option<::std::string::String> {
        &self.pending_change
    }
    /// <p> The username of the broker user. </p>
    pub fn username(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.username = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The username of the broker user. </p>
    pub fn set_username(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.username = input;
        self
    }
    /// <p> The username of the broker user. </p>
    pub fn get_username(&self) -> &::std::option::Option<::std::string::String> {
        &self.username
    }
    /// Consumes the builder and constructs a [`AwsAmazonMqBrokerUsersDetails`](crate::types::AwsAmazonMqBrokerUsersDetails).
    pub fn build(self) -> crate::types::AwsAmazonMqBrokerUsersDetails {
        crate::types::AwsAmazonMqBrokerUsersDetails {
            pending_change: self.pending_change,
            username: self.username,
        }
    }
}
