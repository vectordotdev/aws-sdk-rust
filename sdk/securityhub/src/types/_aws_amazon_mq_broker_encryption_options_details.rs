// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> Provides details about broker encryption options. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsAmazonMqBrokerEncryptionOptionsDetails {
    /// <p> The KMS key that’s used to encrypt your data at rest. If not provided, Amazon MQ will use a default KMS key to encrypt your data. </p>
    pub kms_key_id: ::std::option::Option<::std::string::String>,
    /// <p> Specifies that an KMS key should be used for at-rest encryption. Set to <code>true</code> by default if no value is provided (for example, for RabbitMQ brokers). </p>
    pub use_aws_owned_key: bool,
}
impl AwsAmazonMqBrokerEncryptionOptionsDetails {
    /// <p> The KMS key that’s used to encrypt your data at rest. If not provided, Amazon MQ will use a default KMS key to encrypt your data. </p>
    pub fn kms_key_id(&self) -> ::std::option::Option<&str> {
        self.kms_key_id.as_deref()
    }
    /// <p> Specifies that an KMS key should be used for at-rest encryption. Set to <code>true</code> by default if no value is provided (for example, for RabbitMQ brokers). </p>
    pub fn use_aws_owned_key(&self) -> bool {
        self.use_aws_owned_key
    }
}
impl AwsAmazonMqBrokerEncryptionOptionsDetails {
    /// Creates a new builder-style object to manufacture [`AwsAmazonMqBrokerEncryptionOptionsDetails`](crate::types::AwsAmazonMqBrokerEncryptionOptionsDetails).
    pub fn builder() -> crate::types::builders::AwsAmazonMqBrokerEncryptionOptionsDetailsBuilder {
        crate::types::builders::AwsAmazonMqBrokerEncryptionOptionsDetailsBuilder::default()
    }
}

/// A builder for [`AwsAmazonMqBrokerEncryptionOptionsDetails`](crate::types::AwsAmazonMqBrokerEncryptionOptionsDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsAmazonMqBrokerEncryptionOptionsDetailsBuilder {
    pub(crate) kms_key_id: ::std::option::Option<::std::string::String>,
    pub(crate) use_aws_owned_key: ::std::option::Option<bool>,
}
impl AwsAmazonMqBrokerEncryptionOptionsDetailsBuilder {
    /// <p> The KMS key that’s used to encrypt your data at rest. If not provided, Amazon MQ will use a default KMS key to encrypt your data. </p>
    pub fn kms_key_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.kms_key_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The KMS key that’s used to encrypt your data at rest. If not provided, Amazon MQ will use a default KMS key to encrypt your data. </p>
    pub fn set_kms_key_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.kms_key_id = input;
        self
    }
    /// <p> The KMS key that’s used to encrypt your data at rest. If not provided, Amazon MQ will use a default KMS key to encrypt your data. </p>
    pub fn get_kms_key_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.kms_key_id
    }
    /// <p> Specifies that an KMS key should be used for at-rest encryption. Set to <code>true</code> by default if no value is provided (for example, for RabbitMQ brokers). </p>
    pub fn use_aws_owned_key(mut self, input: bool) -> Self {
        self.use_aws_owned_key = ::std::option::Option::Some(input);
        self
    }
    /// <p> Specifies that an KMS key should be used for at-rest encryption. Set to <code>true</code> by default if no value is provided (for example, for RabbitMQ brokers). </p>
    pub fn set_use_aws_owned_key(mut self, input: ::std::option::Option<bool>) -> Self {
        self.use_aws_owned_key = input;
        self
    }
    /// <p> Specifies that an KMS key should be used for at-rest encryption. Set to <code>true</code> by default if no value is provided (for example, for RabbitMQ brokers). </p>
    pub fn get_use_aws_owned_key(&self) -> &::std::option::Option<bool> {
        &self.use_aws_owned_key
    }
    /// Consumes the builder and constructs a [`AwsAmazonMqBrokerEncryptionOptionsDetails`](crate::types::AwsAmazonMqBrokerEncryptionOptionsDetails).
    pub fn build(self) -> crate::types::AwsAmazonMqBrokerEncryptionOptionsDetails {
        crate::types::AwsAmazonMqBrokerEncryptionOptionsDetails {
            kms_key_id: self.kms_key_id,
            use_aws_owned_key: self.use_aws_owned_key.unwrap_or_default(),
        }
    }
}
