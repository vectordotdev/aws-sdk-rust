// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A managed policy that is attached to the IAM group.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AwsIamGroupPolicy {
    /// <p>The name of the policy.</p>
    pub policy_name: ::std::option::Option<::std::string::String>,
}
impl AwsIamGroupPolicy {
    /// <p>The name of the policy.</p>
    pub fn policy_name(&self) -> ::std::option::Option<&str> {
        self.policy_name.as_deref()
    }
}
impl AwsIamGroupPolicy {
    /// Creates a new builder-style object to manufacture [`AwsIamGroupPolicy`](crate::types::AwsIamGroupPolicy).
    pub fn builder() -> crate::types::builders::AwsIamGroupPolicyBuilder {
        crate::types::builders::AwsIamGroupPolicyBuilder::default()
    }
}

/// A builder for [`AwsIamGroupPolicy`](crate::types::AwsIamGroupPolicy).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AwsIamGroupPolicyBuilder {
    pub(crate) policy_name: ::std::option::Option<::std::string::String>,
}
impl AwsIamGroupPolicyBuilder {
    /// <p>The name of the policy.</p>
    pub fn policy_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.policy_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the policy.</p>
    pub fn set_policy_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.policy_name = input;
        self
    }
    /// <p>The name of the policy.</p>
    pub fn get_policy_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.policy_name
    }
    /// Consumes the builder and constructs a [`AwsIamGroupPolicy`](crate::types::AwsIamGroupPolicy).
    pub fn build(self) -> crate::types::AwsIamGroupPolicy {
        crate::types::AwsIamGroupPolicy {
            policy_name: self.policy_name,
        }
    }
}
