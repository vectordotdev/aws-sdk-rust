// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the client response parameters for the connection when OAuth is specified as the authorization type.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConnectionOAuthClientResponseParameters {
    /// <p>The client ID associated with the response to the connection request.</p>
    pub client_id: ::std::option::Option<::std::string::String>,
}
impl ConnectionOAuthClientResponseParameters {
    /// <p>The client ID associated with the response to the connection request.</p>
    pub fn client_id(&self) -> ::std::option::Option<&str> {
        self.client_id.as_deref()
    }
}
impl ConnectionOAuthClientResponseParameters {
    /// Creates a new builder-style object to manufacture [`ConnectionOAuthClientResponseParameters`](crate::types::ConnectionOAuthClientResponseParameters).
    pub fn builder() -> crate::types::builders::ConnectionOAuthClientResponseParametersBuilder {
        crate::types::builders::ConnectionOAuthClientResponseParametersBuilder::default()
    }
}

/// A builder for [`ConnectionOAuthClientResponseParameters`](crate::types::ConnectionOAuthClientResponseParameters).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConnectionOAuthClientResponseParametersBuilder {
    pub(crate) client_id: ::std::option::Option<::std::string::String>,
}
impl ConnectionOAuthClientResponseParametersBuilder {
    /// <p>The client ID associated with the response to the connection request.</p>
    pub fn client_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.client_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The client ID associated with the response to the connection request.</p>
    pub fn set_client_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.client_id = input;
        self
    }
    /// <p>The client ID associated with the response to the connection request.</p>
    pub fn get_client_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.client_id
    }
    /// Consumes the builder and constructs a [`ConnectionOAuthClientResponseParameters`](crate::types::ConnectionOAuthClientResponseParameters).
    pub fn build(self) -> crate::types::ConnectionOAuthClientResponseParameters {
        crate::types::ConnectionOAuthClientResponseParameters { client_id: self.client_id }
    }
}
