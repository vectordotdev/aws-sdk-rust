// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the details about a blue/green deployment.</p>
/// <p>For more information, see <a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon RDS User Guide</i> and <a href="https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/blue-green-deployments.html">Using Amazon RDS Blue/Green Deployments for database updates</a> in the <i>Amazon Aurora User Guide</i>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SwitchoverDetail {
    /// <p>The Amazon Resource Name (ARN) of a resource in the blue environment.</p>
    pub source_member: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon Resource Name (ARN) of a resource in the green environment.</p>
    pub target_member: ::std::option::Option<::std::string::String>,
    /// <p>The switchover status of a resource in a blue/green deployment.</p>
    /// <p>Values:</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code> - The resource is being prepared to switch over.</p> </li>
    /// <li> <p> <code>AVAILABLE</code> - The resource is ready to switch over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_IN_PROGRESS</code> - The resource is being switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_COMPLETED</code> - The resource has been switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_FAILED</code> - The resource attempted to switch over but failed.</p> </li>
    /// <li> <p> <code>MISSING_SOURCE</code> - The source resource has been deleted.</p> </li>
    /// <li> <p> <code>MISSING_TARGET</code> - The target resource has been deleted.</p> </li>
    /// </ul>
    pub status: ::std::option::Option<::std::string::String>,
}
impl SwitchoverDetail {
    /// <p>The Amazon Resource Name (ARN) of a resource in the blue environment.</p>
    pub fn source_member(&self) -> ::std::option::Option<&str> {
        self.source_member.as_deref()
    }
    /// <p>The Amazon Resource Name (ARN) of a resource in the green environment.</p>
    pub fn target_member(&self) -> ::std::option::Option<&str> {
        self.target_member.as_deref()
    }
    /// <p>The switchover status of a resource in a blue/green deployment.</p>
    /// <p>Values:</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code> - The resource is being prepared to switch over.</p> </li>
    /// <li> <p> <code>AVAILABLE</code> - The resource is ready to switch over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_IN_PROGRESS</code> - The resource is being switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_COMPLETED</code> - The resource has been switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_FAILED</code> - The resource attempted to switch over but failed.</p> </li>
    /// <li> <p> <code>MISSING_SOURCE</code> - The source resource has been deleted.</p> </li>
    /// <li> <p> <code>MISSING_TARGET</code> - The target resource has been deleted.</p> </li>
    /// </ul>
    pub fn status(&self) -> ::std::option::Option<&str> {
        self.status.as_deref()
    }
}
impl SwitchoverDetail {
    /// Creates a new builder-style object to manufacture [`SwitchoverDetail`](crate::types::SwitchoverDetail).
    pub fn builder() -> crate::types::builders::SwitchoverDetailBuilder {
        crate::types::builders::SwitchoverDetailBuilder::default()
    }
}

/// A builder for [`SwitchoverDetail`](crate::types::SwitchoverDetail).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SwitchoverDetailBuilder {
    pub(crate) source_member: ::std::option::Option<::std::string::String>,
    pub(crate) target_member: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<::std::string::String>,
}
impl SwitchoverDetailBuilder {
    /// <p>The Amazon Resource Name (ARN) of a resource in the blue environment.</p>
    pub fn source_member(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.source_member = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of a resource in the blue environment.</p>
    pub fn set_source_member(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.source_member = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of a resource in the blue environment.</p>
    pub fn get_source_member(&self) -> &::std::option::Option<::std::string::String> {
        &self.source_member
    }
    /// <p>The Amazon Resource Name (ARN) of a resource in the green environment.</p>
    pub fn target_member(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.target_member = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of a resource in the green environment.</p>
    pub fn set_target_member(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.target_member = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of a resource in the green environment.</p>
    pub fn get_target_member(&self) -> &::std::option::Option<::std::string::String> {
        &self.target_member
    }
    /// <p>The switchover status of a resource in a blue/green deployment.</p>
    /// <p>Values:</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code> - The resource is being prepared to switch over.</p> </li>
    /// <li> <p> <code>AVAILABLE</code> - The resource is ready to switch over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_IN_PROGRESS</code> - The resource is being switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_COMPLETED</code> - The resource has been switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_FAILED</code> - The resource attempted to switch over but failed.</p> </li>
    /// <li> <p> <code>MISSING_SOURCE</code> - The source resource has been deleted.</p> </li>
    /// <li> <p> <code>MISSING_TARGET</code> - The target resource has been deleted.</p> </li>
    /// </ul>
    pub fn status(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The switchover status of a resource in a blue/green deployment.</p>
    /// <p>Values:</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code> - The resource is being prepared to switch over.</p> </li>
    /// <li> <p> <code>AVAILABLE</code> - The resource is ready to switch over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_IN_PROGRESS</code> - The resource is being switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_COMPLETED</code> - The resource has been switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_FAILED</code> - The resource attempted to switch over but failed.</p> </li>
    /// <li> <p> <code>MISSING_SOURCE</code> - The source resource has been deleted.</p> </li>
    /// <li> <p> <code>MISSING_TARGET</code> - The target resource has been deleted.</p> </li>
    /// </ul>
    pub fn set_status(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status = input;
        self
    }
    /// <p>The switchover status of a resource in a blue/green deployment.</p>
    /// <p>Values:</p>
    /// <ul>
    /// <li> <p> <code>PROVISIONING</code> - The resource is being prepared to switch over.</p> </li>
    /// <li> <p> <code>AVAILABLE</code> - The resource is ready to switch over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_IN_PROGRESS</code> - The resource is being switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_COMPLETED</code> - The resource has been switched over.</p> </li>
    /// <li> <p> <code>SWITCHOVER_FAILED</code> - The resource attempted to switch over but failed.</p> </li>
    /// <li> <p> <code>MISSING_SOURCE</code> - The source resource has been deleted.</p> </li>
    /// <li> <p> <code>MISSING_TARGET</code> - The target resource has been deleted.</p> </li>
    /// </ul>
    pub fn get_status(&self) -> &::std::option::Option<::std::string::String> {
        &self.status
    }
    /// Consumes the builder and constructs a [`SwitchoverDetail`](crate::types::SwitchoverDetail).
    pub fn build(self) -> crate::types::SwitchoverDetail {
        crate::types::SwitchoverDetail {
            source_member: self.source_member,
            target_member: self.target_member,
            status: self.status,
        }
    }
}
