// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A cluster ID and custom domain name tied to a specific certificate. These are typically returned in a list.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CertificateAssociation {
    /// <p>The custom domain name for the certificate association.</p>
    pub custom_domain_name: ::std::option::Option<::std::string::String>,
    /// <p>The cluster identifier for the certificate association.</p>
    pub cluster_identifier: ::std::option::Option<::std::string::String>,
}
impl CertificateAssociation {
    /// <p>The custom domain name for the certificate association.</p>
    pub fn custom_domain_name(&self) -> ::std::option::Option<&str> {
        self.custom_domain_name.as_deref()
    }
    /// <p>The cluster identifier for the certificate association.</p>
    pub fn cluster_identifier(&self) -> ::std::option::Option<&str> {
        self.cluster_identifier.as_deref()
    }
}
impl CertificateAssociation {
    /// Creates a new builder-style object to manufacture [`CertificateAssociation`](crate::types::CertificateAssociation).
    pub fn builder() -> crate::types::builders::CertificateAssociationBuilder {
        crate::types::builders::CertificateAssociationBuilder::default()
    }
}

/// A builder for [`CertificateAssociation`](crate::types::CertificateAssociation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CertificateAssociationBuilder {
    pub(crate) custom_domain_name: ::std::option::Option<::std::string::String>,
    pub(crate) cluster_identifier: ::std::option::Option<::std::string::String>,
}
impl CertificateAssociationBuilder {
    /// <p>The custom domain name for the certificate association.</p>
    pub fn custom_domain_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.custom_domain_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The custom domain name for the certificate association.</p>
    pub fn set_custom_domain_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.custom_domain_name = input;
        self
    }
    /// <p>The custom domain name for the certificate association.</p>
    pub fn get_custom_domain_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.custom_domain_name
    }
    /// <p>The cluster identifier for the certificate association.</p>
    pub fn cluster_identifier(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.cluster_identifier = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The cluster identifier for the certificate association.</p>
    pub fn set_cluster_identifier(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.cluster_identifier = input;
        self
    }
    /// <p>The cluster identifier for the certificate association.</p>
    pub fn get_cluster_identifier(&self) -> &::std::option::Option<::std::string::String> {
        &self.cluster_identifier
    }
    /// Consumes the builder and constructs a [`CertificateAssociation`](crate::types::CertificateAssociation).
    pub fn build(self) -> crate::types::CertificateAssociation {
        crate::types::CertificateAssociation {
            custom_domain_name: self.custom_domain_name,
            cluster_identifier: self.cluster_identifier,
        }
    }
}
