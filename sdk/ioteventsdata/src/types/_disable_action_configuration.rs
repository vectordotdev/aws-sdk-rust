// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the configuration information of a disable action.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DisableActionConfiguration {
    /// <p>The note that you can leave when you disable the alarm.</p>
    pub note: ::std::option::Option<::std::string::String>,
}
impl DisableActionConfiguration {
    /// <p>The note that you can leave when you disable the alarm.</p>
    pub fn note(&self) -> ::std::option::Option<&str> {
        self.note.as_deref()
    }
}
impl DisableActionConfiguration {
    /// Creates a new builder-style object to manufacture [`DisableActionConfiguration`](crate::types::DisableActionConfiguration).
    pub fn builder() -> crate::types::builders::DisableActionConfigurationBuilder {
        crate::types::builders::DisableActionConfigurationBuilder::default()
    }
}

/// A builder for [`DisableActionConfiguration`](crate::types::DisableActionConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DisableActionConfigurationBuilder {
    pub(crate) note: ::std::option::Option<::std::string::String>,
}
impl DisableActionConfigurationBuilder {
    /// <p>The note that you can leave when you disable the alarm.</p>
    pub fn note(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.note = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The note that you can leave when you disable the alarm.</p>
    pub fn set_note(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.note = input;
        self
    }
    /// <p>The note that you can leave when you disable the alarm.</p>
    pub fn get_note(&self) -> &::std::option::Option<::std::string::String> {
        &self.note
    }
    /// Consumes the builder and constructs a [`DisableActionConfiguration`](crate::types::DisableActionConfiguration).
    pub fn build(self) -> crate::types::DisableActionConfiguration {
        crate::types::DisableActionConfiguration { note: self.note }
    }
}
