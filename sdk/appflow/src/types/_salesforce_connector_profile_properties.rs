// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p> The connector-specific profile properties required when using Salesforce. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SalesforceConnectorProfileProperties {
    /// <p> The location of the Salesforce resource. </p>
    pub instance_url: ::std::option::Option<::std::string::String>,
    /// <p> Indicates whether the connector profile applies to a sandbox or production environment. </p>
    pub is_sandbox_environment: bool,
    /// <p>If the connection mode for the connector profile is private, this parameter sets whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through Amazon Web Services PrivateLink. These calls travel through Amazon Web Services infrastructure without being exposed to the public internet.</p>
    /// <p>Set either of the following values:</p>
    /// <dl>
    /// <dt>
    /// true
    /// </dt>
    /// <dd>
    /// <p>Amazon AppFlow sends all calls to Salesforce over the private network.</p>
    /// <p>These private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records. This metadata describes your Salesforce objects and their fields.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens that allow Amazon AppFlow to access your Salesforce records.</p> </li>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// <dt>
    /// false
    /// </dt>
    /// <dd>
    /// <p>The default value. Amazon AppFlow sends some calls to Salesforce privately and other calls over the public internet.</p>
    /// <p>The public calls are: </p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens.</p> </li>
    /// </ul>
    /// <p>The private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    pub use_private_link_for_metadata_and_authorization: bool,
}
impl SalesforceConnectorProfileProperties {
    /// <p> The location of the Salesforce resource. </p>
    pub fn instance_url(&self) -> ::std::option::Option<&str> {
        self.instance_url.as_deref()
    }
    /// <p> Indicates whether the connector profile applies to a sandbox or production environment. </p>
    pub fn is_sandbox_environment(&self) -> bool {
        self.is_sandbox_environment
    }
    /// <p>If the connection mode for the connector profile is private, this parameter sets whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through Amazon Web Services PrivateLink. These calls travel through Amazon Web Services infrastructure without being exposed to the public internet.</p>
    /// <p>Set either of the following values:</p>
    /// <dl>
    /// <dt>
    /// true
    /// </dt>
    /// <dd>
    /// <p>Amazon AppFlow sends all calls to Salesforce over the private network.</p>
    /// <p>These private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records. This metadata describes your Salesforce objects and their fields.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens that allow Amazon AppFlow to access your Salesforce records.</p> </li>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// <dt>
    /// false
    /// </dt>
    /// <dd>
    /// <p>The default value. Amazon AppFlow sends some calls to Salesforce privately and other calls over the public internet.</p>
    /// <p>The public calls are: </p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens.</p> </li>
    /// </ul>
    /// <p>The private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    pub fn use_private_link_for_metadata_and_authorization(&self) -> bool {
        self.use_private_link_for_metadata_and_authorization
    }
}
impl SalesforceConnectorProfileProperties {
    /// Creates a new builder-style object to manufacture [`SalesforceConnectorProfileProperties`](crate::types::SalesforceConnectorProfileProperties).
    pub fn builder() -> crate::types::builders::SalesforceConnectorProfilePropertiesBuilder {
        crate::types::builders::SalesforceConnectorProfilePropertiesBuilder::default()
    }
}

/// A builder for [`SalesforceConnectorProfileProperties`](crate::types::SalesforceConnectorProfileProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SalesforceConnectorProfilePropertiesBuilder {
    pub(crate) instance_url: ::std::option::Option<::std::string::String>,
    pub(crate) is_sandbox_environment: ::std::option::Option<bool>,
    pub(crate) use_private_link_for_metadata_and_authorization: ::std::option::Option<bool>,
}
impl SalesforceConnectorProfilePropertiesBuilder {
    /// <p> The location of the Salesforce resource. </p>
    pub fn instance_url(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_url = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> The location of the Salesforce resource. </p>
    pub fn set_instance_url(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_url = input;
        self
    }
    /// <p> The location of the Salesforce resource. </p>
    pub fn get_instance_url(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_url
    }
    /// <p> Indicates whether the connector profile applies to a sandbox or production environment. </p>
    pub fn is_sandbox_environment(mut self, input: bool) -> Self {
        self.is_sandbox_environment = ::std::option::Option::Some(input);
        self
    }
    /// <p> Indicates whether the connector profile applies to a sandbox or production environment. </p>
    pub fn set_is_sandbox_environment(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_sandbox_environment = input;
        self
    }
    /// <p> Indicates whether the connector profile applies to a sandbox or production environment. </p>
    pub fn get_is_sandbox_environment(&self) -> &::std::option::Option<bool> {
        &self.is_sandbox_environment
    }
    /// <p>If the connection mode for the connector profile is private, this parameter sets whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through Amazon Web Services PrivateLink. These calls travel through Amazon Web Services infrastructure without being exposed to the public internet.</p>
    /// <p>Set either of the following values:</p>
    /// <dl>
    /// <dt>
    /// true
    /// </dt>
    /// <dd>
    /// <p>Amazon AppFlow sends all calls to Salesforce over the private network.</p>
    /// <p>These private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records. This metadata describes your Salesforce objects and their fields.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens that allow Amazon AppFlow to access your Salesforce records.</p> </li>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// <dt>
    /// false
    /// </dt>
    /// <dd>
    /// <p>The default value. Amazon AppFlow sends some calls to Salesforce privately and other calls over the public internet.</p>
    /// <p>The public calls are: </p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens.</p> </li>
    /// </ul>
    /// <p>The private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    pub fn use_private_link_for_metadata_and_authorization(mut self, input: bool) -> Self {
        self.use_private_link_for_metadata_and_authorization = ::std::option::Option::Some(input);
        self
    }
    /// <p>If the connection mode for the connector profile is private, this parameter sets whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through Amazon Web Services PrivateLink. These calls travel through Amazon Web Services infrastructure without being exposed to the public internet.</p>
    /// <p>Set either of the following values:</p>
    /// <dl>
    /// <dt>
    /// true
    /// </dt>
    /// <dd>
    /// <p>Amazon AppFlow sends all calls to Salesforce over the private network.</p>
    /// <p>These private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records. This metadata describes your Salesforce objects and their fields.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens that allow Amazon AppFlow to access your Salesforce records.</p> </li>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// <dt>
    /// false
    /// </dt>
    /// <dd>
    /// <p>The default value. Amazon AppFlow sends some calls to Salesforce privately and other calls over the public internet.</p>
    /// <p>The public calls are: </p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens.</p> </li>
    /// </ul>
    /// <p>The private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    pub fn set_use_private_link_for_metadata_and_authorization(mut self, input: ::std::option::Option<bool>) -> Self {
        self.use_private_link_for_metadata_and_authorization = input;
        self
    }
    /// <p>If the connection mode for the connector profile is private, this parameter sets whether Amazon AppFlow uses the private network to send metadata and authorization calls to Salesforce. Amazon AppFlow sends private calls through Amazon Web Services PrivateLink. These calls travel through Amazon Web Services infrastructure without being exposed to the public internet.</p>
    /// <p>Set either of the following values:</p>
    /// <dl>
    /// <dt>
    /// true
    /// </dt>
    /// <dd>
    /// <p>Amazon AppFlow sends all calls to Salesforce over the private network.</p>
    /// <p>These private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records. This metadata describes your Salesforce objects and their fields.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens that allow Amazon AppFlow to access your Salesforce records.</p> </li>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// <dt>
    /// false
    /// </dt>
    /// <dd>
    /// <p>The default value. Amazon AppFlow sends some calls to Salesforce privately and other calls over the public internet.</p>
    /// <p>The public calls are: </p>
    /// <ul>
    /// <li> <p>Calls to get metadata about your Salesforce records.</p> </li>
    /// <li> <p>Calls to get or refresh access tokens.</p> </li>
    /// </ul>
    /// <p>The private calls are:</p>
    /// <ul>
    /// <li> <p>Calls to transfer your Salesforce records as part of a flow run.</p> </li>
    /// </ul>
    /// </dd>
    /// </dl>
    pub fn get_use_private_link_for_metadata_and_authorization(&self) -> &::std::option::Option<bool> {
        &self.use_private_link_for_metadata_and_authorization
    }
    /// Consumes the builder and constructs a [`SalesforceConnectorProfileProperties`](crate::types::SalesforceConnectorProfileProperties).
    pub fn build(self) -> crate::types::SalesforceConnectorProfileProperties {
        crate::types::SalesforceConnectorProfileProperties {
            instance_url: self.instance_url,
            is_sandbox_environment: self.is_sandbox_environment.unwrap_or_default(),
            use_private_link_for_metadata_and_authorization: self.use_private_link_for_metadata_and_authorization.unwrap_or_default(),
        }
    }
}
