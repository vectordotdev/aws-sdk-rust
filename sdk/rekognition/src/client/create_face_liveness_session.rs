// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateFaceLivenessSession`](crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`kms_key_id(impl ::std::convert::Into<String>)`](crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder::kms_key_id) / [`set_kms_key_id(Option<String>)`](crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder::set_kms_key_id): <p> The identifier for your AWS Key Management Service key (AWS KMS key). Used to encrypt audit images and reference images.</p>
    ///   - [`settings(CreateFaceLivenessSessionRequestSettings)`](crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder::settings) / [`set_settings(Option<CreateFaceLivenessSessionRequestSettings>)`](crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder::set_settings): <p>A session settings object. It contains settings for the operation to be performed. For Face Liveness, it accepts <code>OutputConfig</code> and <code>AuditImagesLimit</code>.</p>
    ///   - [`client_request_token(impl ::std::convert::Into<String>)`](crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder::client_request_token) / [`set_client_request_token(Option<String>)`](crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder::set_client_request_token): <p>Idempotent token is used to recognize the Face Liveness request. If the same token is used with multiple <code>CreateFaceLivenessSession</code> requests, the same session is returned. This token is employed to avoid unintentionally creating the same session multiple times.</p>
    /// - On success, responds with [`CreateFaceLivenessSessionOutput`](crate::operation::create_face_liveness_session::CreateFaceLivenessSessionOutput) with field(s):
    ///   - [`session_id(Option<String>)`](crate::operation::create_face_liveness_session::CreateFaceLivenessSessionOutput::session_id): <p>A unique 128-bit UUID identifying a Face Liveness session.</p>
    /// - On failure, responds with [`SdkError<CreateFaceLivenessSessionError>`](crate::operation::create_face_liveness_session::CreateFaceLivenessSessionError)
    pub fn create_face_liveness_session(&self) -> crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder {
        crate::operation::create_face_liveness_session::builders::CreateFaceLivenessSessionFluentBuilder::new(self.handle.clone())
    }
}
