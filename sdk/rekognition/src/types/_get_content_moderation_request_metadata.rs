// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains metadata about a content moderation request, including the SortBy and AggregateBy options.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetContentModerationRequestMetadata {
    /// <p>The sorting method chosen for a GetContentModeration request.</p>
    pub sort_by: ::std::option::Option<crate::types::ContentModerationSortBy>,
    /// <p>The aggregation method chosen for a GetContentModeration request.</p>
    pub aggregate_by: ::std::option::Option<crate::types::ContentModerationAggregateBy>,
}
impl GetContentModerationRequestMetadata {
    /// <p>The sorting method chosen for a GetContentModeration request.</p>
    pub fn sort_by(&self) -> ::std::option::Option<&crate::types::ContentModerationSortBy> {
        self.sort_by.as_ref()
    }
    /// <p>The aggregation method chosen for a GetContentModeration request.</p>
    pub fn aggregate_by(&self) -> ::std::option::Option<&crate::types::ContentModerationAggregateBy> {
        self.aggregate_by.as_ref()
    }
}
impl GetContentModerationRequestMetadata {
    /// Creates a new builder-style object to manufacture [`GetContentModerationRequestMetadata`](crate::types::GetContentModerationRequestMetadata).
    pub fn builder() -> crate::types::builders::GetContentModerationRequestMetadataBuilder {
        crate::types::builders::GetContentModerationRequestMetadataBuilder::default()
    }
}

/// A builder for [`GetContentModerationRequestMetadata`](crate::types::GetContentModerationRequestMetadata).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetContentModerationRequestMetadataBuilder {
    pub(crate) sort_by: ::std::option::Option<crate::types::ContentModerationSortBy>,
    pub(crate) aggregate_by: ::std::option::Option<crate::types::ContentModerationAggregateBy>,
}
impl GetContentModerationRequestMetadataBuilder {
    /// <p>The sorting method chosen for a GetContentModeration request.</p>
    pub fn sort_by(mut self, input: crate::types::ContentModerationSortBy) -> Self {
        self.sort_by = ::std::option::Option::Some(input);
        self
    }
    /// <p>The sorting method chosen for a GetContentModeration request.</p>
    pub fn set_sort_by(mut self, input: ::std::option::Option<crate::types::ContentModerationSortBy>) -> Self {
        self.sort_by = input;
        self
    }
    /// <p>The sorting method chosen for a GetContentModeration request.</p>
    pub fn get_sort_by(&self) -> &::std::option::Option<crate::types::ContentModerationSortBy> {
        &self.sort_by
    }
    /// <p>The aggregation method chosen for a GetContentModeration request.</p>
    pub fn aggregate_by(mut self, input: crate::types::ContentModerationAggregateBy) -> Self {
        self.aggregate_by = ::std::option::Option::Some(input);
        self
    }
    /// <p>The aggregation method chosen for a GetContentModeration request.</p>
    pub fn set_aggregate_by(mut self, input: ::std::option::Option<crate::types::ContentModerationAggregateBy>) -> Self {
        self.aggregate_by = input;
        self
    }
    /// <p>The aggregation method chosen for a GetContentModeration request.</p>
    pub fn get_aggregate_by(&self) -> &::std::option::Option<crate::types::ContentModerationAggregateBy> {
        &self.aggregate_by
    }
    /// Consumes the builder and constructs a [`GetContentModerationRequestMetadata`](crate::types::GetContentModerationRequestMetadata).
    pub fn build(self) -> crate::types::GetContentModerationRequestMetadata {
        crate::types::GetContentModerationRequestMetadata {
            sort_by: self.sort_by,
            aggregate_by: self.aggregate_by,
        }
    }
}
