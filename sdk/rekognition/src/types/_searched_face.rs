// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides face metadata such as FaceId, BoundingBox, Confidence of the input face used for search.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SearchedFace {
    /// <p> Unique identifier assigned to the face.</p>
    pub face_id: ::std::option::Option<::std::string::String>,
}
impl SearchedFace {
    /// <p> Unique identifier assigned to the face.</p>
    pub fn face_id(&self) -> ::std::option::Option<&str> {
        self.face_id.as_deref()
    }
}
impl SearchedFace {
    /// Creates a new builder-style object to manufacture [`SearchedFace`](crate::types::SearchedFace).
    pub fn builder() -> crate::types::builders::SearchedFaceBuilder {
        crate::types::builders::SearchedFaceBuilder::default()
    }
}

/// A builder for [`SearchedFace`](crate::types::SearchedFace).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SearchedFaceBuilder {
    pub(crate) face_id: ::std::option::Option<::std::string::String>,
}
impl SearchedFaceBuilder {
    /// <p> Unique identifier assigned to the face.</p>
    pub fn face_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.face_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p> Unique identifier assigned to the face.</p>
    pub fn set_face_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.face_id = input;
        self
    }
    /// <p> Unique identifier assigned to the face.</p>
    pub fn get_face_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.face_id
    }
    /// Consumes the builder and constructs a [`SearchedFace`](crate::types::SearchedFace).
    pub fn build(self) -> crate::types::SearchedFace {
        crate::types::SearchedFace { face_id: self.face_id }
    }
}
