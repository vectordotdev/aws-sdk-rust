// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Encapsulates a column name that failed and the reason for failure.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ColumnError {
    /// <p>The name of the column that failed.</p>
    pub column_name: ::std::option::Option<::std::string::String>,
    /// <p>An error message with the reason for the failure of an operation.</p>
    pub error: ::std::option::Option<crate::types::ErrorDetail>,
}
impl ColumnError {
    /// <p>The name of the column that failed.</p>
    pub fn column_name(&self) -> ::std::option::Option<&str> {
        self.column_name.as_deref()
    }
    /// <p>An error message with the reason for the failure of an operation.</p>
    pub fn error(&self) -> ::std::option::Option<&crate::types::ErrorDetail> {
        self.error.as_ref()
    }
}
impl ColumnError {
    /// Creates a new builder-style object to manufacture [`ColumnError`](crate::types::ColumnError).
    pub fn builder() -> crate::types::builders::ColumnErrorBuilder {
        crate::types::builders::ColumnErrorBuilder::default()
    }
}

/// A builder for [`ColumnError`](crate::types::ColumnError).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ColumnErrorBuilder {
    pub(crate) column_name: ::std::option::Option<::std::string::String>,
    pub(crate) error: ::std::option::Option<crate::types::ErrorDetail>,
}
impl ColumnErrorBuilder {
    /// <p>The name of the column that failed.</p>
    pub fn column_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.column_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the column that failed.</p>
    pub fn set_column_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.column_name = input;
        self
    }
    /// <p>The name of the column that failed.</p>
    pub fn get_column_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.column_name
    }
    /// <p>An error message with the reason for the failure of an operation.</p>
    pub fn error(mut self, input: crate::types::ErrorDetail) -> Self {
        self.error = ::std::option::Option::Some(input);
        self
    }
    /// <p>An error message with the reason for the failure of an operation.</p>
    pub fn set_error(mut self, input: ::std::option::Option<crate::types::ErrorDetail>) -> Self {
        self.error = input;
        self
    }
    /// <p>An error message with the reason for the failure of an operation.</p>
    pub fn get_error(&self) -> &::std::option::Option<crate::types::ErrorDetail> {
        &self.error
    }
    /// Consumes the builder and constructs a [`ColumnError`](crate::types::ColumnError).
    pub fn build(self) -> crate::types::ColumnError {
        crate::types::ColumnError {
            column_name: self.column_name,
            error: self.error,
        }
    }
}
