// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateChannelGroup`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`channel_group_name(impl ::std::convert::Into<String>)`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::channel_group_name) / [`set_channel_group_name(Option<String>)`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::set_channel_group_name): <p>The name that describes the channel group. The name is the primary identifier for the channel group, and must be unique for your account in the AWS Region. You can't use spaces in the name. You can't change the name after you create the channel group.</p>
    ///   - [`client_token(impl ::std::convert::Into<String>)`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::set_client_token): <p>A unique, case-sensitive token that you provide to ensure the idempotency of the request.</p>
    ///   - [`description(impl ::std::convert::Into<String>)`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::description) / [`set_description(Option<String>)`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::set_description): <p>Enter any descriptive text that helps you to identify the channel group.</p>
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::set_tags): <p>A comma-separated list of tag key:value pairs that you define. For example:</p>  <p> <code>"Key1": "Value1",</code> </p>  <p> <code>"Key2": "Value2"</code> </p>
    /// - On success, responds with [`CreateChannelGroupOutput`](crate::operation::create_channel_group::CreateChannelGroupOutput) with field(s):
    ///   - [`channel_group_name(Option<String>)`](crate::operation::create_channel_group::CreateChannelGroupOutput::channel_group_name): <p>The name that describes the channel group. The name is the primary identifier for the channel group, and must be unique for your account in the AWS Region.</p>
    ///   - [`arn(Option<String>)`](crate::operation::create_channel_group::CreateChannelGroupOutput::arn): <p>The Amazon Resource Name (ARN) associated with the resource.</p>
    ///   - [`egress_domain(Option<String>)`](crate::operation::create_channel_group::CreateChannelGroupOutput::egress_domain): <p>The output domain where the source stream should be sent. Integrate the egress domain with a downstream CDN (such as Amazon CloudFront) or playback device.</p>
    ///   - [`created_at(Option<DateTime>)`](crate::operation::create_channel_group::CreateChannelGroupOutput::created_at): <p>The date and time the channel group was created.</p>
    ///   - [`modified_at(Option<DateTime>)`](crate::operation::create_channel_group::CreateChannelGroupOutput::modified_at): <p>The date and time the channel group was modified.</p>
    ///   - [`description(Option<String>)`](crate::operation::create_channel_group::CreateChannelGroupOutput::description): <p>The description for your channel group.</p>
    ///   - [`tags(Option<HashMap<String, String>>)`](crate::operation::create_channel_group::CreateChannelGroupOutput::tags): <p>The comma-separated list of tag key:value pairs assigned to the channel group.</p>
    /// - On failure, responds with [`SdkError<CreateChannelGroupError>`](crate::operation::create_channel_group::CreateChannelGroupError)
    pub fn create_channel_group(&self) -> crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder {
        crate::operation::create_channel_group::builders::CreateChannelGroupFluentBuilder::new(self.handle.clone())
    }
}
