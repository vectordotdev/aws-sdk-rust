// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The properties of a managed product, such as an Amazon Web Services Managed Rules rule group or an Amazon Web Services Marketplace managed rule group. </p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ManagedProductDescriptor {
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify a rule group.</p>
    pub vendor_name: ::std::option::Option<::std::string::String>,
    /// <p>The name of the managed rule group. For example, <code>AWSManagedRulesAnonymousIpList</code> or <code>AWSManagedRulesATPRuleSet</code>.</p>
    pub managed_rule_set_name: ::std::option::Option<::std::string::String>,
    /// <p>A unique identifier for the rule group. This ID is returned in the responses to create and list commands. You provide it to operations like update and delete.</p>
    pub product_id: ::std::option::Option<::std::string::String>,
    /// <p>For Amazon Web Services Marketplace managed rule groups only, the link to the rule group product page. </p>
    pub product_link: ::std::option::Option<::std::string::String>,
    /// <p>The display name for the managed rule group. For example, <code>Anonymous IP list</code> or <code>Account takeover prevention</code>.</p>
    pub product_title: ::std::option::Option<::std::string::String>,
    /// <p>A short description of the managed rule group.</p>
    pub product_description: ::std::option::Option<::std::string::String>,
    /// <p>The Amazon resource name (ARN) of the Amazon Simple Notification Service SNS topic that's used to provide notification of changes to the managed rule group. You can subscribe to the SNS topic to receive notifications when the managed rule group is modified, such as for new versions and for version expiration. For more information, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">Amazon Simple Notification Service Developer Guide</a>.</p>
    pub sns_topic_arn: ::std::option::Option<::std::string::String>,
    /// <p>Indicates whether the rule group is versioned. </p>
    pub is_versioning_supported: bool,
    /// <p>Indicates whether the rule group provides an advanced set of protections, such as the the Amazon Web Services Managed Rules rule groups that are used for WAF intelligent threat mitigation. </p>
    pub is_advanced_managed_rule_set: bool,
}
impl ManagedProductDescriptor {
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify a rule group.</p>
    pub fn vendor_name(&self) -> ::std::option::Option<&str> {
        self.vendor_name.as_deref()
    }
    /// <p>The name of the managed rule group. For example, <code>AWSManagedRulesAnonymousIpList</code> or <code>AWSManagedRulesATPRuleSet</code>.</p>
    pub fn managed_rule_set_name(&self) -> ::std::option::Option<&str> {
        self.managed_rule_set_name.as_deref()
    }
    /// <p>A unique identifier for the rule group. This ID is returned in the responses to create and list commands. You provide it to operations like update and delete.</p>
    pub fn product_id(&self) -> ::std::option::Option<&str> {
        self.product_id.as_deref()
    }
    /// <p>For Amazon Web Services Marketplace managed rule groups only, the link to the rule group product page. </p>
    pub fn product_link(&self) -> ::std::option::Option<&str> {
        self.product_link.as_deref()
    }
    /// <p>The display name for the managed rule group. For example, <code>Anonymous IP list</code> or <code>Account takeover prevention</code>.</p>
    pub fn product_title(&self) -> ::std::option::Option<&str> {
        self.product_title.as_deref()
    }
    /// <p>A short description of the managed rule group.</p>
    pub fn product_description(&self) -> ::std::option::Option<&str> {
        self.product_description.as_deref()
    }
    /// <p>The Amazon resource name (ARN) of the Amazon Simple Notification Service SNS topic that's used to provide notification of changes to the managed rule group. You can subscribe to the SNS topic to receive notifications when the managed rule group is modified, such as for new versions and for version expiration. For more information, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">Amazon Simple Notification Service Developer Guide</a>.</p>
    pub fn sns_topic_arn(&self) -> ::std::option::Option<&str> {
        self.sns_topic_arn.as_deref()
    }
    /// <p>Indicates whether the rule group is versioned. </p>
    pub fn is_versioning_supported(&self) -> bool {
        self.is_versioning_supported
    }
    /// <p>Indicates whether the rule group provides an advanced set of protections, such as the the Amazon Web Services Managed Rules rule groups that are used for WAF intelligent threat mitigation. </p>
    pub fn is_advanced_managed_rule_set(&self) -> bool {
        self.is_advanced_managed_rule_set
    }
}
impl ManagedProductDescriptor {
    /// Creates a new builder-style object to manufacture [`ManagedProductDescriptor`](crate::types::ManagedProductDescriptor).
    pub fn builder() -> crate::types::builders::ManagedProductDescriptorBuilder {
        crate::types::builders::ManagedProductDescriptorBuilder::default()
    }
}

/// A builder for [`ManagedProductDescriptor`](crate::types::ManagedProductDescriptor).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ManagedProductDescriptorBuilder {
    pub(crate) vendor_name: ::std::option::Option<::std::string::String>,
    pub(crate) managed_rule_set_name: ::std::option::Option<::std::string::String>,
    pub(crate) product_id: ::std::option::Option<::std::string::String>,
    pub(crate) product_link: ::std::option::Option<::std::string::String>,
    pub(crate) product_title: ::std::option::Option<::std::string::String>,
    pub(crate) product_description: ::std::option::Option<::std::string::String>,
    pub(crate) sns_topic_arn: ::std::option::Option<::std::string::String>,
    pub(crate) is_versioning_supported: ::std::option::Option<bool>,
    pub(crate) is_advanced_managed_rule_set: ::std::option::Option<bool>,
}
impl ManagedProductDescriptorBuilder {
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify a rule group.</p>
    pub fn vendor_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.vendor_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify a rule group.</p>
    pub fn set_vendor_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.vendor_name = input;
        self
    }
    /// <p>The name of the managed rule group vendor. You use this, along with the rule group name, to identify a rule group.</p>
    pub fn get_vendor_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.vendor_name
    }
    /// <p>The name of the managed rule group. For example, <code>AWSManagedRulesAnonymousIpList</code> or <code>AWSManagedRulesATPRuleSet</code>.</p>
    pub fn managed_rule_set_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.managed_rule_set_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the managed rule group. For example, <code>AWSManagedRulesAnonymousIpList</code> or <code>AWSManagedRulesATPRuleSet</code>.</p>
    pub fn set_managed_rule_set_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.managed_rule_set_name = input;
        self
    }
    /// <p>The name of the managed rule group. For example, <code>AWSManagedRulesAnonymousIpList</code> or <code>AWSManagedRulesATPRuleSet</code>.</p>
    pub fn get_managed_rule_set_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.managed_rule_set_name
    }
    /// <p>A unique identifier for the rule group. This ID is returned in the responses to create and list commands. You provide it to operations like update and delete.</p>
    pub fn product_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.product_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the rule group. This ID is returned in the responses to create and list commands. You provide it to operations like update and delete.</p>
    pub fn set_product_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.product_id = input;
        self
    }
    /// <p>A unique identifier for the rule group. This ID is returned in the responses to create and list commands. You provide it to operations like update and delete.</p>
    pub fn get_product_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.product_id
    }
    /// <p>For Amazon Web Services Marketplace managed rule groups only, the link to the rule group product page. </p>
    pub fn product_link(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.product_link = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>For Amazon Web Services Marketplace managed rule groups only, the link to the rule group product page. </p>
    pub fn set_product_link(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.product_link = input;
        self
    }
    /// <p>For Amazon Web Services Marketplace managed rule groups only, the link to the rule group product page. </p>
    pub fn get_product_link(&self) -> &::std::option::Option<::std::string::String> {
        &self.product_link
    }
    /// <p>The display name for the managed rule group. For example, <code>Anonymous IP list</code> or <code>Account takeover prevention</code>.</p>
    pub fn product_title(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.product_title = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The display name for the managed rule group. For example, <code>Anonymous IP list</code> or <code>Account takeover prevention</code>.</p>
    pub fn set_product_title(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.product_title = input;
        self
    }
    /// <p>The display name for the managed rule group. For example, <code>Anonymous IP list</code> or <code>Account takeover prevention</code>.</p>
    pub fn get_product_title(&self) -> &::std::option::Option<::std::string::String> {
        &self.product_title
    }
    /// <p>A short description of the managed rule group.</p>
    pub fn product_description(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.product_description = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A short description of the managed rule group.</p>
    pub fn set_product_description(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.product_description = input;
        self
    }
    /// <p>A short description of the managed rule group.</p>
    pub fn get_product_description(&self) -> &::std::option::Option<::std::string::String> {
        &self.product_description
    }
    /// <p>The Amazon resource name (ARN) of the Amazon Simple Notification Service SNS topic that's used to provide notification of changes to the managed rule group. You can subscribe to the SNS topic to receive notifications when the managed rule group is modified, such as for new versions and for version expiration. For more information, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">Amazon Simple Notification Service Developer Guide</a>.</p>
    pub fn sns_topic_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sns_topic_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon resource name (ARN) of the Amazon Simple Notification Service SNS topic that's used to provide notification of changes to the managed rule group. You can subscribe to the SNS topic to receive notifications when the managed rule group is modified, such as for new versions and for version expiration. For more information, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">Amazon Simple Notification Service Developer Guide</a>.</p>
    pub fn set_sns_topic_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sns_topic_arn = input;
        self
    }
    /// <p>The Amazon resource name (ARN) of the Amazon Simple Notification Service SNS topic that's used to provide notification of changes to the managed rule group. You can subscribe to the SNS topic to receive notifications when the managed rule group is modified, such as for new versions and for version expiration. For more information, see the <a href="https://docs.aws.amazon.com/sns/latest/dg/welcome.html">Amazon Simple Notification Service Developer Guide</a>.</p>
    pub fn get_sns_topic_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.sns_topic_arn
    }
    /// <p>Indicates whether the rule group is versioned. </p>
    pub fn is_versioning_supported(mut self, input: bool) -> Self {
        self.is_versioning_supported = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether the rule group is versioned. </p>
    pub fn set_is_versioning_supported(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_versioning_supported = input;
        self
    }
    /// <p>Indicates whether the rule group is versioned. </p>
    pub fn get_is_versioning_supported(&self) -> &::std::option::Option<bool> {
        &self.is_versioning_supported
    }
    /// <p>Indicates whether the rule group provides an advanced set of protections, such as the the Amazon Web Services Managed Rules rule groups that are used for WAF intelligent threat mitigation. </p>
    pub fn is_advanced_managed_rule_set(mut self, input: bool) -> Self {
        self.is_advanced_managed_rule_set = ::std::option::Option::Some(input);
        self
    }
    /// <p>Indicates whether the rule group provides an advanced set of protections, such as the the Amazon Web Services Managed Rules rule groups that are used for WAF intelligent threat mitigation. </p>
    pub fn set_is_advanced_managed_rule_set(mut self, input: ::std::option::Option<bool>) -> Self {
        self.is_advanced_managed_rule_set = input;
        self
    }
    /// <p>Indicates whether the rule group provides an advanced set of protections, such as the the Amazon Web Services Managed Rules rule groups that are used for WAF intelligent threat mitigation. </p>
    pub fn get_is_advanced_managed_rule_set(&self) -> &::std::option::Option<bool> {
        &self.is_advanced_managed_rule_set
    }
    /// Consumes the builder and constructs a [`ManagedProductDescriptor`](crate::types::ManagedProductDescriptor).
    pub fn build(self) -> crate::types::ManagedProductDescriptor {
        crate::types::ManagedProductDescriptor {
            vendor_name: self.vendor_name,
            managed_rule_set_name: self.managed_rule_set_name,
            product_id: self.product_id,
            product_link: self.product_link,
            product_title: self.product_title,
            product_description: self.product_description,
            sns_topic_arn: self.sns_topic_arn,
            is_versioning_supported: self.is_versioning_supported.unwrap_or_default(),
            is_advanced_managed_rule_set: self.is_advanced_managed_rule_set.unwrap_or_default(),
        }
    }
}
