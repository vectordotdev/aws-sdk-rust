// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>OTAA device object for v1.0.x</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OtaaV10X {
    /// <p>The AppKey value.</p>
    pub app_key: ::std::option::Option<::std::string::String>,
    /// <p>The AppEUI value.</p>
    pub app_eui: ::std::option::Option<::std::string::String>,
    /// <p>The GenAppKey value.</p>
    pub gen_app_key: ::std::option::Option<::std::string::String>,
}
impl OtaaV10X {
    /// <p>The AppKey value.</p>
    pub fn app_key(&self) -> ::std::option::Option<&str> {
        self.app_key.as_deref()
    }
    /// <p>The AppEUI value.</p>
    pub fn app_eui(&self) -> ::std::option::Option<&str> {
        self.app_eui.as_deref()
    }
    /// <p>The GenAppKey value.</p>
    pub fn gen_app_key(&self) -> ::std::option::Option<&str> {
        self.gen_app_key.as_deref()
    }
}
impl OtaaV10X {
    /// Creates a new builder-style object to manufacture [`OtaaV10X`](crate::types::OtaaV10X).
    pub fn builder() -> crate::types::builders::OtaaV10XBuilder {
        crate::types::builders::OtaaV10XBuilder::default()
    }
}

/// A builder for [`OtaaV10X`](crate::types::OtaaV10X).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OtaaV10XBuilder {
    pub(crate) app_key: ::std::option::Option<::std::string::String>,
    pub(crate) app_eui: ::std::option::Option<::std::string::String>,
    pub(crate) gen_app_key: ::std::option::Option<::std::string::String>,
}
impl OtaaV10XBuilder {
    /// <p>The AppKey value.</p>
    pub fn app_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The AppKey value.</p>
    pub fn set_app_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_key = input;
        self
    }
    /// <p>The AppKey value.</p>
    pub fn get_app_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_key
    }
    /// <p>The AppEUI value.</p>
    pub fn app_eui(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.app_eui = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The AppEUI value.</p>
    pub fn set_app_eui(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.app_eui = input;
        self
    }
    /// <p>The AppEUI value.</p>
    pub fn get_app_eui(&self) -> &::std::option::Option<::std::string::String> {
        &self.app_eui
    }
    /// <p>The GenAppKey value.</p>
    pub fn gen_app_key(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.gen_app_key = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The GenAppKey value.</p>
    pub fn set_gen_app_key(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.gen_app_key = input;
        self
    }
    /// <p>The GenAppKey value.</p>
    pub fn get_gen_app_key(&self) -> &::std::option::Option<::std::string::String> {
        &self.gen_app_key
    }
    /// Consumes the builder and constructs a [`OtaaV10X`](crate::types::OtaaV10X).
    pub fn build(self) -> crate::types::OtaaV10X {
        crate::types::OtaaV10X {
            app_key: self.app_key,
            app_eui: self.app_eui,
            gen_app_key: self.gen_app_key,
        }
    }
}
