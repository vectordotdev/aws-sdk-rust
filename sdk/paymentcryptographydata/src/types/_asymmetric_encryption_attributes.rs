// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Parameters for plaintext encryption using asymmetric keys.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AsymmetricEncryptionAttributes {
    /// <p>The padding to be included with the data.</p>
    pub padding_type: ::std::option::Option<crate::types::PaddingType>,
}
impl AsymmetricEncryptionAttributes {
    /// <p>The padding to be included with the data.</p>
    pub fn padding_type(&self) -> ::std::option::Option<&crate::types::PaddingType> {
        self.padding_type.as_ref()
    }
}
impl AsymmetricEncryptionAttributes {
    /// Creates a new builder-style object to manufacture [`AsymmetricEncryptionAttributes`](crate::types::AsymmetricEncryptionAttributes).
    pub fn builder() -> crate::types::builders::AsymmetricEncryptionAttributesBuilder {
        crate::types::builders::AsymmetricEncryptionAttributesBuilder::default()
    }
}

/// A builder for [`AsymmetricEncryptionAttributes`](crate::types::AsymmetricEncryptionAttributes).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AsymmetricEncryptionAttributesBuilder {
    pub(crate) padding_type: ::std::option::Option<crate::types::PaddingType>,
}
impl AsymmetricEncryptionAttributesBuilder {
    /// <p>The padding to be included with the data.</p>
    pub fn padding_type(mut self, input: crate::types::PaddingType) -> Self {
        self.padding_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The padding to be included with the data.</p>
    pub fn set_padding_type(mut self, input: ::std::option::Option<crate::types::PaddingType>) -> Self {
        self.padding_type = input;
        self
    }
    /// <p>The padding to be included with the data.</p>
    pub fn get_padding_type(&self) -> &::std::option::Option<crate::types::PaddingType> {
        &self.padding_type
    }
    /// Consumes the builder and constructs a [`AsymmetricEncryptionAttributes`](crate::types::AsymmetricEncryptionAttributes).
    pub fn build(self) -> crate::types::AsymmetricEncryptionAttributes {
        crate::types::AsymmetricEncryptionAttributes {
            padding_type: self.padding_type,
        }
    }
}
