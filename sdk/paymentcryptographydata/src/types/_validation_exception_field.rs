// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The request was denied due to an invalid request error.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ValidationExceptionField {
    /// <p>The request was denied due to an invalid request error.</p>
    pub path: ::std::option::Option<::std::string::String>,
    /// <p>The request was denied due to an invalid request error.</p>
    pub message: ::std::option::Option<::std::string::String>,
}
impl ValidationExceptionField {
    /// <p>The request was denied due to an invalid request error.</p>
    pub fn path(&self) -> ::std::option::Option<&str> {
        self.path.as_deref()
    }
    /// <p>The request was denied due to an invalid request error.</p>
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl ValidationExceptionField {
    /// Creates a new builder-style object to manufacture [`ValidationExceptionField`](crate::types::ValidationExceptionField).
    pub fn builder() -> crate::types::builders::ValidationExceptionFieldBuilder {
        crate::types::builders::ValidationExceptionFieldBuilder::default()
    }
}

/// A builder for [`ValidationExceptionField`](crate::types::ValidationExceptionField).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ValidationExceptionFieldBuilder {
    pub(crate) path: ::std::option::Option<::std::string::String>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl ValidationExceptionFieldBuilder {
    /// <p>The request was denied due to an invalid request error.</p>
    pub fn path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The request was denied due to an invalid request error.</p>
    pub fn set_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.path = input;
        self
    }
    /// <p>The request was denied due to an invalid request error.</p>
    pub fn get_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.path
    }
    /// <p>The request was denied due to an invalid request error.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The request was denied due to an invalid request error.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>The request was denied due to an invalid request error.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`ValidationExceptionField`](crate::types::ValidationExceptionField).
    pub fn build(self) -> crate::types::ValidationExceptionField {
        crate::types::ValidationExceptionField {
            path: self.path,
            message: self.message,
        }
    }
}
