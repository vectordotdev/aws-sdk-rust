// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Parameters that are required for PIN data generation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub enum PinGenerationAttributes {
    /// <p>Parameters that are required to generate or verify Ibm3624 natural PIN.</p>
    Ibm3624NaturalPin(crate::types::Ibm3624NaturalPin),
    /// <p>Parameters that are required to generate or verify Ibm3624 PIN from offset PIN.</p>
    Ibm3624PinFromOffset(crate::types::Ibm3624PinFromOffset),
    /// <p>Parameters that are required to generate or verify Ibm3624 PIN offset PIN.</p>
    Ibm3624PinOffset(crate::types::Ibm3624PinOffset),
    /// <p>Parameters that are required to generate or verify Ibm3624 random PIN.</p>
    Ibm3624RandomPin(crate::types::Ibm3624RandomPin),
    /// <p>Parameters that are required to generate or verify Visa PIN.</p>
    VisaPin(crate::types::VisaPin),
    /// <p>Parameters that are required to generate or verify Visa PIN Verification Value (PVV).</p>
    VisaPinVerificationValue(crate::types::VisaPinVerificationValue),
    /// The `Unknown` variant represents cases where new union variant was received. Consider upgrading the SDK to the latest available version.
    /// An unknown enum variant
    ///
    /// _Note: If you encounter this error, consider upgrading your SDK to the latest version._
    /// The `Unknown` variant represents cases where the server sent a value that wasn't recognized
    /// by the client. This can happen when the server adds new functionality, but the client has not been updated.
    /// To investigate this, consider turning on debug logging to print the raw HTTP response.
    #[non_exhaustive]
    Unknown,
}
impl PinGenerationAttributes {
    /// Tries to convert the enum instance into [`Ibm3624NaturalPin`](crate::types::PinGenerationAttributes::Ibm3624NaturalPin), extracting the inner [`Ibm3624NaturalPin`](crate::types::Ibm3624NaturalPin).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_ibm3624_natural_pin(&self) -> ::std::result::Result<&crate::types::Ibm3624NaturalPin, &Self> {
        if let PinGenerationAttributes::Ibm3624NaturalPin(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`Ibm3624NaturalPin`](crate::types::PinGenerationAttributes::Ibm3624NaturalPin).
    pub fn is_ibm3624_natural_pin(&self) -> bool {
        self.as_ibm3624_natural_pin().is_ok()
    }
    /// Tries to convert the enum instance into [`Ibm3624PinFromOffset`](crate::types::PinGenerationAttributes::Ibm3624PinFromOffset), extracting the inner [`Ibm3624PinFromOffset`](crate::types::Ibm3624PinFromOffset).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_ibm3624_pin_from_offset(&self) -> ::std::result::Result<&crate::types::Ibm3624PinFromOffset, &Self> {
        if let PinGenerationAttributes::Ibm3624PinFromOffset(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`Ibm3624PinFromOffset`](crate::types::PinGenerationAttributes::Ibm3624PinFromOffset).
    pub fn is_ibm3624_pin_from_offset(&self) -> bool {
        self.as_ibm3624_pin_from_offset().is_ok()
    }
    /// Tries to convert the enum instance into [`Ibm3624PinOffset`](crate::types::PinGenerationAttributes::Ibm3624PinOffset), extracting the inner [`Ibm3624PinOffset`](crate::types::Ibm3624PinOffset).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_ibm3624_pin_offset(&self) -> ::std::result::Result<&crate::types::Ibm3624PinOffset, &Self> {
        if let PinGenerationAttributes::Ibm3624PinOffset(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`Ibm3624PinOffset`](crate::types::PinGenerationAttributes::Ibm3624PinOffset).
    pub fn is_ibm3624_pin_offset(&self) -> bool {
        self.as_ibm3624_pin_offset().is_ok()
    }
    /// Tries to convert the enum instance into [`Ibm3624RandomPin`](crate::types::PinGenerationAttributes::Ibm3624RandomPin), extracting the inner [`Ibm3624RandomPin`](crate::types::Ibm3624RandomPin).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_ibm3624_random_pin(&self) -> ::std::result::Result<&crate::types::Ibm3624RandomPin, &Self> {
        if let PinGenerationAttributes::Ibm3624RandomPin(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`Ibm3624RandomPin`](crate::types::PinGenerationAttributes::Ibm3624RandomPin).
    pub fn is_ibm3624_random_pin(&self) -> bool {
        self.as_ibm3624_random_pin().is_ok()
    }
    /// Tries to convert the enum instance into [`VisaPin`](crate::types::PinGenerationAttributes::VisaPin), extracting the inner [`VisaPin`](crate::types::VisaPin).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_visa_pin(&self) -> ::std::result::Result<&crate::types::VisaPin, &Self> {
        if let PinGenerationAttributes::VisaPin(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`VisaPin`](crate::types::PinGenerationAttributes::VisaPin).
    pub fn is_visa_pin(&self) -> bool {
        self.as_visa_pin().is_ok()
    }
    /// Tries to convert the enum instance into [`VisaPinVerificationValue`](crate::types::PinGenerationAttributes::VisaPinVerificationValue), extracting the inner [`VisaPinVerificationValue`](crate::types::VisaPinVerificationValue).
    /// Returns `Err(&Self)` if it can't be converted.
    pub fn as_visa_pin_verification_value(&self) -> ::std::result::Result<&crate::types::VisaPinVerificationValue, &Self> {
        if let PinGenerationAttributes::VisaPinVerificationValue(val) = &self {
            ::std::result::Result::Ok(val)
        } else {
            ::std::result::Result::Err(self)
        }
    }
    /// Returns true if this is a [`VisaPinVerificationValue`](crate::types::PinGenerationAttributes::VisaPinVerificationValue).
    pub fn is_visa_pin_verification_value(&self) -> bool {
        self.as_visa_pin_verification_value().is_ok()
    }
    /// Returns true if the enum instance is the `Unknown` variant.
    pub fn is_unknown(&self) -> bool {
        matches!(self, Self::Unknown)
    }
}
