// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Provides information that describes a recommendation of a target engine on Amazon RDS.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RdsRecommendation {
    /// <p>Supplemental information about the requirements to the recommended target database on Amazon RDS.</p>
    pub requirements_to_target: ::std::option::Option<crate::types::RdsRequirements>,
    /// <p>Supplemental information about the configuration of the recommended target database on Amazon RDS.</p>
    pub target_configuration: ::std::option::Option<crate::types::RdsConfiguration>,
}
impl RdsRecommendation {
    /// <p>Supplemental information about the requirements to the recommended target database on Amazon RDS.</p>
    pub fn requirements_to_target(&self) -> ::std::option::Option<&crate::types::RdsRequirements> {
        self.requirements_to_target.as_ref()
    }
    /// <p>Supplemental information about the configuration of the recommended target database on Amazon RDS.</p>
    pub fn target_configuration(&self) -> ::std::option::Option<&crate::types::RdsConfiguration> {
        self.target_configuration.as_ref()
    }
}
impl RdsRecommendation {
    /// Creates a new builder-style object to manufacture [`RdsRecommendation`](crate::types::RdsRecommendation).
    pub fn builder() -> crate::types::builders::RdsRecommendationBuilder {
        crate::types::builders::RdsRecommendationBuilder::default()
    }
}

/// A builder for [`RdsRecommendation`](crate::types::RdsRecommendation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RdsRecommendationBuilder {
    pub(crate) requirements_to_target: ::std::option::Option<crate::types::RdsRequirements>,
    pub(crate) target_configuration: ::std::option::Option<crate::types::RdsConfiguration>,
}
impl RdsRecommendationBuilder {
    /// <p>Supplemental information about the requirements to the recommended target database on Amazon RDS.</p>
    pub fn requirements_to_target(mut self, input: crate::types::RdsRequirements) -> Self {
        self.requirements_to_target = ::std::option::Option::Some(input);
        self
    }
    /// <p>Supplemental information about the requirements to the recommended target database on Amazon RDS.</p>
    pub fn set_requirements_to_target(mut self, input: ::std::option::Option<crate::types::RdsRequirements>) -> Self {
        self.requirements_to_target = input;
        self
    }
    /// <p>Supplemental information about the requirements to the recommended target database on Amazon RDS.</p>
    pub fn get_requirements_to_target(&self) -> &::std::option::Option<crate::types::RdsRequirements> {
        &self.requirements_to_target
    }
    /// <p>Supplemental information about the configuration of the recommended target database on Amazon RDS.</p>
    pub fn target_configuration(mut self, input: crate::types::RdsConfiguration) -> Self {
        self.target_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Supplemental information about the configuration of the recommended target database on Amazon RDS.</p>
    pub fn set_target_configuration(mut self, input: ::std::option::Option<crate::types::RdsConfiguration>) -> Self {
        self.target_configuration = input;
        self
    }
    /// <p>Supplemental information about the configuration of the recommended target database on Amazon RDS.</p>
    pub fn get_target_configuration(&self) -> &::std::option::Option<crate::types::RdsConfiguration> {
        &self.target_configuration
    }
    /// Consumes the builder and constructs a [`RdsRecommendation`](crate::types::RdsRecommendation).
    pub fn build(self) -> crate::types::RdsRecommendation {
        crate::types::RdsRecommendation {
            requirements_to_target: self.requirements_to_target,
            target_configuration: self.target_configuration,
        }
    }
}
