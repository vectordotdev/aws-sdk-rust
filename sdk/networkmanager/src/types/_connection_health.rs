// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes connection health.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ConnectionHealth {
    /// <p>The connection type.</p>
    pub r#type: ::std::option::Option<crate::types::ConnectionType>,
    /// <p>The connection status.</p>
    pub status: ::std::option::Option<crate::types::ConnectionStatus>,
    /// <p>The time the status was last updated.</p>
    pub timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ConnectionHealth {
    /// <p>The connection type.</p>
    pub fn r#type(&self) -> ::std::option::Option<&crate::types::ConnectionType> {
        self.r#type.as_ref()
    }
    /// <p>The connection status.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ConnectionStatus> {
        self.status.as_ref()
    }
    /// <p>The time the status was last updated.</p>
    pub fn timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.timestamp.as_ref()
    }
}
impl ConnectionHealth {
    /// Creates a new builder-style object to manufacture [`ConnectionHealth`](crate::types::ConnectionHealth).
    pub fn builder() -> crate::types::builders::ConnectionHealthBuilder {
        crate::types::builders::ConnectionHealthBuilder::default()
    }
}

/// A builder for [`ConnectionHealth`](crate::types::ConnectionHealth).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ConnectionHealthBuilder {
    pub(crate) r#type: ::std::option::Option<crate::types::ConnectionType>,
    pub(crate) status: ::std::option::Option<crate::types::ConnectionStatus>,
    pub(crate) timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ConnectionHealthBuilder {
    /// <p>The connection type.</p>
    pub fn r#type(mut self, input: crate::types::ConnectionType) -> Self {
        self.r#type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The connection type.</p>
    pub fn set_type(mut self, input: ::std::option::Option<crate::types::ConnectionType>) -> Self {
        self.r#type = input;
        self
    }
    /// <p>The connection type.</p>
    pub fn get_type(&self) -> &::std::option::Option<crate::types::ConnectionType> {
        &self.r#type
    }
    /// <p>The connection status.</p>
    pub fn status(mut self, input: crate::types::ConnectionStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The connection status.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ConnectionStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The connection status.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ConnectionStatus> {
        &self.status
    }
    /// <p>The time the status was last updated.</p>
    pub fn timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time the status was last updated.</p>
    pub fn set_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.timestamp = input;
        self
    }
    /// <p>The time the status was last updated.</p>
    pub fn get_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.timestamp
    }
    /// Consumes the builder and constructs a [`ConnectionHealth`](crate::types::ConnectionHealth).
    pub fn build(self) -> crate::types::ConnectionHealth {
        crate::types::ConnectionHealth {
            r#type: self.r#type,
            status: self.status,
            timestamp: self.timestamp,
        }
    }
}
