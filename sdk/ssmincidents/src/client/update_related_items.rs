// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateRelatedItems`](crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`client_token(impl ::std::convert::Into<String>)`](crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder::client_token) / [`set_client_token(Option<String>)`](crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder::set_client_token): <p>A token that ensures that a client calls the operation only once with the specified details.</p>
    ///   - [`incident_record_arn(impl ::std::convert::Into<String>)`](crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder::incident_record_arn) / [`set_incident_record_arn(Option<String>)`](crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder::set_incident_record_arn): <p>The Amazon Resource Name (ARN) of the incident record that contains the related items that you update.</p>
    ///   - [`related_items_update(RelatedItemsUpdate)`](crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder::related_items_update) / [`set_related_items_update(Option<RelatedItemsUpdate>)`](crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder::set_related_items_update): <p>Details about the item that you are add to, or delete from, an incident.</p>
    /// - On success, responds with [`UpdateRelatedItemsOutput`](crate::operation::update_related_items::UpdateRelatedItemsOutput)
    /// - On failure, responds with [`SdkError<UpdateRelatedItemsError>`](crate::operation::update_related_items::UpdateRelatedItemsError)
    pub fn update_related_items(&self) -> crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder {
        crate::operation::update_related_items::builders::UpdateRelatedItemsFluentBuilder::new(self.handle.clone())
    }
}
