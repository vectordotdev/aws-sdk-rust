// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object that represents the image tag details for an image.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ImageTagDetail {
    /// <p>The tag that's associated with the image.</p>
    pub image_tag: ::std::option::Option<::std::string::String>,
    /// <p>The time stamp that indicates when the image tag was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>An object that describes the details of an image.</p>
    pub image_detail: ::std::option::Option<crate::types::ReferencedImageDetail>,
}
impl ImageTagDetail {
    /// <p>The tag that's associated with the image.</p>
    pub fn image_tag(&self) -> ::std::option::Option<&str> {
        self.image_tag.as_deref()
    }
    /// <p>The time stamp that indicates when the image tag was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>An object that describes the details of an image.</p>
    pub fn image_detail(&self) -> ::std::option::Option<&crate::types::ReferencedImageDetail> {
        self.image_detail.as_ref()
    }
}
impl ImageTagDetail {
    /// Creates a new builder-style object to manufacture [`ImageTagDetail`](crate::types::ImageTagDetail).
    pub fn builder() -> crate::types::builders::ImageTagDetailBuilder {
        crate::types::builders::ImageTagDetailBuilder::default()
    }
}

/// A builder for [`ImageTagDetail`](crate::types::ImageTagDetail).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ImageTagDetailBuilder {
    pub(crate) image_tag: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) image_detail: ::std::option::Option<crate::types::ReferencedImageDetail>,
}
impl ImageTagDetailBuilder {
    /// <p>The tag that's associated with the image.</p>
    pub fn image_tag(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.image_tag = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The tag that's associated with the image.</p>
    pub fn set_image_tag(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.image_tag = input;
        self
    }
    /// <p>The tag that's associated with the image.</p>
    pub fn get_image_tag(&self) -> &::std::option::Option<::std::string::String> {
        &self.image_tag
    }
    /// <p>The time stamp that indicates when the image tag was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time stamp that indicates when the image tag was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The time stamp that indicates when the image tag was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>An object that describes the details of an image.</p>
    pub fn image_detail(mut self, input: crate::types::ReferencedImageDetail) -> Self {
        self.image_detail = ::std::option::Option::Some(input);
        self
    }
    /// <p>An object that describes the details of an image.</p>
    pub fn set_image_detail(mut self, input: ::std::option::Option<crate::types::ReferencedImageDetail>) -> Self {
        self.image_detail = input;
        self
    }
    /// <p>An object that describes the details of an image.</p>
    pub fn get_image_detail(&self) -> &::std::option::Option<crate::types::ReferencedImageDetail> {
        &self.image_detail
    }
    /// Consumes the builder and constructs a [`ImageTagDetail`](crate::types::ImageTagDetail).
    pub fn build(self) -> crate::types::ImageTagDetail {
        crate::types::ImageTagDetail {
            image_tag: self.image_tag,
            created_at: self.created_at,
            image_detail: self.image_detail,
        }
    }
}
