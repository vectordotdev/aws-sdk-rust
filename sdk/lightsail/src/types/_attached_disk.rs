// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Describes a block storage disk that is attached to an instance, and is included in an automatic snapshot.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AttachedDisk {
    /// <p>The path of the disk (e.g., <code>/dev/xvdf</code>).</p>
    pub path: ::std::option::Option<::std::string::String>,
    /// <p>The size of the disk in GB.</p>
    pub size_in_gb: ::std::option::Option<i32>,
}
impl AttachedDisk {
    /// <p>The path of the disk (e.g., <code>/dev/xvdf</code>).</p>
    pub fn path(&self) -> ::std::option::Option<&str> {
        self.path.as_deref()
    }
    /// <p>The size of the disk in GB.</p>
    pub fn size_in_gb(&self) -> ::std::option::Option<i32> {
        self.size_in_gb
    }
}
impl AttachedDisk {
    /// Creates a new builder-style object to manufacture [`AttachedDisk`](crate::types::AttachedDisk).
    pub fn builder() -> crate::types::builders::AttachedDiskBuilder {
        crate::types::builders::AttachedDiskBuilder::default()
    }
}

/// A builder for [`AttachedDisk`](crate::types::AttachedDisk).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AttachedDiskBuilder {
    pub(crate) path: ::std::option::Option<::std::string::String>,
    pub(crate) size_in_gb: ::std::option::Option<i32>,
}
impl AttachedDiskBuilder {
    /// <p>The path of the disk (e.g., <code>/dev/xvdf</code>).</p>
    pub fn path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The path of the disk (e.g., <code>/dev/xvdf</code>).</p>
    pub fn set_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.path = input;
        self
    }
    /// <p>The path of the disk (e.g., <code>/dev/xvdf</code>).</p>
    pub fn get_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.path
    }
    /// <p>The size of the disk in GB.</p>
    pub fn size_in_gb(mut self, input: i32) -> Self {
        self.size_in_gb = ::std::option::Option::Some(input);
        self
    }
    /// <p>The size of the disk in GB.</p>
    pub fn set_size_in_gb(mut self, input: ::std::option::Option<i32>) -> Self {
        self.size_in_gb = input;
        self
    }
    /// <p>The size of the disk in GB.</p>
    pub fn get_size_in_gb(&self) -> &::std::option::Option<i32> {
        &self.size_in_gb
    }
    /// Consumes the builder and constructs a [`AttachedDisk`](crate::types::AttachedDisk).
    pub fn build(self) -> crate::types::AttachedDisk {
        crate::types::AttachedDisk {
            path: self.path,
            size_in_gb: self.size_in_gb,
        }
    }
}
