// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details of the current stage of a replication run.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReplicationRunStageDetails {
    /// <p>The current stage of a replication run.</p>
    pub stage: ::std::option::Option<::std::string::String>,
    /// <p>The progress of the current stage of a replication run.</p>
    pub stage_progress: ::std::option::Option<::std::string::String>,
}
impl ReplicationRunStageDetails {
    /// <p>The current stage of a replication run.</p>
    pub fn stage(&self) -> ::std::option::Option<&str> {
        self.stage.as_deref()
    }
    /// <p>The progress of the current stage of a replication run.</p>
    pub fn stage_progress(&self) -> ::std::option::Option<&str> {
        self.stage_progress.as_deref()
    }
}
impl ReplicationRunStageDetails {
    /// Creates a new builder-style object to manufacture [`ReplicationRunStageDetails`](crate::types::ReplicationRunStageDetails).
    pub fn builder() -> crate::types::builders::ReplicationRunStageDetailsBuilder {
        crate::types::builders::ReplicationRunStageDetailsBuilder::default()
    }
}

/// A builder for [`ReplicationRunStageDetails`](crate::types::ReplicationRunStageDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReplicationRunStageDetailsBuilder {
    pub(crate) stage: ::std::option::Option<::std::string::String>,
    pub(crate) stage_progress: ::std::option::Option<::std::string::String>,
}
impl ReplicationRunStageDetailsBuilder {
    /// <p>The current stage of a replication run.</p>
    pub fn stage(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stage = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The current stage of a replication run.</p>
    pub fn set_stage(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stage = input;
        self
    }
    /// <p>The current stage of a replication run.</p>
    pub fn get_stage(&self) -> &::std::option::Option<::std::string::String> {
        &self.stage
    }
    /// <p>The progress of the current stage of a replication run.</p>
    pub fn stage_progress(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.stage_progress = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The progress of the current stage of a replication run.</p>
    pub fn set_stage_progress(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.stage_progress = input;
        self
    }
    /// <p>The progress of the current stage of a replication run.</p>
    pub fn get_stage_progress(&self) -> &::std::option::Option<::std::string::String> {
        &self.stage_progress
    }
    /// Consumes the builder and constructs a [`ReplicationRunStageDetails`](crate::types::ReplicationRunStageDetails).
    pub fn build(self) -> crate::types::ReplicationRunStageDetails {
        crate::types::ReplicationRunStageDetails {
            stage: self.stage,
            stage_progress: self.stage_progress,
        }
    }
}
