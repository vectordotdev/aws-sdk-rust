// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_create_suite_definition;

pub(crate) mod shape_delete_suite_definition;

pub(crate) mod shape_get_endpoint;

pub(crate) mod shape_get_suite_definition;

pub(crate) mod shape_get_suite_run;

pub(crate) mod shape_get_suite_run_report;

pub(crate) mod shape_list_suite_definitions;

pub(crate) mod shape_list_suite_runs;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_start_suite_run;

pub(crate) mod shape_stop_suite_run;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_suite_definition;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_suite_definition_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_start_suite_run_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_update_suite_definition_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_suite_definition_configuration;

pub(crate) mod shape_suite_definition_information_list;

pub(crate) mod shape_suite_run_configuration;

pub(crate) mod shape_suite_runs_list;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_test_result;

pub(crate) mod shape_device_under_test;

pub(crate) mod shape_device_under_test_list;

pub(crate) mod shape_group_result_list;

pub(crate) mod shape_selected_test_list;

pub(crate) mod shape_suite_definition_information;

pub(crate) mod shape_suite_run_information;

pub(crate) mod shape_group_result;

pub(crate) mod shape_test_case_runs;

pub(crate) mod shape_test_case_run;

pub(crate) mod shape_test_case_scenarios_list;

pub(crate) mod shape_test_case_scenario;
