// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The search criteria to be used to search tags.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ResourceTagsSearchCriteria {
    /// <p>The search criteria to be used to return tags.</p>
    pub tag_search_condition: ::std::option::Option<crate::types::TagSearchCondition>,
}
impl ResourceTagsSearchCriteria {
    /// <p>The search criteria to be used to return tags.</p>
    pub fn tag_search_condition(&self) -> ::std::option::Option<&crate::types::TagSearchCondition> {
        self.tag_search_condition.as_ref()
    }
}
impl ResourceTagsSearchCriteria {
    /// Creates a new builder-style object to manufacture [`ResourceTagsSearchCriteria`](crate::types::ResourceTagsSearchCriteria).
    pub fn builder() -> crate::types::builders::ResourceTagsSearchCriteriaBuilder {
        crate::types::builders::ResourceTagsSearchCriteriaBuilder::default()
    }
}

/// A builder for [`ResourceTagsSearchCriteria`](crate::types::ResourceTagsSearchCriteria).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ResourceTagsSearchCriteriaBuilder {
    pub(crate) tag_search_condition: ::std::option::Option<crate::types::TagSearchCondition>,
}
impl ResourceTagsSearchCriteriaBuilder {
    /// <p>The search criteria to be used to return tags.</p>
    pub fn tag_search_condition(mut self, input: crate::types::TagSearchCondition) -> Self {
        self.tag_search_condition = ::std::option::Option::Some(input);
        self
    }
    /// <p>The search criteria to be used to return tags.</p>
    pub fn set_tag_search_condition(mut self, input: ::std::option::Option<crate::types::TagSearchCondition>) -> Self {
        self.tag_search_condition = input;
        self
    }
    /// <p>The search criteria to be used to return tags.</p>
    pub fn get_tag_search_condition(&self) -> &::std::option::Option<crate::types::TagSearchCondition> {
        &self.tag_search_condition
    }
    /// Consumes the builder and constructs a [`ResourceTagsSearchCriteria`](crate::types::ResourceTagsSearchCriteria).
    pub fn build(self) -> crate::types::ResourceTagsSearchCriteria {
        crate::types::ResourceTagsSearchCriteria {
            tag_search_condition: self.tag_search_condition,
        }
    }
}
