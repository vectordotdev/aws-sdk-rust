// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about Amazon Connect Wisdom.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WisdomInfo {
    /// <p>The Amazon Resource Name (ARN) of the Wisdom session.</p>
    pub session_arn: ::std::option::Option<::std::string::String>,
}
impl WisdomInfo {
    /// <p>The Amazon Resource Name (ARN) of the Wisdom session.</p>
    pub fn session_arn(&self) -> ::std::option::Option<&str> {
        self.session_arn.as_deref()
    }
}
impl WisdomInfo {
    /// Creates a new builder-style object to manufacture [`WisdomInfo`](crate::types::WisdomInfo).
    pub fn builder() -> crate::types::builders::WisdomInfoBuilder {
        crate::types::builders::WisdomInfoBuilder::default()
    }
}

/// A builder for [`WisdomInfo`](crate::types::WisdomInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WisdomInfoBuilder {
    pub(crate) session_arn: ::std::option::Option<::std::string::String>,
}
impl WisdomInfoBuilder {
    /// <p>The Amazon Resource Name (ARN) of the Wisdom session.</p>
    pub fn session_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.session_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Wisdom session.</p>
    pub fn set_session_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.session_arn = input;
        self
    }
    /// <p>The Amazon Resource Name (ARN) of the Wisdom session.</p>
    pub fn get_session_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.session_arn
    }
    /// Consumes the builder and constructs a [`WisdomInfo`](crate::types::WisdomInfo).
    pub fn build(self) -> crate::types::WisdomInfo {
        crate::types::WisdomInfo {
            session_arn: self.session_arn,
        }
    }
}
