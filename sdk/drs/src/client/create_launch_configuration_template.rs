// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateLaunchConfigurationTemplate`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`tags(HashMap<String, String>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::tags) / [`set_tags(Option<HashMap<String, String>>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_tags): <p>Request to associate tags during creation of a Launch Configuration Template.</p>
    ///   - [`launch_disposition(LaunchDisposition)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::launch_disposition) / [`set_launch_disposition(Option<LaunchDisposition>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_launch_disposition): <p>Launch disposition.</p>
    ///   - [`target_instance_type_right_sizing_method(TargetInstanceTypeRightSizingMethod)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::target_instance_type_right_sizing_method) / [`set_target_instance_type_right_sizing_method(Option<TargetInstanceTypeRightSizingMethod>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_target_instance_type_right_sizing_method): <p>Target instance type right-sizing method.</p>
    ///   - [`copy_private_ip(bool)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::copy_private_ip) / [`set_copy_private_ip(Option<bool>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_copy_private_ip): <p>Copy private IP.</p>
    ///   - [`copy_tags(bool)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::copy_tags) / [`set_copy_tags(Option<bool>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_copy_tags): <p>Copy tags.</p>
    ///   - [`licensing(Licensing)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::licensing) / [`set_licensing(Option<Licensing>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_licensing): <p>Licensing.</p>
    ///   - [`export_bucket_arn(impl ::std::convert::Into<String>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::export_bucket_arn) / [`set_export_bucket_arn(Option<String>)`](crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::set_export_bucket_arn): <p>S3 bucket ARN to export Source Network templates.</p>
    /// - On success, responds with [`CreateLaunchConfigurationTemplateOutput`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput) with field(s):
    ///   - [`launch_configuration_template(Option<LaunchConfigurationTemplate>)`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateOutput::launch_configuration_template): <p>Created Launch Configuration Template.</p>
    /// - On failure, responds with [`SdkError<CreateLaunchConfigurationTemplateError>`](crate::operation::create_launch_configuration_template::CreateLaunchConfigurationTemplateError)
    pub fn create_launch_configuration_template(
        &self,
    ) -> crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder {
        crate::operation::create_launch_configuration_template::builders::CreateLaunchConfigurationTemplateFluentBuilder::new(self.handle.clone())
    }
}
