// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Includes all client authentication information for VPC connectivity.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VpcConnectivityClientAuthentication {
    /// <p>SASL authentication type details for VPC connectivity.</p>
    pub sasl: ::std::option::Option<crate::types::VpcConnectivitySasl>,
    /// <p>TLS authentication type details for VPC connectivity.</p>
    pub tls: ::std::option::Option<crate::types::VpcConnectivityTls>,
}
impl VpcConnectivityClientAuthentication {
    /// <p>SASL authentication type details for VPC connectivity.</p>
    pub fn sasl(&self) -> ::std::option::Option<&crate::types::VpcConnectivitySasl> {
        self.sasl.as_ref()
    }
    /// <p>TLS authentication type details for VPC connectivity.</p>
    pub fn tls(&self) -> ::std::option::Option<&crate::types::VpcConnectivityTls> {
        self.tls.as_ref()
    }
}
impl VpcConnectivityClientAuthentication {
    /// Creates a new builder-style object to manufacture [`VpcConnectivityClientAuthentication`](crate::types::VpcConnectivityClientAuthentication).
    pub fn builder() -> crate::types::builders::VpcConnectivityClientAuthenticationBuilder {
        crate::types::builders::VpcConnectivityClientAuthenticationBuilder::default()
    }
}

/// A builder for [`VpcConnectivityClientAuthentication`](crate::types::VpcConnectivityClientAuthentication).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VpcConnectivityClientAuthenticationBuilder {
    pub(crate) sasl: ::std::option::Option<crate::types::VpcConnectivitySasl>,
    pub(crate) tls: ::std::option::Option<crate::types::VpcConnectivityTls>,
}
impl VpcConnectivityClientAuthenticationBuilder {
    /// <p>SASL authentication type details for VPC connectivity.</p>
    pub fn sasl(mut self, input: crate::types::VpcConnectivitySasl) -> Self {
        self.sasl = ::std::option::Option::Some(input);
        self
    }
    /// <p>SASL authentication type details for VPC connectivity.</p>
    pub fn set_sasl(mut self, input: ::std::option::Option<crate::types::VpcConnectivitySasl>) -> Self {
        self.sasl = input;
        self
    }
    /// <p>SASL authentication type details for VPC connectivity.</p>
    pub fn get_sasl(&self) -> &::std::option::Option<crate::types::VpcConnectivitySasl> {
        &self.sasl
    }
    /// <p>TLS authentication type details for VPC connectivity.</p>
    pub fn tls(mut self, input: crate::types::VpcConnectivityTls) -> Self {
        self.tls = ::std::option::Option::Some(input);
        self
    }
    /// <p>TLS authentication type details for VPC connectivity.</p>
    pub fn set_tls(mut self, input: ::std::option::Option<crate::types::VpcConnectivityTls>) -> Self {
        self.tls = input;
        self
    }
    /// <p>TLS authentication type details for VPC connectivity.</p>
    pub fn get_tls(&self) -> &::std::option::Option<crate::types::VpcConnectivityTls> {
        &self.tls
    }
    /// Consumes the builder and constructs a [`VpcConnectivityClientAuthentication`](crate::types::VpcConnectivityClientAuthentication).
    pub fn build(self) -> crate::types::VpcConnectivityClientAuthentication {
        crate::types::VpcConnectivityClientAuthentication {
            sasl: self.sasl,
            tls: self.tls,
        }
    }
}
