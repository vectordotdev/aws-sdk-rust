// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// VPC connectivity access control for brokers.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VpcConnectivity {
    /// <p>Includes all client authentication information for VPC connectivity.</p>
    pub client_authentication: ::std::option::Option<crate::types::VpcConnectivityClientAuthentication>,
}
impl VpcConnectivity {
    /// <p>Includes all client authentication information for VPC connectivity.</p>
    pub fn client_authentication(&self) -> ::std::option::Option<&crate::types::VpcConnectivityClientAuthentication> {
        self.client_authentication.as_ref()
    }
}
impl VpcConnectivity {
    /// Creates a new builder-style object to manufacture [`VpcConnectivity`](crate::types::VpcConnectivity).
    pub fn builder() -> crate::types::builders::VpcConnectivityBuilder {
        crate::types::builders::VpcConnectivityBuilder::default()
    }
}

/// A builder for [`VpcConnectivity`](crate::types::VpcConnectivity).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VpcConnectivityBuilder {
    pub(crate) client_authentication: ::std::option::Option<crate::types::VpcConnectivityClientAuthentication>,
}
impl VpcConnectivityBuilder {
    /// <p>Includes all client authentication information for VPC connectivity.</p>
    pub fn client_authentication(mut self, input: crate::types::VpcConnectivityClientAuthentication) -> Self {
        self.client_authentication = ::std::option::Option::Some(input);
        self
    }
    /// <p>Includes all client authentication information for VPC connectivity.</p>
    pub fn set_client_authentication(mut self, input: ::std::option::Option<crate::types::VpcConnectivityClientAuthentication>) -> Self {
        self.client_authentication = input;
        self
    }
    /// <p>Includes all client authentication information for VPC connectivity.</p>
    pub fn get_client_authentication(&self) -> &::std::option::Option<crate::types::VpcConnectivityClientAuthentication> {
        &self.client_authentication
    }
    /// Consumes the builder and constructs a [`VpcConnectivity`](crate::types::VpcConnectivity).
    pub fn build(self) -> crate::types::VpcConnectivity {
        crate::types::VpcConnectivity {
            client_authentication: self.client_authentication,
        }
    }
}
