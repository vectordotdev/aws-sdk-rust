// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details for SASL client authentication for VPC connectivity.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct VpcConnectivitySasl {
    /// <p>Details for SASL/SCRAM client authentication for VPC connectivity.</p>
    pub scram: ::std::option::Option<crate::types::VpcConnectivityScram>,
    /// <p>Details for SASL/IAM client authentication for VPC connectivity.</p>
    pub iam: ::std::option::Option<crate::types::VpcConnectivityIam>,
}
impl VpcConnectivitySasl {
    /// <p>Details for SASL/SCRAM client authentication for VPC connectivity.</p>
    pub fn scram(&self) -> ::std::option::Option<&crate::types::VpcConnectivityScram> {
        self.scram.as_ref()
    }
    /// <p>Details for SASL/IAM client authentication for VPC connectivity.</p>
    pub fn iam(&self) -> ::std::option::Option<&crate::types::VpcConnectivityIam> {
        self.iam.as_ref()
    }
}
impl VpcConnectivitySasl {
    /// Creates a new builder-style object to manufacture [`VpcConnectivitySasl`](crate::types::VpcConnectivitySasl).
    pub fn builder() -> crate::types::builders::VpcConnectivitySaslBuilder {
        crate::types::builders::VpcConnectivitySaslBuilder::default()
    }
}

/// A builder for [`VpcConnectivitySasl`](crate::types::VpcConnectivitySasl).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct VpcConnectivitySaslBuilder {
    pub(crate) scram: ::std::option::Option<crate::types::VpcConnectivityScram>,
    pub(crate) iam: ::std::option::Option<crate::types::VpcConnectivityIam>,
}
impl VpcConnectivitySaslBuilder {
    /// <p>Details for SASL/SCRAM client authentication for VPC connectivity.</p>
    pub fn scram(mut self, input: crate::types::VpcConnectivityScram) -> Self {
        self.scram = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details for SASL/SCRAM client authentication for VPC connectivity.</p>
    pub fn set_scram(mut self, input: ::std::option::Option<crate::types::VpcConnectivityScram>) -> Self {
        self.scram = input;
        self
    }
    /// <p>Details for SASL/SCRAM client authentication for VPC connectivity.</p>
    pub fn get_scram(&self) -> &::std::option::Option<crate::types::VpcConnectivityScram> {
        &self.scram
    }
    /// <p>Details for SASL/IAM client authentication for VPC connectivity.</p>
    pub fn iam(mut self, input: crate::types::VpcConnectivityIam) -> Self {
        self.iam = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details for SASL/IAM client authentication for VPC connectivity.</p>
    pub fn set_iam(mut self, input: ::std::option::Option<crate::types::VpcConnectivityIam>) -> Self {
        self.iam = input;
        self
    }
    /// <p>Details for SASL/IAM client authentication for VPC connectivity.</p>
    pub fn get_iam(&self) -> &::std::option::Option<crate::types::VpcConnectivityIam> {
        &self.iam
    }
    /// Consumes the builder and constructs a [`VpcConnectivitySasl`](crate::types::VpcConnectivitySasl).
    pub fn build(self) -> crate::types::VpcConnectivitySasl {
        crate::types::VpcConnectivitySasl {
            scram: self.scram,
            iam: self.iam,
        }
    }
}
