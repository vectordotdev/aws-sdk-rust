// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Action required for a broker.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ActionRequired {
    /// <p>The code you can use to find instructions on the action required to resolve your broker issue.</p>
    pub action_required_code: ::std::option::Option<::std::string::String>,
    /// <p>Information about the action required to resolve your broker issue.</p>
    pub action_required_info: ::std::option::Option<::std::string::String>,
}
impl ActionRequired {
    /// <p>The code you can use to find instructions on the action required to resolve your broker issue.</p>
    pub fn action_required_code(&self) -> ::std::option::Option<&str> {
        self.action_required_code.as_deref()
    }
    /// <p>Information about the action required to resolve your broker issue.</p>
    pub fn action_required_info(&self) -> ::std::option::Option<&str> {
        self.action_required_info.as_deref()
    }
}
impl ActionRequired {
    /// Creates a new builder-style object to manufacture [`ActionRequired`](crate::types::ActionRequired).
    pub fn builder() -> crate::types::builders::ActionRequiredBuilder {
        crate::types::builders::ActionRequiredBuilder::default()
    }
}

/// A builder for [`ActionRequired`](crate::types::ActionRequired).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ActionRequiredBuilder {
    pub(crate) action_required_code: ::std::option::Option<::std::string::String>,
    pub(crate) action_required_info: ::std::option::Option<::std::string::String>,
}
impl ActionRequiredBuilder {
    /// <p>The code you can use to find instructions on the action required to resolve your broker issue.</p>
    pub fn action_required_code(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.action_required_code = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The code you can use to find instructions on the action required to resolve your broker issue.</p>
    pub fn set_action_required_code(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.action_required_code = input;
        self
    }
    /// <p>The code you can use to find instructions on the action required to resolve your broker issue.</p>
    pub fn get_action_required_code(&self) -> &::std::option::Option<::std::string::String> {
        &self.action_required_code
    }
    /// <p>Information about the action required to resolve your broker issue.</p>
    pub fn action_required_info(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.action_required_info = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Information about the action required to resolve your broker issue.</p>
    pub fn set_action_required_info(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.action_required_info = input;
        self
    }
    /// <p>Information about the action required to resolve your broker issue.</p>
    pub fn get_action_required_info(&self) -> &::std::option::Option<::std::string::String> {
        &self.action_required_info
    }
    /// Consumes the builder and constructs a [`ActionRequired`](crate::types::ActionRequired).
    pub fn build(self) -> crate::types::ActionRequired {
        crate::types::ActionRequired {
            action_required_code: self.action_required_code,
            action_required_info: self.action_required_info,
        }
    }
}
