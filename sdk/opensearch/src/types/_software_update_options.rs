// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Options for configuring service software updates for a domain.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SoftwareUpdateOptions {
    /// <p>Whether automatic service software updates are enabled for the domain.</p>
    pub auto_software_update_enabled: ::std::option::Option<bool>,
}
impl SoftwareUpdateOptions {
    /// <p>Whether automatic service software updates are enabled for the domain.</p>
    pub fn auto_software_update_enabled(&self) -> ::std::option::Option<bool> {
        self.auto_software_update_enabled
    }
}
impl SoftwareUpdateOptions {
    /// Creates a new builder-style object to manufacture [`SoftwareUpdateOptions`](crate::types::SoftwareUpdateOptions).
    pub fn builder() -> crate::types::builders::SoftwareUpdateOptionsBuilder {
        crate::types::builders::SoftwareUpdateOptionsBuilder::default()
    }
}

/// A builder for [`SoftwareUpdateOptions`](crate::types::SoftwareUpdateOptions).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SoftwareUpdateOptionsBuilder {
    pub(crate) auto_software_update_enabled: ::std::option::Option<bool>,
}
impl SoftwareUpdateOptionsBuilder {
    /// <p>Whether automatic service software updates are enabled for the domain.</p>
    pub fn auto_software_update_enabled(mut self, input: bool) -> Self {
        self.auto_software_update_enabled = ::std::option::Option::Some(input);
        self
    }
    /// <p>Whether automatic service software updates are enabled for the domain.</p>
    pub fn set_auto_software_update_enabled(mut self, input: ::std::option::Option<bool>) -> Self {
        self.auto_software_update_enabled = input;
        self
    }
    /// <p>Whether automatic service software updates are enabled for the domain.</p>
    pub fn get_auto_software_update_enabled(&self) -> &::std::option::Option<bool> {
        &self.auto_software_update_enabled
    }
    /// Consumes the builder and constructs a [`SoftwareUpdateOptions`](crate::types::SoftwareUpdateOptions).
    pub fn build(self) -> crate::types::SoftwareUpdateOptions {
        crate::types::SoftwareUpdateOptions {
            auto_software_update_enabled: self.auto_software_update_enabled,
        }
    }
}
