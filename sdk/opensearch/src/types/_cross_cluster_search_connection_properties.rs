// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Cross cluster search specific connection properties.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct CrossClusterSearchConnectionProperties {
    /// <p>Status of SkipUnavailable param for outbound connection.</p>
    pub skip_unavailable: ::std::option::Option<crate::types::SkipUnavailableStatus>,
}
impl CrossClusterSearchConnectionProperties {
    /// <p>Status of SkipUnavailable param for outbound connection.</p>
    pub fn skip_unavailable(&self) -> ::std::option::Option<&crate::types::SkipUnavailableStatus> {
        self.skip_unavailable.as_ref()
    }
}
impl CrossClusterSearchConnectionProperties {
    /// Creates a new builder-style object to manufacture [`CrossClusterSearchConnectionProperties`](crate::types::CrossClusterSearchConnectionProperties).
    pub fn builder() -> crate::types::builders::CrossClusterSearchConnectionPropertiesBuilder {
        crate::types::builders::CrossClusterSearchConnectionPropertiesBuilder::default()
    }
}

/// A builder for [`CrossClusterSearchConnectionProperties`](crate::types::CrossClusterSearchConnectionProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct CrossClusterSearchConnectionPropertiesBuilder {
    pub(crate) skip_unavailable: ::std::option::Option<crate::types::SkipUnavailableStatus>,
}
impl CrossClusterSearchConnectionPropertiesBuilder {
    /// <p>Status of SkipUnavailable param for outbound connection.</p>
    pub fn skip_unavailable(mut self, input: crate::types::SkipUnavailableStatus) -> Self {
        self.skip_unavailable = ::std::option::Option::Some(input);
        self
    }
    /// <p>Status of SkipUnavailable param for outbound connection.</p>
    pub fn set_skip_unavailable(mut self, input: ::std::option::Option<crate::types::SkipUnavailableStatus>) -> Self {
        self.skip_unavailable = input;
        self
    }
    /// <p>Status of SkipUnavailable param for outbound connection.</p>
    pub fn get_skip_unavailable(&self) -> &::std::option::Option<crate::types::SkipUnavailableStatus> {
        &self.skip_unavailable
    }
    /// Consumes the builder and constructs a [`CrossClusterSearchConnectionProperties`](crate::types::CrossClusterSearchConnectionProperties).
    pub fn build(self) -> crate::types::CrossClusterSearchConnectionProperties {
        crate::types::CrossClusterSearchConnectionProperties {
            skip_unavailable: self.skip_unavailable,
        }
    }
}
