// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetManagedEndpointSessionCredentialsOutput {
    /// <p>The identifier of the session token returned.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The structure containing the session credentials.</p>
    pub credentials: ::std::option::Option<crate::types::Credentials>,
    /// <p>The date and time when the session token will expire.</p>
    pub expires_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetManagedEndpointSessionCredentialsOutput {
    /// <p>The identifier of the session token returned.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The structure containing the session credentials.</p>
    pub fn credentials(&self) -> ::std::option::Option<&crate::types::Credentials> {
        self.credentials.as_ref()
    }
    /// <p>The date and time when the session token will expire.</p>
    pub fn expires_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.expires_at.as_ref()
    }
}
impl ::aws_http::request_id::RequestId for GetManagedEndpointSessionCredentialsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl GetManagedEndpointSessionCredentialsOutput {
    /// Creates a new builder-style object to manufacture [`GetManagedEndpointSessionCredentialsOutput`](crate::operation::get_managed_endpoint_session_credentials::GetManagedEndpointSessionCredentialsOutput).
    pub fn builder() -> crate::operation::get_managed_endpoint_session_credentials::builders::GetManagedEndpointSessionCredentialsOutputBuilder {
        crate::operation::get_managed_endpoint_session_credentials::builders::GetManagedEndpointSessionCredentialsOutputBuilder::default()
    }
}

/// A builder for [`GetManagedEndpointSessionCredentialsOutput`](crate::operation::get_managed_endpoint_session_credentials::GetManagedEndpointSessionCredentialsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetManagedEndpointSessionCredentialsOutputBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) credentials: ::std::option::Option<crate::types::Credentials>,
    pub(crate) expires_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    _request_id: Option<String>,
}
impl GetManagedEndpointSessionCredentialsOutputBuilder {
    /// <p>The identifier of the session token returned.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the session token returned.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The identifier of the session token returned.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The structure containing the session credentials.</p>
    pub fn credentials(mut self, input: crate::types::Credentials) -> Self {
        self.credentials = ::std::option::Option::Some(input);
        self
    }
    /// <p>The structure containing the session credentials.</p>
    pub fn set_credentials(mut self, input: ::std::option::Option<crate::types::Credentials>) -> Self {
        self.credentials = input;
        self
    }
    /// <p>The structure containing the session credentials.</p>
    pub fn get_credentials(&self) -> &::std::option::Option<crate::types::Credentials> {
        &self.credentials
    }
    /// <p>The date and time when the session token will expire.</p>
    pub fn expires_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.expires_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the session token will expire.</p>
    pub fn set_expires_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.expires_at = input;
        self
    }
    /// <p>The date and time when the session token will expire.</p>
    pub fn get_expires_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.expires_at
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`GetManagedEndpointSessionCredentialsOutput`](crate::operation::get_managed_endpoint_session_credentials::GetManagedEndpointSessionCredentialsOutput).
    pub fn build(self) -> crate::operation::get_managed_endpoint_session_credentials::GetManagedEndpointSessionCredentialsOutput {
        crate::operation::get_managed_endpoint_session_credentials::GetManagedEndpointSessionCredentialsOutput {
            id: self.id,
            credentials: self.credentials,
            expires_at: self.expires_at,
            _request_id: self._request_id,
        }
    }
}
