// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The current status of the retry policy executed on the job.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct RetryPolicyExecution {
    /// <p>The current number of attempts made on the driver of the job.</p>
    pub current_attempt_count: ::std::option::Option<i32>,
}
impl RetryPolicyExecution {
    /// <p>The current number of attempts made on the driver of the job.</p>
    pub fn current_attempt_count(&self) -> ::std::option::Option<i32> {
        self.current_attempt_count
    }
}
impl RetryPolicyExecution {
    /// Creates a new builder-style object to manufacture [`RetryPolicyExecution`](crate::types::RetryPolicyExecution).
    pub fn builder() -> crate::types::builders::RetryPolicyExecutionBuilder {
        crate::types::builders::RetryPolicyExecutionBuilder::default()
    }
}

/// A builder for [`RetryPolicyExecution`](crate::types::RetryPolicyExecution).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct RetryPolicyExecutionBuilder {
    pub(crate) current_attempt_count: ::std::option::Option<i32>,
}
impl RetryPolicyExecutionBuilder {
    /// <p>The current number of attempts made on the driver of the job.</p>
    pub fn current_attempt_count(mut self, input: i32) -> Self {
        self.current_attempt_count = ::std::option::Option::Some(input);
        self
    }
    /// <p>The current number of attempts made on the driver of the job.</p>
    pub fn set_current_attempt_count(mut self, input: ::std::option::Option<i32>) -> Self {
        self.current_attempt_count = input;
        self
    }
    /// <p>The current number of attempts made on the driver of the job.</p>
    pub fn get_current_attempt_count(&self) -> &::std::option::Option<i32> {
        &self.current_attempt_count
    }
    /// Consumes the builder and constructs a [`RetryPolicyExecution`](crate::types::RetryPolicyExecution).
    pub fn build(self) -> crate::types::RetryPolicyExecution {
        crate::types::RetryPolicyExecution {
            current_attempt_count: self.current_attempt_count,
        }
    }
}
