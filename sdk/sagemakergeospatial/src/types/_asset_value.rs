// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The structure containing the asset properties.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssetValue {
    /// <p>Link to the asset object.</p>
    pub href: ::std::option::Option<::std::string::String>,
}
impl AssetValue {
    /// <p>Link to the asset object.</p>
    pub fn href(&self) -> ::std::option::Option<&str> {
        self.href.as_deref()
    }
}
impl AssetValue {
    /// Creates a new builder-style object to manufacture [`AssetValue`](crate::types::AssetValue).
    pub fn builder() -> crate::types::builders::AssetValueBuilder {
        crate::types::builders::AssetValueBuilder::default()
    }
}

/// A builder for [`AssetValue`](crate::types::AssetValue).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssetValueBuilder {
    pub(crate) href: ::std::option::Option<::std::string::String>,
}
impl AssetValueBuilder {
    /// <p>Link to the asset object.</p>
    pub fn href(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.href = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Link to the asset object.</p>
    pub fn set_href(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.href = input;
        self
    }
    /// <p>Link to the asset object.</p>
    pub fn get_href(&self) -> &::std::option::Option<::std::string::String> {
        &self.href
    }
    /// Consumes the builder and constructs a [`AssetValue`](crate::types::AssetValue).
    pub fn build(self) -> crate::types::AssetValue {
        crate::types::AssetValue { href: self.href }
    }
}
