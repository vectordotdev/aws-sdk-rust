// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that represents the background work that RAM performs when you invoke the <code>ReplacePermissionAssociations</code> operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReplacePermissionAssociationsWork {
    /// <p>The unique identifier for the background task associated with one <code>ReplacePermissionAssociations</code> request.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the managed permission that this background task is replacing.</p>
    pub from_permission_arn: ::std::option::Option<::std::string::String>,
    /// <p>The version of the managed permission that this background task is replacing.</p>
    pub from_permission_version: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the managed permission that this background task is associating with the resource shares in place of the managed permission and version specified in <code>fromPermissionArn</code> and <code>fromPermissionVersion</code>.</p>
    pub to_permission_arn: ::std::option::Option<::std::string::String>,
    /// <p>The version of the managed permission that this background task is associating with the resource shares. This is always the version that is currently the default for this managed permission.</p>
    pub to_permission_version: ::std::option::Option<::std::string::String>,
    /// <p>Specifies the current status of the background tasks for the specified ID. The output is one of the following strings:</p>
    /// <ul>
    /// <li> <p> <code>IN_PROGRESS</code> </p> </li>
    /// <li> <p> <code>COMPLETED</code> </p> </li>
    /// <li> <p> <code>FAILED</code> </p> </li>
    /// </ul>
    pub status: ::std::option::Option<crate::types::ReplacePermissionAssociationsWorkStatus>,
    /// <p>Specifies the reason for a <code>FAILED</code> status. This field is present only when there <code>status</code> is <code>FAILED</code>.</p>
    pub status_message: ::std::option::Option<::std::string::String>,
    /// <p>The date and time when this asynchronous background task was created.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date and time when the status of this background task was last updated.</p>
    pub last_updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ReplacePermissionAssociationsWork {
    /// <p>The unique identifier for the background task associated with one <code>ReplacePermissionAssociations</code> request.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the managed permission that this background task is replacing.</p>
    pub fn from_permission_arn(&self) -> ::std::option::Option<&str> {
        self.from_permission_arn.as_deref()
    }
    /// <p>The version of the managed permission that this background task is replacing.</p>
    pub fn from_permission_version(&self) -> ::std::option::Option<&str> {
        self.from_permission_version.as_deref()
    }
    /// <p>The ARN of the managed permission that this background task is associating with the resource shares in place of the managed permission and version specified in <code>fromPermissionArn</code> and <code>fromPermissionVersion</code>.</p>
    pub fn to_permission_arn(&self) -> ::std::option::Option<&str> {
        self.to_permission_arn.as_deref()
    }
    /// <p>The version of the managed permission that this background task is associating with the resource shares. This is always the version that is currently the default for this managed permission.</p>
    pub fn to_permission_version(&self) -> ::std::option::Option<&str> {
        self.to_permission_version.as_deref()
    }
    /// <p>Specifies the current status of the background tasks for the specified ID. The output is one of the following strings:</p>
    /// <ul>
    /// <li> <p> <code>IN_PROGRESS</code> </p> </li>
    /// <li> <p> <code>COMPLETED</code> </p> </li>
    /// <li> <p> <code>FAILED</code> </p> </li>
    /// </ul>
    pub fn status(&self) -> ::std::option::Option<&crate::types::ReplacePermissionAssociationsWorkStatus> {
        self.status.as_ref()
    }
    /// <p>Specifies the reason for a <code>FAILED</code> status. This field is present only when there <code>status</code> is <code>FAILED</code>.</p>
    pub fn status_message(&self) -> ::std::option::Option<&str> {
        self.status_message.as_deref()
    }
    /// <p>The date and time when this asynchronous background task was created.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The date and time when the status of this background task was last updated.</p>
    pub fn last_updated_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_time.as_ref()
    }
}
impl ReplacePermissionAssociationsWork {
    /// Creates a new builder-style object to manufacture [`ReplacePermissionAssociationsWork`](crate::types::ReplacePermissionAssociationsWork).
    pub fn builder() -> crate::types::builders::ReplacePermissionAssociationsWorkBuilder {
        crate::types::builders::ReplacePermissionAssociationsWorkBuilder::default()
    }
}

/// A builder for [`ReplacePermissionAssociationsWork`](crate::types::ReplacePermissionAssociationsWork).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReplacePermissionAssociationsWorkBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) from_permission_arn: ::std::option::Option<::std::string::String>,
    pub(crate) from_permission_version: ::std::option::Option<::std::string::String>,
    pub(crate) to_permission_arn: ::std::option::Option<::std::string::String>,
    pub(crate) to_permission_version: ::std::option::Option<::std::string::String>,
    pub(crate) status: ::std::option::Option<crate::types::ReplacePermissionAssociationsWorkStatus>,
    pub(crate) status_message: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) last_updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ReplacePermissionAssociationsWorkBuilder {
    /// <p>The unique identifier for the background task associated with one <code>ReplacePermissionAssociations</code> request.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier for the background task associated with one <code>ReplacePermissionAssociations</code> request.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The unique identifier for the background task associated with one <code>ReplacePermissionAssociations</code> request.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the managed permission that this background task is replacing.</p>
    pub fn from_permission_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.from_permission_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the managed permission that this background task is replacing.</p>
    pub fn set_from_permission_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.from_permission_arn = input;
        self
    }
    /// <p>The <a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Name (ARN)</a> of the managed permission that this background task is replacing.</p>
    pub fn get_from_permission_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.from_permission_arn
    }
    /// <p>The version of the managed permission that this background task is replacing.</p>
    pub fn from_permission_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.from_permission_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the managed permission that this background task is replacing.</p>
    pub fn set_from_permission_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.from_permission_version = input;
        self
    }
    /// <p>The version of the managed permission that this background task is replacing.</p>
    pub fn get_from_permission_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.from_permission_version
    }
    /// <p>The ARN of the managed permission that this background task is associating with the resource shares in place of the managed permission and version specified in <code>fromPermissionArn</code> and <code>fromPermissionVersion</code>.</p>
    pub fn to_permission_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.to_permission_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the managed permission that this background task is associating with the resource shares in place of the managed permission and version specified in <code>fromPermissionArn</code> and <code>fromPermissionVersion</code>.</p>
    pub fn set_to_permission_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.to_permission_arn = input;
        self
    }
    /// <p>The ARN of the managed permission that this background task is associating with the resource shares in place of the managed permission and version specified in <code>fromPermissionArn</code> and <code>fromPermissionVersion</code>.</p>
    pub fn get_to_permission_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.to_permission_arn
    }
    /// <p>The version of the managed permission that this background task is associating with the resource shares. This is always the version that is currently the default for this managed permission.</p>
    pub fn to_permission_version(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.to_permission_version = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The version of the managed permission that this background task is associating with the resource shares. This is always the version that is currently the default for this managed permission.</p>
    pub fn set_to_permission_version(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.to_permission_version = input;
        self
    }
    /// <p>The version of the managed permission that this background task is associating with the resource shares. This is always the version that is currently the default for this managed permission.</p>
    pub fn get_to_permission_version(&self) -> &::std::option::Option<::std::string::String> {
        &self.to_permission_version
    }
    /// <p>Specifies the current status of the background tasks for the specified ID. The output is one of the following strings:</p>
    /// <ul>
    /// <li> <p> <code>IN_PROGRESS</code> </p> </li>
    /// <li> <p> <code>COMPLETED</code> </p> </li>
    /// <li> <p> <code>FAILED</code> </p> </li>
    /// </ul>
    pub fn status(mut self, input: crate::types::ReplacePermissionAssociationsWorkStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies the current status of the background tasks for the specified ID. The output is one of the following strings:</p>
    /// <ul>
    /// <li> <p> <code>IN_PROGRESS</code> </p> </li>
    /// <li> <p> <code>COMPLETED</code> </p> </li>
    /// <li> <p> <code>FAILED</code> </p> </li>
    /// </ul>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::ReplacePermissionAssociationsWorkStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>Specifies the current status of the background tasks for the specified ID. The output is one of the following strings:</p>
    /// <ul>
    /// <li> <p> <code>IN_PROGRESS</code> </p> </li>
    /// <li> <p> <code>COMPLETED</code> </p> </li>
    /// <li> <p> <code>FAILED</code> </p> </li>
    /// </ul>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::ReplacePermissionAssociationsWorkStatus> {
        &self.status
    }
    /// <p>Specifies the reason for a <code>FAILED</code> status. This field is present only when there <code>status</code> is <code>FAILED</code>.</p>
    pub fn status_message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.status_message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>Specifies the reason for a <code>FAILED</code> status. This field is present only when there <code>status</code> is <code>FAILED</code>.</p>
    pub fn set_status_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.status_message = input;
        self
    }
    /// <p>Specifies the reason for a <code>FAILED</code> status. This field is present only when there <code>status</code> is <code>FAILED</code>.</p>
    pub fn get_status_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.status_message
    }
    /// <p>The date and time when this asynchronous background task was created.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when this asynchronous background task was created.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The date and time when this asynchronous background task was created.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The date and time when the status of this background task was last updated.</p>
    pub fn last_updated_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date and time when the status of this background task was last updated.</p>
    pub fn set_last_updated_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_time = input;
        self
    }
    /// <p>The date and time when the status of this background task was last updated.</p>
    pub fn get_last_updated_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_time
    }
    /// Consumes the builder and constructs a [`ReplacePermissionAssociationsWork`](crate::types::ReplacePermissionAssociationsWork).
    pub fn build(self) -> crate::types::ReplacePermissionAssociationsWork {
        crate::types::ReplacePermissionAssociationsWork {
            id: self.id,
            from_permission_arn: self.from_permission_arn,
            from_permission_version: self.from_permission_version,
            to_permission_arn: self.to_permission_arn,
            to_permission_version: self.to_permission_version,
            status: self.status,
            status_message: self.status_message,
            creation_time: self.creation_time,
            last_updated_time: self.last_updated_time,
        }
    }
}
