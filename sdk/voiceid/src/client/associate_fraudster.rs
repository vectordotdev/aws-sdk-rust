// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`AssociateFraudster`](crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`domain_id(impl ::std::convert::Into<String>)`](crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder::domain_id) / [`set_domain_id(Option<String>)`](crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder::set_domain_id): <p>The identifier of the domain that contains the fraudster.</p>
    ///   - [`watchlist_id(impl ::std::convert::Into<String>)`](crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder::watchlist_id) / [`set_watchlist_id(Option<String>)`](crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder::set_watchlist_id): <p>The identifier of the watchlist you want to associate with the fraudster.</p>
    ///   - [`fraudster_id(impl ::std::convert::Into<String>)`](crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder::fraudster_id) / [`set_fraudster_id(Option<String>)`](crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder::set_fraudster_id): <p>The identifier of the fraudster to be associated with the watchlist.</p>
    /// - On success, responds with [`AssociateFraudsterOutput`](crate::operation::associate_fraudster::AssociateFraudsterOutput) with field(s):
    ///   - [`fraudster(Option<Fraudster>)`](crate::operation::associate_fraudster::AssociateFraudsterOutput::fraudster): <p>Contains all the information about a fraudster.</p>
    /// - On failure, responds with [`SdkError<AssociateFraudsterError>`](crate::operation::associate_fraudster::AssociateFraudsterError)
    pub fn associate_fraudster(&self) -> crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder {
        crate::operation::associate_fraudster::builders::AssociateFraudsterFluentBuilder::new(self.handle.clone())
    }
}
