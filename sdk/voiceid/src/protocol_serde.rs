// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_associate_fraudster;

pub(crate) mod shape_create_domain;

pub(crate) mod shape_create_watchlist;

pub(crate) mod shape_delete_domain;

pub(crate) mod shape_delete_fraudster;

pub(crate) mod shape_delete_speaker;

pub(crate) mod shape_delete_watchlist;

pub(crate) mod shape_describe_domain;

pub(crate) mod shape_describe_fraudster;

pub(crate) mod shape_describe_fraudster_registration_job;

pub(crate) mod shape_describe_speaker;

pub(crate) mod shape_describe_speaker_enrollment_job;

pub(crate) mod shape_describe_watchlist;

pub(crate) mod shape_disassociate_fraudster;

pub(crate) mod shape_evaluate_session;

pub(crate) mod shape_list_domains;

pub(crate) mod shape_list_fraudster_registration_jobs;

pub(crate) mod shape_list_fraudsters;

pub(crate) mod shape_list_speaker_enrollment_jobs;

pub(crate) mod shape_list_speakers;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_watchlists;

pub(crate) mod shape_opt_out_speaker;

pub(crate) mod shape_start_fraudster_registration_job;

pub(crate) mod shape_start_speaker_enrollment_job;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_domain;

pub(crate) mod shape_update_watchlist;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_associate_fraudster_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_domain_input;

pub(crate) mod shape_create_watchlist_input;

pub(crate) mod shape_delete_domain_input;

pub(crate) mod shape_delete_fraudster_input;

pub(crate) mod shape_delete_speaker_input;

pub(crate) mod shape_delete_watchlist_input;

pub(crate) mod shape_describe_domain_input;

pub(crate) mod shape_describe_fraudster_input;

pub(crate) mod shape_describe_fraudster_registration_job_input;

pub(crate) mod shape_describe_speaker_enrollment_job_input;

pub(crate) mod shape_describe_speaker_input;

pub(crate) mod shape_describe_watchlist_input;

pub(crate) mod shape_disassociate_fraudster_input;

pub(crate) mod shape_evaluate_session_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_domains_input;

pub(crate) mod shape_list_fraudster_registration_jobs_input;

pub(crate) mod shape_list_fraudsters_input;

pub(crate) mod shape_list_speaker_enrollment_jobs_input;

pub(crate) mod shape_list_speakers_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_list_watchlists_input;

pub(crate) mod shape_opt_out_speaker_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_start_fraudster_registration_job_input;

pub(crate) mod shape_start_speaker_enrollment_job_input;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_untag_resource_input;

pub(crate) mod shape_update_domain_input;

pub(crate) mod shape_update_watchlist_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_authentication_result;

pub(crate) mod shape_domain;

pub(crate) mod shape_domain_summaries;

pub(crate) mod shape_enrollment_config;

pub(crate) mod shape_fraud_detection_result;

pub(crate) mod shape_fraudster;

pub(crate) mod shape_fraudster_registration_job;

pub(crate) mod shape_fraudster_registration_job_summaries;

pub(crate) mod shape_fraudster_summaries;

pub(crate) mod shape_input_data_config;

pub(crate) mod shape_output_data_config;

pub(crate) mod shape_registration_config;

pub(crate) mod shape_server_side_encryption_configuration;

pub(crate) mod shape_speaker;

pub(crate) mod shape_speaker_enrollment_job;

pub(crate) mod shape_speaker_enrollment_job_summaries;

pub(crate) mod shape_speaker_summaries;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;

pub(crate) mod shape_watchlist;

pub(crate) mod shape_watchlist_summaries;

pub(crate) mod shape_authentication_configuration;

pub(crate) mod shape_domain_summary;

pub(crate) mod shape_enrollment_job_fraud_detection_config;

pub(crate) mod shape_failure_details;

pub(crate) mod shape_fraud_detection_configuration;

pub(crate) mod shape_fraud_detection_reasons;

pub(crate) mod shape_fraud_risk_details;

pub(crate) mod shape_fraudster_registration_job_summary;

pub(crate) mod shape_fraudster_summary;

pub(crate) mod shape_job_progress;

pub(crate) mod shape_response_watchlist_ids;

pub(crate) mod shape_server_side_encryption_update_details;

pub(crate) mod shape_speaker_enrollment_job_summary;

pub(crate) mod shape_speaker_summary;

pub(crate) mod shape_watchlist_details;

pub(crate) mod shape_watchlist_summary;

pub(crate) mod shape_known_fraudster_risk;

pub(crate) mod shape_registration_config_watchlist_ids;

pub(crate) mod shape_voice_spoofing_risk;

pub(crate) mod shape_enrollment_job_fraud_detection_config_watchlist_ids;
