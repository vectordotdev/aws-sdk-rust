// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The container of the transaction output.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TransactionOutputItem {
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub transaction_hash: ::std::option::Option<::std::string::String>,
    /// <p>The blockchain network where the transaction occurred.</p>
    pub network: ::std::option::Option<crate::types::QueryNetwork>,
    /// <p>The time when the transaction occurred.</p>
    pub transaction_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl TransactionOutputItem {
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub fn transaction_hash(&self) -> ::std::option::Option<&str> {
        self.transaction_hash.as_deref()
    }
    /// <p>The blockchain network where the transaction occurred.</p>
    pub fn network(&self) -> ::std::option::Option<&crate::types::QueryNetwork> {
        self.network.as_ref()
    }
    /// <p>The time when the transaction occurred.</p>
    pub fn transaction_timestamp(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.transaction_timestamp.as_ref()
    }
}
impl TransactionOutputItem {
    /// Creates a new builder-style object to manufacture [`TransactionOutputItem`](crate::types::TransactionOutputItem).
    pub fn builder() -> crate::types::builders::TransactionOutputItemBuilder {
        crate::types::builders::TransactionOutputItemBuilder::default()
    }
}

/// A builder for [`TransactionOutputItem`](crate::types::TransactionOutputItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TransactionOutputItemBuilder {
    pub(crate) transaction_hash: ::std::option::Option<::std::string::String>,
    pub(crate) network: ::std::option::Option<crate::types::QueryNetwork>,
    pub(crate) transaction_timestamp: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl TransactionOutputItemBuilder {
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub fn transaction_hash(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.transaction_hash = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub fn set_transaction_hash(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.transaction_hash = input;
        self
    }
    /// <p>The hash of the transaction. It is generated whenever a transaction is verified and added to the blockchain.</p>
    pub fn get_transaction_hash(&self) -> &::std::option::Option<::std::string::String> {
        &self.transaction_hash
    }
    /// <p>The blockchain network where the transaction occurred.</p>
    pub fn network(mut self, input: crate::types::QueryNetwork) -> Self {
        self.network = ::std::option::Option::Some(input);
        self
    }
    /// <p>The blockchain network where the transaction occurred.</p>
    pub fn set_network(mut self, input: ::std::option::Option<crate::types::QueryNetwork>) -> Self {
        self.network = input;
        self
    }
    /// <p>The blockchain network where the transaction occurred.</p>
    pub fn get_network(&self) -> &::std::option::Option<crate::types::QueryNetwork> {
        &self.network
    }
    /// <p>The time when the transaction occurred.</p>
    pub fn transaction_timestamp(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.transaction_timestamp = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the transaction occurred.</p>
    pub fn set_transaction_timestamp(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.transaction_timestamp = input;
        self
    }
    /// <p>The time when the transaction occurred.</p>
    pub fn get_transaction_timestamp(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.transaction_timestamp
    }
    /// Consumes the builder and constructs a [`TransactionOutputItem`](crate::types::TransactionOutputItem).
    pub fn build(self) -> crate::types::TransactionOutputItem {
        crate::types::TransactionOutputItem {
            transaction_hash: self.transaction_hash,
            network: self.network,
            transaction_timestamp: self.transaction_timestamp,
        }
    }
}
