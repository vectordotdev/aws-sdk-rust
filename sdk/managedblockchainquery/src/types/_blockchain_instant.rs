// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The container for time.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct BlockchainInstant {
    /// <p>The container of the <code>Timestamp</code> of the blockchain instant.</p> <note>
    /// <p>This <code>timestamp</code> will only be recorded up to the second.</p>
    /// </note>
    pub time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl BlockchainInstant {
    /// <p>The container of the <code>Timestamp</code> of the blockchain instant.</p> <note>
    /// <p>This <code>timestamp</code> will only be recorded up to the second.</p>
    /// </note>
    pub fn time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.time.as_ref()
    }
}
impl BlockchainInstant {
    /// Creates a new builder-style object to manufacture [`BlockchainInstant`](crate::types::BlockchainInstant).
    pub fn builder() -> crate::types::builders::BlockchainInstantBuilder {
        crate::types::builders::BlockchainInstantBuilder::default()
    }
}

/// A builder for [`BlockchainInstant`](crate::types::BlockchainInstant).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct BlockchainInstantBuilder {
    pub(crate) time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl BlockchainInstantBuilder {
    /// <p>The container of the <code>Timestamp</code> of the blockchain instant.</p> <note>
    /// <p>This <code>timestamp</code> will only be recorded up to the second.</p>
    /// </note>
    pub fn time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The container of the <code>Timestamp</code> of the blockchain instant.</p> <note>
    /// <p>This <code>timestamp</code> will only be recorded up to the second.</p>
    /// </note>
    pub fn set_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.time = input;
        self
    }
    /// <p>The container of the <code>Timestamp</code> of the blockchain instant.</p> <note>
    /// <p>This <code>timestamp</code> will only be recorded up to the second.</p>
    /// </note>
    pub fn get_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.time
    }
    /// Consumes the builder and constructs a [`BlockchainInstant`](crate::types::BlockchainInstant).
    pub fn build(self) -> crate::types::BlockchainInstant {
        crate::types::BlockchainInstant { time: self.time }
    }
}
