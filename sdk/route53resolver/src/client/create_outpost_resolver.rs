// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`CreateOutpostResolver`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`creator_request_id(impl ::std::convert::Into<String>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::creator_request_id) / [`set_creator_request_id(Option<String>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::set_creator_request_id): <p>A unique string that identifies the request and that allows failed requests to be retried without the risk of running the operation twice. </p>  <p> <code>CreatorRequestId</code> can be any unique string, for example, a date/time stamp.</p>
    ///   - [`name(impl ::std::convert::Into<String>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::name) / [`set_name(Option<String>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::set_name): <p>A friendly name that lets you easily find a configuration in the Resolver dashboard in the Route&nbsp;53 console.</p>
    ///   - [`instance_count(i32)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::instance_count) / [`set_instance_count(Option<i32>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::set_instance_count): <p>Number of Amazon EC2 instances for the Resolver on Outpost. The default and minimal value is 4.</p>
    ///   - [`preferred_instance_type(impl ::std::convert::Into<String>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::preferred_instance_type) / [`set_preferred_instance_type(Option<String>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::set_preferred_instance_type): <p> The Amazon EC2 instance type. If you specify this, you must also specify a value for the <code>OutpostArn</code>. </p>
    ///   - [`outpost_arn(impl ::std::convert::Into<String>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::outpost_arn) / [`set_outpost_arn(Option<String>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::set_outpost_arn): <p>The Amazon Resource Name (ARN) of the Outpost. If you specify this, you must also specify a value for the <code>PreferredInstanceType</code>.</p>
    ///   - [`tags(Vec<Tag>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::tags) / [`set_tags(Option<Vec<Tag>>)`](crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::set_tags): <p> A string that helps identify the Route&nbsp;53 Resolvers on Outpost. </p>
    /// - On success, responds with [`CreateOutpostResolverOutput`](crate::operation::create_outpost_resolver::CreateOutpostResolverOutput) with field(s):
    ///   - [`outpost_resolver(Option<OutpostResolver>)`](crate::operation::create_outpost_resolver::CreateOutpostResolverOutput::outpost_resolver): <p>Information about the <code>CreateOutpostResolver</code> request, including the status of the request.</p>
    /// - On failure, responds with [`SdkError<CreateOutpostResolverError>`](crate::operation::create_outpost_resolver::CreateOutpostResolverError)
    pub fn create_outpost_resolver(&self) -> crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder {
        crate::operation::create_outpost_resolver::builders::CreateOutpostResolverFluentBuilder::new(self.handle.clone())
    }
}
