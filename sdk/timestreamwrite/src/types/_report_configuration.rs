// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Report configuration for a batch load task. This contains details about where error reports are stored.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ReportConfiguration {
    /// <p>Configuration of an S3 location to write error reports and events for a batch load.</p>
    pub report_s3_configuration: ::std::option::Option<crate::types::ReportS3Configuration>,
}
impl ReportConfiguration {
    /// <p>Configuration of an S3 location to write error reports and events for a batch load.</p>
    pub fn report_s3_configuration(&self) -> ::std::option::Option<&crate::types::ReportS3Configuration> {
        self.report_s3_configuration.as_ref()
    }
}
impl ReportConfiguration {
    /// Creates a new builder-style object to manufacture [`ReportConfiguration`](crate::types::ReportConfiguration).
    pub fn builder() -> crate::types::builders::ReportConfigurationBuilder {
        crate::types::builders::ReportConfigurationBuilder::default()
    }
}

/// A builder for [`ReportConfiguration`](crate::types::ReportConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ReportConfigurationBuilder {
    pub(crate) report_s3_configuration: ::std::option::Option<crate::types::ReportS3Configuration>,
}
impl ReportConfigurationBuilder {
    /// <p>Configuration of an S3 location to write error reports and events for a batch load.</p>
    pub fn report_s3_configuration(mut self, input: crate::types::ReportS3Configuration) -> Self {
        self.report_s3_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p>Configuration of an S3 location to write error reports and events for a batch load.</p>
    pub fn set_report_s3_configuration(mut self, input: ::std::option::Option<crate::types::ReportS3Configuration>) -> Self {
        self.report_s3_configuration = input;
        self
    }
    /// <p>Configuration of an S3 location to write error reports and events for a batch load.</p>
    pub fn get_report_s3_configuration(&self) -> &::std::option::Option<crate::types::ReportS3Configuration> {
        &self.report_s3_configuration
    }
    /// Consumes the builder and constructs a [`ReportConfiguration`](crate::types::ReportConfiguration).
    pub fn build(self) -> crate::types::ReportConfiguration {
        crate::types::ReportConfiguration {
            report_s3_configuration: self.report_s3_configuration,
        }
    }
}
