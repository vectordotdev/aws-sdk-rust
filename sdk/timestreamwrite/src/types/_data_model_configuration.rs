// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p></p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DataModelConfiguration {
    /// <p></p>
    pub data_model: ::std::option::Option<crate::types::DataModel>,
    /// <p></p>
    pub data_model_s3_configuration: ::std::option::Option<crate::types::DataModelS3Configuration>,
}
impl DataModelConfiguration {
    /// <p></p>
    pub fn data_model(&self) -> ::std::option::Option<&crate::types::DataModel> {
        self.data_model.as_ref()
    }
    /// <p></p>
    pub fn data_model_s3_configuration(&self) -> ::std::option::Option<&crate::types::DataModelS3Configuration> {
        self.data_model_s3_configuration.as_ref()
    }
}
impl DataModelConfiguration {
    /// Creates a new builder-style object to manufacture [`DataModelConfiguration`](crate::types::DataModelConfiguration).
    pub fn builder() -> crate::types::builders::DataModelConfigurationBuilder {
        crate::types::builders::DataModelConfigurationBuilder::default()
    }
}

/// A builder for [`DataModelConfiguration`](crate::types::DataModelConfiguration).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DataModelConfigurationBuilder {
    pub(crate) data_model: ::std::option::Option<crate::types::DataModel>,
    pub(crate) data_model_s3_configuration: ::std::option::Option<crate::types::DataModelS3Configuration>,
}
impl DataModelConfigurationBuilder {
    /// <p></p>
    pub fn data_model(mut self, input: crate::types::DataModel) -> Self {
        self.data_model = ::std::option::Option::Some(input);
        self
    }
    /// <p></p>
    pub fn set_data_model(mut self, input: ::std::option::Option<crate::types::DataModel>) -> Self {
        self.data_model = input;
        self
    }
    /// <p></p>
    pub fn get_data_model(&self) -> &::std::option::Option<crate::types::DataModel> {
        &self.data_model
    }
    /// <p></p>
    pub fn data_model_s3_configuration(mut self, input: crate::types::DataModelS3Configuration) -> Self {
        self.data_model_s3_configuration = ::std::option::Option::Some(input);
        self
    }
    /// <p></p>
    pub fn set_data_model_s3_configuration(mut self, input: ::std::option::Option<crate::types::DataModelS3Configuration>) -> Self {
        self.data_model_s3_configuration = input;
        self
    }
    /// <p></p>
    pub fn get_data_model_s3_configuration(&self) -> &::std::option::Option<crate::types::DataModelS3Configuration> {
        &self.data_model_s3_configuration
    }
    /// Consumes the builder and constructs a [`DataModelConfiguration`](crate::types::DataModelConfiguration).
    pub fn build(self) -> crate::types::DataModelConfiguration {
        crate::types::DataModelConfiguration {
            data_model: self.data_model,
            data_model_s3_configuration: self.data_model_s3_configuration,
        }
    }
}
