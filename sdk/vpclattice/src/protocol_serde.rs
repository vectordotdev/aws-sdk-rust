// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_batch_update_rule;

pub(crate) mod shape_create_access_log_subscription;

pub(crate) mod shape_create_listener;

pub(crate) mod shape_create_rule;

pub(crate) mod shape_create_service;

pub(crate) mod shape_create_service_network;

pub(crate) mod shape_create_service_network_service_association;

pub(crate) mod shape_create_service_network_vpc_association;

pub(crate) mod shape_create_target_group;

pub(crate) mod shape_delete_access_log_subscription;

pub(crate) mod shape_delete_auth_policy;

pub(crate) mod shape_delete_listener;

pub(crate) mod shape_delete_resource_policy;

pub(crate) mod shape_delete_rule;

pub(crate) mod shape_delete_service;

pub(crate) mod shape_delete_service_network;

pub(crate) mod shape_delete_service_network_service_association;

pub(crate) mod shape_delete_service_network_vpc_association;

pub(crate) mod shape_delete_target_group;

pub(crate) mod shape_deregister_targets;

pub(crate) mod shape_get_access_log_subscription;

pub(crate) mod shape_get_auth_policy;

pub(crate) mod shape_get_listener;

pub(crate) mod shape_get_resource_policy;

pub(crate) mod shape_get_rule;

pub(crate) mod shape_get_service;

pub(crate) mod shape_get_service_network;

pub(crate) mod shape_get_service_network_service_association;

pub(crate) mod shape_get_service_network_vpc_association;

pub(crate) mod shape_get_target_group;

pub(crate) mod shape_list_access_log_subscriptions;

pub(crate) mod shape_list_listeners;

pub(crate) mod shape_list_rules;

pub(crate) mod shape_list_service_network_service_associations;

pub(crate) mod shape_list_service_network_vpc_associations;

pub(crate) mod shape_list_service_networks;

pub(crate) mod shape_list_services;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_list_target_groups;

pub(crate) mod shape_list_targets;

pub(crate) mod shape_put_auth_policy;

pub(crate) mod shape_put_resource_policy;

pub(crate) mod shape_register_targets;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_access_log_subscription;

pub(crate) mod shape_update_listener;

pub(crate) mod shape_update_rule;

pub(crate) mod shape_update_service;

pub(crate) mod shape_update_service_network;

pub(crate) mod shape_update_service_network_vpc_association;

pub(crate) mod shape_update_target_group;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_batch_update_rule_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_access_log_subscription_input;

pub(crate) mod shape_create_listener_input;

pub(crate) mod shape_create_rule_input;

pub(crate) mod shape_create_service_input;

pub(crate) mod shape_create_service_network_input;

pub(crate) mod shape_create_service_network_service_association_input;

pub(crate) mod shape_create_service_network_vpc_association_input;

pub(crate) mod shape_create_target_group_input;

pub(crate) mod shape_deregister_targets_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_list_targets_input;

pub(crate) mod shape_put_auth_policy_input;

pub(crate) mod shape_put_resource_policy_input;

pub(crate) mod shape_register_targets_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_service_quota_exceeded_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_access_log_subscription_input;

pub(crate) mod shape_update_listener_input;

pub(crate) mod shape_update_rule_input;

pub(crate) mod shape_update_service_input;

pub(crate) mod shape_update_service_network_input;

pub(crate) mod shape_update_service_network_vpc_association_input;

pub(crate) mod shape_update_target_group_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_access_log_subscription_list;

pub(crate) mod shape_dns_entry;

pub(crate) mod shape_health_check_config;

pub(crate) mod shape_listener_summary_list;

pub(crate) mod shape_rule_action;

pub(crate) mod shape_rule_match;

pub(crate) mod shape_rule_summary_list;

pub(crate) mod shape_rule_update;

pub(crate) mod shape_rule_update_failure_list;

pub(crate) mod shape_rule_update_success_list;

pub(crate) mod shape_security_group_list;

pub(crate) mod shape_service_arn_list;

pub(crate) mod shape_service_list;

pub(crate) mod shape_service_network_list;

pub(crate) mod shape_service_network_service_association_list;

pub(crate) mod shape_service_network_vpc_association_list;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_target;

pub(crate) mod shape_target_failure_list;

pub(crate) mod shape_target_group_config;

pub(crate) mod shape_target_group_list;

pub(crate) mod shape_target_list;

pub(crate) mod shape_target_summary_list;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_access_log_subscription_summary;

pub(crate) mod shape_fixed_response_action;

pub(crate) mod shape_forward_action;

pub(crate) mod shape_http_match;

pub(crate) mod shape_listener_summary;

pub(crate) mod shape_matcher;

pub(crate) mod shape_rule_summary;

pub(crate) mod shape_rule_update_failure;

pub(crate) mod shape_rule_update_success;

pub(crate) mod shape_service_network_service_association_summary;

pub(crate) mod shape_service_network_summary;

pub(crate) mod shape_service_network_vpc_association_summary;

pub(crate) mod shape_service_summary;

pub(crate) mod shape_target_failure;

pub(crate) mod shape_target_group_summary;

pub(crate) mod shape_target_summary;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_header_match;

pub(crate) mod shape_header_match_list;

pub(crate) mod shape_path_match;

pub(crate) mod shape_weighted_target_group;

pub(crate) mod shape_weighted_target_group_list;

pub(crate) mod shape_header_match_type;

pub(crate) mod shape_path_match_type;
