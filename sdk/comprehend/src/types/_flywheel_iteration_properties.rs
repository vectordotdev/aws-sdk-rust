// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The configuration properties of a flywheel iteration.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct FlywheelIterationProperties {
    /// <p></p>
    pub flywheel_arn: ::std::option::Option<::std::string::String>,
    /// <p></p>
    pub flywheel_iteration_id: ::std::option::Option<::std::string::String>,
    /// <p>The creation start time of the flywheel iteration.</p>
    pub creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The completion time of this flywheel iteration.</p>
    pub end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The status of the flywheel iteration.</p>
    pub status: ::std::option::Option<crate::types::FlywheelIterationStatus>,
    /// <p>A description of the status of the flywheel iteration.</p>
    pub message: ::std::option::Option<::std::string::String>,
    /// <p>The ARN of the evaluated model associated with this flywheel iteration.</p>
    pub evaluated_model_arn: ::std::option::Option<::std::string::String>,
    /// <p>The evaluation metrics associated with the evaluated model.</p>
    pub evaluated_model_metrics: ::std::option::Option<crate::types::FlywheelModelEvaluationMetrics>,
    /// <p>The ARN of the trained model associated with this flywheel iteration.</p>
    pub trained_model_arn: ::std::option::Option<::std::string::String>,
    /// <p>The metrics associated with the trained model.</p>
    pub trained_model_metrics: ::std::option::Option<crate::types::FlywheelModelEvaluationMetrics>,
    /// <p></p>
    pub evaluation_manifest_s3_prefix: ::std::option::Option<::std::string::String>,
}
impl FlywheelIterationProperties {
    /// <p></p>
    pub fn flywheel_arn(&self) -> ::std::option::Option<&str> {
        self.flywheel_arn.as_deref()
    }
    /// <p></p>
    pub fn flywheel_iteration_id(&self) -> ::std::option::Option<&str> {
        self.flywheel_iteration_id.as_deref()
    }
    /// <p>The creation start time of the flywheel iteration.</p>
    pub fn creation_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.creation_time.as_ref()
    }
    /// <p>The completion time of this flywheel iteration.</p>
    pub fn end_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.end_time.as_ref()
    }
    /// <p>The status of the flywheel iteration.</p>
    pub fn status(&self) -> ::std::option::Option<&crate::types::FlywheelIterationStatus> {
        self.status.as_ref()
    }
    /// <p>A description of the status of the flywheel iteration.</p>
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
    /// <p>The ARN of the evaluated model associated with this flywheel iteration.</p>
    pub fn evaluated_model_arn(&self) -> ::std::option::Option<&str> {
        self.evaluated_model_arn.as_deref()
    }
    /// <p>The evaluation metrics associated with the evaluated model.</p>
    pub fn evaluated_model_metrics(&self) -> ::std::option::Option<&crate::types::FlywheelModelEvaluationMetrics> {
        self.evaluated_model_metrics.as_ref()
    }
    /// <p>The ARN of the trained model associated with this flywheel iteration.</p>
    pub fn trained_model_arn(&self) -> ::std::option::Option<&str> {
        self.trained_model_arn.as_deref()
    }
    /// <p>The metrics associated with the trained model.</p>
    pub fn trained_model_metrics(&self) -> ::std::option::Option<&crate::types::FlywheelModelEvaluationMetrics> {
        self.trained_model_metrics.as_ref()
    }
    /// <p></p>
    pub fn evaluation_manifest_s3_prefix(&self) -> ::std::option::Option<&str> {
        self.evaluation_manifest_s3_prefix.as_deref()
    }
}
impl FlywheelIterationProperties {
    /// Creates a new builder-style object to manufacture [`FlywheelIterationProperties`](crate::types::FlywheelIterationProperties).
    pub fn builder() -> crate::types::builders::FlywheelIterationPropertiesBuilder {
        crate::types::builders::FlywheelIterationPropertiesBuilder::default()
    }
}

/// A builder for [`FlywheelIterationProperties`](crate::types::FlywheelIterationProperties).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct FlywheelIterationPropertiesBuilder {
    pub(crate) flywheel_arn: ::std::option::Option<::std::string::String>,
    pub(crate) flywheel_iteration_id: ::std::option::Option<::std::string::String>,
    pub(crate) creation_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) end_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) status: ::std::option::Option<crate::types::FlywheelIterationStatus>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
    pub(crate) evaluated_model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) evaluated_model_metrics: ::std::option::Option<crate::types::FlywheelModelEvaluationMetrics>,
    pub(crate) trained_model_arn: ::std::option::Option<::std::string::String>,
    pub(crate) trained_model_metrics: ::std::option::Option<crate::types::FlywheelModelEvaluationMetrics>,
    pub(crate) evaluation_manifest_s3_prefix: ::std::option::Option<::std::string::String>,
}
impl FlywheelIterationPropertiesBuilder {
    /// <p></p>
    pub fn flywheel_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flywheel_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_flywheel_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flywheel_arn = input;
        self
    }
    /// <p></p>
    pub fn get_flywheel_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.flywheel_arn
    }
    /// <p></p>
    pub fn flywheel_iteration_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.flywheel_iteration_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_flywheel_iteration_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.flywheel_iteration_id = input;
        self
    }
    /// <p></p>
    pub fn get_flywheel_iteration_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.flywheel_iteration_id
    }
    /// <p>The creation start time of the flywheel iteration.</p>
    pub fn creation_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.creation_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The creation start time of the flywheel iteration.</p>
    pub fn set_creation_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.creation_time = input;
        self
    }
    /// <p>The creation start time of the flywheel iteration.</p>
    pub fn get_creation_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.creation_time
    }
    /// <p>The completion time of this flywheel iteration.</p>
    pub fn end_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.end_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The completion time of this flywheel iteration.</p>
    pub fn set_end_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.end_time = input;
        self
    }
    /// <p>The completion time of this flywheel iteration.</p>
    pub fn get_end_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.end_time
    }
    /// <p>The status of the flywheel iteration.</p>
    pub fn status(mut self, input: crate::types::FlywheelIterationStatus) -> Self {
        self.status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of the flywheel iteration.</p>
    pub fn set_status(mut self, input: ::std::option::Option<crate::types::FlywheelIterationStatus>) -> Self {
        self.status = input;
        self
    }
    /// <p>The status of the flywheel iteration.</p>
    pub fn get_status(&self) -> &::std::option::Option<crate::types::FlywheelIterationStatus> {
        &self.status
    }
    /// <p>A description of the status of the flywheel iteration.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A description of the status of the flywheel iteration.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>A description of the status of the flywheel iteration.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// <p>The ARN of the evaluated model associated with this flywheel iteration.</p>
    pub fn evaluated_model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.evaluated_model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the evaluated model associated with this flywheel iteration.</p>
    pub fn set_evaluated_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.evaluated_model_arn = input;
        self
    }
    /// <p>The ARN of the evaluated model associated with this flywheel iteration.</p>
    pub fn get_evaluated_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.evaluated_model_arn
    }
    /// <p>The evaluation metrics associated with the evaluated model.</p>
    pub fn evaluated_model_metrics(mut self, input: crate::types::FlywheelModelEvaluationMetrics) -> Self {
        self.evaluated_model_metrics = ::std::option::Option::Some(input);
        self
    }
    /// <p>The evaluation metrics associated with the evaluated model.</p>
    pub fn set_evaluated_model_metrics(mut self, input: ::std::option::Option<crate::types::FlywheelModelEvaluationMetrics>) -> Self {
        self.evaluated_model_metrics = input;
        self
    }
    /// <p>The evaluation metrics associated with the evaluated model.</p>
    pub fn get_evaluated_model_metrics(&self) -> &::std::option::Option<crate::types::FlywheelModelEvaluationMetrics> {
        &self.evaluated_model_metrics
    }
    /// <p>The ARN of the trained model associated with this flywheel iteration.</p>
    pub fn trained_model_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.trained_model_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the trained model associated with this flywheel iteration.</p>
    pub fn set_trained_model_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.trained_model_arn = input;
        self
    }
    /// <p>The ARN of the trained model associated with this flywheel iteration.</p>
    pub fn get_trained_model_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.trained_model_arn
    }
    /// <p>The metrics associated with the trained model.</p>
    pub fn trained_model_metrics(mut self, input: crate::types::FlywheelModelEvaluationMetrics) -> Self {
        self.trained_model_metrics = ::std::option::Option::Some(input);
        self
    }
    /// <p>The metrics associated with the trained model.</p>
    pub fn set_trained_model_metrics(mut self, input: ::std::option::Option<crate::types::FlywheelModelEvaluationMetrics>) -> Self {
        self.trained_model_metrics = input;
        self
    }
    /// <p>The metrics associated with the trained model.</p>
    pub fn get_trained_model_metrics(&self) -> &::std::option::Option<crate::types::FlywheelModelEvaluationMetrics> {
        &self.trained_model_metrics
    }
    /// <p></p>
    pub fn evaluation_manifest_s3_prefix(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.evaluation_manifest_s3_prefix = ::std::option::Option::Some(input.into());
        self
    }
    /// <p></p>
    pub fn set_evaluation_manifest_s3_prefix(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.evaluation_manifest_s3_prefix = input;
        self
    }
    /// <p></p>
    pub fn get_evaluation_manifest_s3_prefix(&self) -> &::std::option::Option<::std::string::String> {
        &self.evaluation_manifest_s3_prefix
    }
    /// Consumes the builder and constructs a [`FlywheelIterationProperties`](crate::types::FlywheelIterationProperties).
    pub fn build(self) -> crate::types::FlywheelIterationProperties {
        crate::types::FlywheelIterationProperties {
            flywheel_arn: self.flywheel_arn,
            flywheel_iteration_id: self.flywheel_iteration_id,
            creation_time: self.creation_time,
            end_time: self.end_time,
            status: self.status,
            message: self.message,
            evaluated_model_arn: self.evaluated_model_arn,
            evaluated_model_metrics: self.evaluated_model_metrics,
            trained_model_arn: self.trained_model_arn,
            trained_model_metrics: self.trained_model_metrics,
            evaluation_manifest_s3_prefix: self.evaluation_manifest_s3_prefix,
        }
    }
}
