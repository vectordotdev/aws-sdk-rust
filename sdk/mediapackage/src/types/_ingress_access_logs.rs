// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Configure ingress access logging.
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IngressAccessLogs {
    /// Customize the log group name.
    pub log_group_name: ::std::option::Option<::std::string::String>,
}
impl IngressAccessLogs {
    /// Customize the log group name.
    pub fn log_group_name(&self) -> ::std::option::Option<&str> {
        self.log_group_name.as_deref()
    }
}
impl IngressAccessLogs {
    /// Creates a new builder-style object to manufacture [`IngressAccessLogs`](crate::types::IngressAccessLogs).
    pub fn builder() -> crate::types::builders::IngressAccessLogsBuilder {
        crate::types::builders::IngressAccessLogsBuilder::default()
    }
}

/// A builder for [`IngressAccessLogs`](crate::types::IngressAccessLogs).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IngressAccessLogsBuilder {
    pub(crate) log_group_name: ::std::option::Option<::std::string::String>,
}
impl IngressAccessLogsBuilder {
    /// Customize the log group name.
    pub fn log_group_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.log_group_name = ::std::option::Option::Some(input.into());
        self
    }
    /// Customize the log group name.
    pub fn set_log_group_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.log_group_name = input;
        self
    }
    /// Customize the log group name.
    pub fn get_log_group_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.log_group_name
    }
    /// Consumes the builder and constructs a [`IngressAccessLogs`](crate::types::IngressAccessLogs).
    pub fn build(self) -> crate::types::IngressAccessLogs {
        crate::types::IngressAccessLogs {
            log_group_name: self.log_group_name,
        }
    }
}
