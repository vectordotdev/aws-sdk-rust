// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the data source from which the test set is generated.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TestSetGenerationDataSource {
    /// <p>Contains information about the bot from which the conversation logs are sourced.</p>
    pub conversation_logs_data_source: ::std::option::Option<crate::types::ConversationLogsDataSource>,
}
impl TestSetGenerationDataSource {
    /// <p>Contains information about the bot from which the conversation logs are sourced.</p>
    pub fn conversation_logs_data_source(&self) -> ::std::option::Option<&crate::types::ConversationLogsDataSource> {
        self.conversation_logs_data_source.as_ref()
    }
}
impl TestSetGenerationDataSource {
    /// Creates a new builder-style object to manufacture [`TestSetGenerationDataSource`](crate::types::TestSetGenerationDataSource).
    pub fn builder() -> crate::types::builders::TestSetGenerationDataSourceBuilder {
        crate::types::builders::TestSetGenerationDataSourceBuilder::default()
    }
}

/// A builder for [`TestSetGenerationDataSource`](crate::types::TestSetGenerationDataSource).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TestSetGenerationDataSourceBuilder {
    pub(crate) conversation_logs_data_source: ::std::option::Option<crate::types::ConversationLogsDataSource>,
}
impl TestSetGenerationDataSourceBuilder {
    /// <p>Contains information about the bot from which the conversation logs are sourced.</p>
    pub fn conversation_logs_data_source(mut self, input: crate::types::ConversationLogsDataSource) -> Self {
        self.conversation_logs_data_source = ::std::option::Option::Some(input);
        self
    }
    /// <p>Contains information about the bot from which the conversation logs are sourced.</p>
    pub fn set_conversation_logs_data_source(mut self, input: ::std::option::Option<crate::types::ConversationLogsDataSource>) -> Self {
        self.conversation_logs_data_source = input;
        self
    }
    /// <p>Contains information about the bot from which the conversation logs are sourced.</p>
    pub fn get_conversation_logs_data_source(&self) -> &::std::option::Option<crate::types::ConversationLogsDataSource> {
        &self.conversation_logs_data_source
    }
    /// Consumes the builder and constructs a [`TestSetGenerationDataSource`](crate::types::TestSetGenerationDataSource).
    pub fn build(self) -> crate::types::TestSetGenerationDataSource {
        crate::types::TestSetGenerationDataSource {
            conversation_logs_data_source: self.conversation_logs_data_source,
        }
    }
}
