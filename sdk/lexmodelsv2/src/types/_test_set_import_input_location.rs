// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the Amazon S3 location from which the test set is imported.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TestSetImportInputLocation {
    /// <p>The name of the Amazon S3 bucket.</p>
    pub s3_bucket_name: ::std::option::Option<::std::string::String>,
    /// <p>The path inside the Amazon S3 bucket pointing to the test-set CSV file.</p>
    pub s3_path: ::std::option::Option<::std::string::String>,
}
impl TestSetImportInputLocation {
    /// <p>The name of the Amazon S3 bucket.</p>
    pub fn s3_bucket_name(&self) -> ::std::option::Option<&str> {
        self.s3_bucket_name.as_deref()
    }
    /// <p>The path inside the Amazon S3 bucket pointing to the test-set CSV file.</p>
    pub fn s3_path(&self) -> ::std::option::Option<&str> {
        self.s3_path.as_deref()
    }
}
impl TestSetImportInputLocation {
    /// Creates a new builder-style object to manufacture [`TestSetImportInputLocation`](crate::types::TestSetImportInputLocation).
    pub fn builder() -> crate::types::builders::TestSetImportInputLocationBuilder {
        crate::types::builders::TestSetImportInputLocationBuilder::default()
    }
}

/// A builder for [`TestSetImportInputLocation`](crate::types::TestSetImportInputLocation).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TestSetImportInputLocationBuilder {
    pub(crate) s3_bucket_name: ::std::option::Option<::std::string::String>,
    pub(crate) s3_path: ::std::option::Option<::std::string::String>,
}
impl TestSetImportInputLocationBuilder {
    /// <p>The name of the Amazon S3 bucket.</p>
    pub fn s3_bucket_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_bucket_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the Amazon S3 bucket.</p>
    pub fn set_s3_bucket_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_bucket_name = input;
        self
    }
    /// <p>The name of the Amazon S3 bucket.</p>
    pub fn get_s3_bucket_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_bucket_name
    }
    /// <p>The path inside the Amazon S3 bucket pointing to the test-set CSV file.</p>
    pub fn s3_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.s3_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The path inside the Amazon S3 bucket pointing to the test-set CSV file.</p>
    pub fn set_s3_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.s3_path = input;
        self
    }
    /// <p>The path inside the Amazon S3 bucket pointing to the test-set CSV file.</p>
    pub fn get_s3_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.s3_path
    }
    /// Consumes the builder and constructs a [`TestSetImportInputLocation`](crate::types::TestSetImportInputLocation).
    pub fn build(self) -> crate::types::TestSetImportInputLocation {
        crate::types::TestSetImportInputLocation {
            s3_bucket_name: self.s3_bucket_name,
            s3_path: self.s3_path,
        }
    }
}
