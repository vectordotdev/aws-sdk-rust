// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information about the test set that is exported.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TestSetExportSpecification {
    /// <p>The unique identifier of the test set.</p>
    pub test_set_id: ::std::option::Option<::std::string::String>,
}
impl TestSetExportSpecification {
    /// <p>The unique identifier of the test set.</p>
    pub fn test_set_id(&self) -> ::std::option::Option<&str> {
        self.test_set_id.as_deref()
    }
}
impl TestSetExportSpecification {
    /// Creates a new builder-style object to manufacture [`TestSetExportSpecification`](crate::types::TestSetExportSpecification).
    pub fn builder() -> crate::types::builders::TestSetExportSpecificationBuilder {
        crate::types::builders::TestSetExportSpecificationBuilder::default()
    }
}

/// A builder for [`TestSetExportSpecification`](crate::types::TestSetExportSpecification).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TestSetExportSpecificationBuilder {
    pub(crate) test_set_id: ::std::option::Option<::std::string::String>,
}
impl TestSetExportSpecificationBuilder {
    /// <p>The unique identifier of the test set.</p>
    pub fn test_set_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.test_set_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The unique identifier of the test set.</p>
    pub fn set_test_set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.test_set_id = input;
        self
    }
    /// <p>The unique identifier of the test set.</p>
    pub fn get_test_set_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.test_set_id
    }
    /// Consumes the builder and constructs a [`TestSetExportSpecification`](crate::types::TestSetExportSpecification).
    pub fn build(self) -> crate::types::TestSetExportSpecification {
        crate::types::TestSetExportSpecification {
            test_set_id: self.test_set_id,
        }
    }
}
