// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains the category by which to group the intent stages.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AnalyticsIntentStageGroupBySpecification {
    /// <p>Specifies whether to group the intent stages by their name or the intent to which the session was switched.</p>
    pub name: ::std::option::Option<crate::types::AnalyticsIntentStageField>,
}
impl AnalyticsIntentStageGroupBySpecification {
    /// <p>Specifies whether to group the intent stages by their name or the intent to which the session was switched.</p>
    pub fn name(&self) -> ::std::option::Option<&crate::types::AnalyticsIntentStageField> {
        self.name.as_ref()
    }
}
impl AnalyticsIntentStageGroupBySpecification {
    /// Creates a new builder-style object to manufacture [`AnalyticsIntentStageGroupBySpecification`](crate::types::AnalyticsIntentStageGroupBySpecification).
    pub fn builder() -> crate::types::builders::AnalyticsIntentStageGroupBySpecificationBuilder {
        crate::types::builders::AnalyticsIntentStageGroupBySpecificationBuilder::default()
    }
}

/// A builder for [`AnalyticsIntentStageGroupBySpecification`](crate::types::AnalyticsIntentStageGroupBySpecification).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AnalyticsIntentStageGroupBySpecificationBuilder {
    pub(crate) name: ::std::option::Option<crate::types::AnalyticsIntentStageField>,
}
impl AnalyticsIntentStageGroupBySpecificationBuilder {
    /// <p>Specifies whether to group the intent stages by their name or the intent to which the session was switched.</p>
    pub fn name(mut self, input: crate::types::AnalyticsIntentStageField) -> Self {
        self.name = ::std::option::Option::Some(input);
        self
    }
    /// <p>Specifies whether to group the intent stages by their name or the intent to which the session was switched.</p>
    pub fn set_name(mut self, input: ::std::option::Option<crate::types::AnalyticsIntentStageField>) -> Self {
        self.name = input;
        self
    }
    /// <p>Specifies whether to group the intent stages by their name or the intent to which the session was switched.</p>
    pub fn get_name(&self) -> &::std::option::Option<crate::types::AnalyticsIntentStageField> {
        &self.name
    }
    /// Consumes the builder and constructs a [`AnalyticsIntentStageGroupBySpecification`](crate::types::AnalyticsIntentStageGroupBySpecification).
    pub fn build(self) -> crate::types::AnalyticsIntentStageGroupBySpecification {
        crate::types::AnalyticsIntentStageGroupBySpecification { name: self.name }
    }
}
