// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object containing the intent that the bot mapped the utterance to.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AnalyticsUtteranceAttributeResult {
    /// <p>The intent that the bot mapped the utterance to.</p>
    pub last_used_intent: ::std::option::Option<::std::string::String>,
}
impl AnalyticsUtteranceAttributeResult {
    /// <p>The intent that the bot mapped the utterance to.</p>
    pub fn last_used_intent(&self) -> ::std::option::Option<&str> {
        self.last_used_intent.as_deref()
    }
}
impl AnalyticsUtteranceAttributeResult {
    /// Creates a new builder-style object to manufacture [`AnalyticsUtteranceAttributeResult`](crate::types::AnalyticsUtteranceAttributeResult).
    pub fn builder() -> crate::types::builders::AnalyticsUtteranceAttributeResultBuilder {
        crate::types::builders::AnalyticsUtteranceAttributeResultBuilder::default()
    }
}

/// A builder for [`AnalyticsUtteranceAttributeResult`](crate::types::AnalyticsUtteranceAttributeResult).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AnalyticsUtteranceAttributeResultBuilder {
    pub(crate) last_used_intent: ::std::option::Option<::std::string::String>,
}
impl AnalyticsUtteranceAttributeResultBuilder {
    /// <p>The intent that the bot mapped the utterance to.</p>
    pub fn last_used_intent(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.last_used_intent = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The intent that the bot mapped the utterance to.</p>
    pub fn set_last_used_intent(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.last_used_intent = input;
        self
    }
    /// <p>The intent that the bot mapped the utterance to.</p>
    pub fn get_last_used_intent(&self) -> &::std::option::Option<::std::string::String> {
        &self.last_used_intent
    }
    /// Consumes the builder and constructs a [`AnalyticsUtteranceAttributeResult`](crate::types::AnalyticsUtteranceAttributeResult).
    pub fn build(self) -> crate::types::AnalyticsUtteranceAttributeResult {
        crate::types::AnalyticsUtteranceAttributeResult {
            last_used_intent: self.last_used_intent,
        }
    }
}
