// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ListTestExecutionResultItemsOutput {
    /// <p>The list of results from the test execution.</p>
    pub test_execution_results: ::std::option::Option<crate::types::TestExecutionResultItems>,
    /// <p>A token that indicates whether there are more results to return in a response to the <code>ListTestExecutionResultItems</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListTestExecutionResultItems</code> operation request to get the next page of results.</p>
    pub next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListTestExecutionResultItemsOutput {
    /// <p>The list of results from the test execution.</p>
    pub fn test_execution_results(&self) -> ::std::option::Option<&crate::types::TestExecutionResultItems> {
        self.test_execution_results.as_ref()
    }
    /// <p>A token that indicates whether there are more results to return in a response to the <code>ListTestExecutionResultItems</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListTestExecutionResultItems</code> operation request to get the next page of results.</p>
    pub fn next_token(&self) -> ::std::option::Option<&str> {
        self.next_token.as_deref()
    }
}
impl ::aws_http::request_id::RequestId for ListTestExecutionResultItemsOutput {
    fn request_id(&self) -> Option<&str> {
        self._request_id.as_deref()
    }
}
impl ListTestExecutionResultItemsOutput {
    /// Creates a new builder-style object to manufacture [`ListTestExecutionResultItemsOutput`](crate::operation::list_test_execution_result_items::ListTestExecutionResultItemsOutput).
    pub fn builder() -> crate::operation::list_test_execution_result_items::builders::ListTestExecutionResultItemsOutputBuilder {
        crate::operation::list_test_execution_result_items::builders::ListTestExecutionResultItemsOutputBuilder::default()
    }
}

/// A builder for [`ListTestExecutionResultItemsOutput`](crate::operation::list_test_execution_result_items::ListTestExecutionResultItemsOutput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ListTestExecutionResultItemsOutputBuilder {
    pub(crate) test_execution_results: ::std::option::Option<crate::types::TestExecutionResultItems>,
    pub(crate) next_token: ::std::option::Option<::std::string::String>,
    _request_id: Option<String>,
}
impl ListTestExecutionResultItemsOutputBuilder {
    /// <p>The list of results from the test execution.</p>
    pub fn test_execution_results(mut self, input: crate::types::TestExecutionResultItems) -> Self {
        self.test_execution_results = ::std::option::Option::Some(input);
        self
    }
    /// <p>The list of results from the test execution.</p>
    pub fn set_test_execution_results(mut self, input: ::std::option::Option<crate::types::TestExecutionResultItems>) -> Self {
        self.test_execution_results = input;
        self
    }
    /// <p>The list of results from the test execution.</p>
    pub fn get_test_execution_results(&self) -> &::std::option::Option<crate::types::TestExecutionResultItems> {
        &self.test_execution_results
    }
    /// <p>A token that indicates whether there are more results to return in a response to the <code>ListTestExecutionResultItems</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListTestExecutionResultItems</code> operation request to get the next page of results.</p>
    pub fn next_token(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.next_token = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A token that indicates whether there are more results to return in a response to the <code>ListTestExecutionResultItems</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListTestExecutionResultItems</code> operation request to get the next page of results.</p>
    pub fn set_next_token(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.next_token = input;
        self
    }
    /// <p>A token that indicates whether there are more results to return in a response to the <code>ListTestExecutionResultItems</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListTestExecutionResultItems</code> operation request to get the next page of results.</p>
    pub fn get_next_token(&self) -> &::std::option::Option<::std::string::String> {
        &self.next_token
    }
    pub(crate) fn _request_id(mut self, request_id: impl Into<String>) -> Self {
        self._request_id = Some(request_id.into());
        self
    }

    pub(crate) fn _set_request_id(&mut self, request_id: Option<String>) -> &mut Self {
        self._request_id = request_id;
        self
    }
    /// Consumes the builder and constructs a [`ListTestExecutionResultItemsOutput`](crate::operation::list_test_execution_result_items::ListTestExecutionResultItemsOutput).
    pub fn build(self) -> crate::operation::list_test_execution_result_items::ListTestExecutionResultItemsOutput {
        crate::operation::list_test_execution_result_items::ListTestExecutionResultItemsOutput {
            test_execution_results: self.test_execution_results,
            next_token: self.next_token,
            _request_id: self._request_id,
        }
    }
}
