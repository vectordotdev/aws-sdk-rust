// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`UpdateLocationAzureBlob`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`location_arn(impl ::std::convert::Into<String>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::location_arn) / [`set_location_arn(Option<String>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::set_location_arn): <p>Specifies the ARN of the Azure Blob Storage transfer location that you're updating.</p>
    ///   - [`subdirectory(impl ::std::convert::Into<String>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::subdirectory) / [`set_subdirectory(Option<String>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::set_subdirectory): <p>Specifies path segments if you want to limit your transfer to a virtual directory in your container (for example, <code>/my/images</code>).</p>
    ///   - [`authentication_type(AzureBlobAuthenticationType)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::authentication_type) / [`set_authentication_type(Option<AzureBlobAuthenticationType>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::set_authentication_type): <p>Specifies the authentication method DataSync uses to access your Azure Blob Storage. DataSync can access blob storage using a shared access signature (SAS).</p>
    ///   - [`sas_configuration(AzureBlobSasConfiguration)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::sas_configuration) / [`set_sas_configuration(Option<AzureBlobSasConfiguration>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::set_sas_configuration): <p>Specifies the SAS configuration that allows DataSync to access your Azure Blob Storage.</p>
    ///   - [`blob_type(AzureBlobType)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::blob_type) / [`set_blob_type(Option<AzureBlobType>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::set_blob_type): <p>Specifies the type of blob that you want your objects or files to be when transferring them into Azure Blob Storage. Currently, DataSync only supports moving data into Azure Blob Storage as block blobs. For more information on blob types, see the <a href="https://learn.microsoft.com/en-us/rest/api/storageservices/understanding-block-blobs--append-blobs--and-page-blobs">Azure Blob Storage documentation</a>.</p>
    ///   - [`access_tier(AzureAccessTier)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::access_tier) / [`set_access_tier(Option<AzureAccessTier>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::set_access_tier): <p>Specifies the access tier that you want your objects or files transferred into. This only applies when using the location as a transfer destination. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/creating-azure-blob-location.html#azure-blob-access-tiers">Access tiers</a>.</p>
    ///   - [`agent_arns(Vec<String>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::agent_arns) / [`set_agent_arns(Option<Vec<String>>)`](crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::set_agent_arns): <p>Specifies the Amazon Resource Name (ARN) of the DataSync agent that can connect with your Azure Blob Storage container.</p>  <p>You can specify more than one agent. For more information, see <a href="https://docs.aws.amazon.com/datasync/latest/userguide/multiple-agents.html">Using multiple agents for your transfer</a>.</p>
    /// - On success, responds with [`UpdateLocationAzureBlobOutput`](crate::operation::update_location_azure_blob::UpdateLocationAzureBlobOutput)
    /// - On failure, responds with [`SdkError<UpdateLocationAzureBlobError>`](crate::operation::update_location_azure_blob::UpdateLocationAzureBlobError)
    pub fn update_location_azure_blob(&self) -> crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder {
        crate::operation::update_location_azure_blob::builders::UpdateLocationAzureBlobFluentBuilder::new(self.handle.clone())
    }
}
