// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[allow(missing_docs)] // documentation missing in model
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AssociateProfilesInput {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub workload_id: ::std::option::Option<::std::string::String>,
    /// <p>The list of profile ARNs to associate with the workload.</p>
    pub profile_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl AssociateProfilesInput {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn workload_id(&self) -> ::std::option::Option<&str> {
        self.workload_id.as_deref()
    }
    /// <p>The list of profile ARNs to associate with the workload.</p>
    pub fn profile_arns(&self) -> ::std::option::Option<&[::std::string::String]> {
        self.profile_arns.as_deref()
    }
}
impl AssociateProfilesInput {
    /// Creates a new builder-style object to manufacture [`AssociateProfilesInput`](crate::operation::associate_profiles::AssociateProfilesInput).
    pub fn builder() -> crate::operation::associate_profiles::builders::AssociateProfilesInputBuilder {
        crate::operation::associate_profiles::builders::AssociateProfilesInputBuilder::default()
    }
}

/// A builder for [`AssociateProfilesInput`](crate::operation::associate_profiles::AssociateProfilesInput).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AssociateProfilesInputBuilder {
    pub(crate) workload_id: ::std::option::Option<::std::string::String>,
    pub(crate) profile_arns: ::std::option::Option<::std::vec::Vec<::std::string::String>>,
}
impl AssociateProfilesInputBuilder {
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn workload_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workload_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn set_workload_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workload_id = input;
        self
    }
    /// <p>The ID assigned to the workload. This ID is unique within an Amazon Web Services Region.</p>
    pub fn get_workload_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.workload_id
    }
    /// Appends an item to `profile_arns`.
    ///
    /// To override the contents of this collection use [`set_profile_arns`](Self::set_profile_arns).
    ///
    /// <p>The list of profile ARNs to associate with the workload.</p>
    pub fn profile_arns(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        let mut v = self.profile_arns.unwrap_or_default();
        v.push(input.into());
        self.profile_arns = ::std::option::Option::Some(v);
        self
    }
    /// <p>The list of profile ARNs to associate with the workload.</p>
    pub fn set_profile_arns(mut self, input: ::std::option::Option<::std::vec::Vec<::std::string::String>>) -> Self {
        self.profile_arns = input;
        self
    }
    /// <p>The list of profile ARNs to associate with the workload.</p>
    pub fn get_profile_arns(&self) -> &::std::option::Option<::std::vec::Vec<::std::string::String>> {
        &self.profile_arns
    }
    /// Consumes the builder and constructs a [`AssociateProfilesInput`](crate::operation::associate_profiles::AssociateProfilesInput).
    pub fn build(
        self,
    ) -> ::std::result::Result<crate::operation::associate_profiles::AssociateProfilesInput, ::aws_smithy_http::operation::error::BuildError> {
        ::std::result::Result::Ok(crate::operation::associate_profiles::AssociateProfilesInput {
            workload_id: self.workload_id,
            profile_arns: self.profile_arns,
        })
    }
}
