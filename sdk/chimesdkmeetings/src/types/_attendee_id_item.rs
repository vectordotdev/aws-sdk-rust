// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A structure that contains one or more attendee IDs.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct AttendeeIdItem {
    /// <p>A list of one or more attendee IDs.</p>
    pub attendee_id: ::std::option::Option<::std::string::String>,
}
impl AttendeeIdItem {
    /// <p>A list of one or more attendee IDs.</p>
    pub fn attendee_id(&self) -> ::std::option::Option<&str> {
        self.attendee_id.as_deref()
    }
}
impl AttendeeIdItem {
    /// Creates a new builder-style object to manufacture [`AttendeeIdItem`](crate::types::AttendeeIdItem).
    pub fn builder() -> crate::types::builders::AttendeeIdItemBuilder {
        crate::types::builders::AttendeeIdItemBuilder::default()
    }
}

/// A builder for [`AttendeeIdItem`](crate::types::AttendeeIdItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct AttendeeIdItemBuilder {
    pub(crate) attendee_id: ::std::option::Option<::std::string::String>,
}
impl AttendeeIdItemBuilder {
    /// <p>A list of one or more attendee IDs.</p>
    pub fn attendee_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.attendee_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A list of one or more attendee IDs.</p>
    pub fn set_attendee_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.attendee_id = input;
        self
    }
    /// <p>A list of one or more attendee IDs.</p>
    pub fn get_attendee_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.attendee_id
    }
    /// Consumes the builder and constructs a [`AttendeeIdItem`](crate::types::AttendeeIdItem).
    pub fn build(self) -> crate::types::AttendeeIdItem {
        crate::types::AttendeeIdItem {
            attendee_id: self.attendee_id,
        }
    }
}
