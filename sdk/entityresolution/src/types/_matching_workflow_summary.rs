// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A list of <code>MatchingWorkflowSummary</code> objects, each of which contain the fields <code>WorkflowName</code>, <code>WorkflowArn</code>, <code>CreatedAt</code>, <code>UpdatedAt</code>.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct MatchingWorkflowSummary {
    /// <p>The name of the workflow.</p>
    pub workflow_name: ::std::option::Option<::std::string::String>,
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>MatchingWorkflow</code>.</p>
    pub workflow_arn: ::std::option::Option<::std::string::String>,
    /// <p>The timestamp of when the workflow was created.</p>
    pub created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MatchingWorkflowSummary {
    /// <p>The name of the workflow.</p>
    pub fn workflow_name(&self) -> ::std::option::Option<&str> {
        self.workflow_name.as_deref()
    }
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>MatchingWorkflow</code>.</p>
    pub fn workflow_arn(&self) -> ::std::option::Option<&str> {
        self.workflow_arn.as_deref()
    }
    /// <p>The timestamp of when the workflow was created.</p>
    pub fn created_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_at.as_ref()
    }
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub fn updated_at(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.updated_at.as_ref()
    }
}
impl MatchingWorkflowSummary {
    /// Creates a new builder-style object to manufacture [`MatchingWorkflowSummary`](crate::types::MatchingWorkflowSummary).
    pub fn builder() -> crate::types::builders::MatchingWorkflowSummaryBuilder {
        crate::types::builders::MatchingWorkflowSummaryBuilder::default()
    }
}

/// A builder for [`MatchingWorkflowSummary`](crate::types::MatchingWorkflowSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct MatchingWorkflowSummaryBuilder {
    pub(crate) workflow_name: ::std::option::Option<::std::string::String>,
    pub(crate) workflow_arn: ::std::option::Option<::std::string::String>,
    pub(crate) created_at: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) updated_at: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl MatchingWorkflowSummaryBuilder {
    /// <p>The name of the workflow.</p>
    pub fn workflow_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workflow_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the workflow.</p>
    pub fn set_workflow_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workflow_name = input;
        self
    }
    /// <p>The name of the workflow.</p>
    pub fn get_workflow_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.workflow_name
    }
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>MatchingWorkflow</code>.</p>
    pub fn workflow_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.workflow_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>MatchingWorkflow</code>.</p>
    pub fn set_workflow_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.workflow_arn = input;
        self
    }
    /// <p>The ARN (Amazon Resource Name) that Entity Resolution generated for the <code>MatchingWorkflow</code>.</p>
    pub fn get_workflow_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.workflow_arn
    }
    /// <p>The timestamp of when the workflow was created.</p>
    pub fn created_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the workflow was created.</p>
    pub fn set_created_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_at = input;
        self
    }
    /// <p>The timestamp of when the workflow was created.</p>
    pub fn get_created_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_at
    }
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub fn updated_at(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.updated_at = ::std::option::Option::Some(input);
        self
    }
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub fn set_updated_at(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.updated_at = input;
        self
    }
    /// <p>The timestamp of when the workflow was last updated.</p>
    pub fn get_updated_at(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.updated_at
    }
    /// Consumes the builder and constructs a [`MatchingWorkflowSummary`](crate::types::MatchingWorkflowSummary).
    pub fn build(self) -> crate::types::MatchingWorkflowSummary {
        crate::types::MatchingWorkflowSummary {
            workflow_name: self.workflow_name,
            workflow_arn: self.workflow_arn,
            created_at: self.created_at,
            updated_at: self.updated_at,
        }
    }
}
