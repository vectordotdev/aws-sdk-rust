// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An object which defines an incremental run type and has only <code>incrementalRunType</code> as a field.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct IncrementalRunConfig {
    /// <p>The type of incremental run. It takes only one value: <code>IMMEDIATE</code>.</p>
    pub incremental_run_type: ::std::option::Option<crate::types::IncrementalRunType>,
}
impl IncrementalRunConfig {
    /// <p>The type of incremental run. It takes only one value: <code>IMMEDIATE</code>.</p>
    pub fn incremental_run_type(&self) -> ::std::option::Option<&crate::types::IncrementalRunType> {
        self.incremental_run_type.as_ref()
    }
}
impl IncrementalRunConfig {
    /// Creates a new builder-style object to manufacture [`IncrementalRunConfig`](crate::types::IncrementalRunConfig).
    pub fn builder() -> crate::types::builders::IncrementalRunConfigBuilder {
        crate::types::builders::IncrementalRunConfigBuilder::default()
    }
}

/// A builder for [`IncrementalRunConfig`](crate::types::IncrementalRunConfig).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct IncrementalRunConfigBuilder {
    pub(crate) incremental_run_type: ::std::option::Option<crate::types::IncrementalRunType>,
}
impl IncrementalRunConfigBuilder {
    /// <p>The type of incremental run. It takes only one value: <code>IMMEDIATE</code>.</p>
    pub fn incremental_run_type(mut self, input: crate::types::IncrementalRunType) -> Self {
        self.incremental_run_type = ::std::option::Option::Some(input);
        self
    }
    /// <p>The type of incremental run. It takes only one value: <code>IMMEDIATE</code>.</p>
    pub fn set_incremental_run_type(mut self, input: ::std::option::Option<crate::types::IncrementalRunType>) -> Self {
        self.incremental_run_type = input;
        self
    }
    /// <p>The type of incremental run. It takes only one value: <code>IMMEDIATE</code>.</p>
    pub fn get_incremental_run_type(&self) -> &::std::option::Option<crate::types::IncrementalRunType> {
        &self.incremental_run_type
    }
    /// Consumes the builder and constructs a [`IncrementalRunConfig`](crate::types::IncrementalRunConfig).
    pub fn build(self) -> crate::types::IncrementalRunConfig {
        crate::types::IncrementalRunConfig {
            incremental_run_type: self.incremental_run_type,
        }
    }
}
