// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>An error or warning for the operation.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct DashboardValidationMessage {
    /// <p>The data path related to the message.</p>
    pub data_path: ::std::option::Option<::std::string::String>,
    /// <p>A message describing the error or warning.</p>
    pub message: ::std::option::Option<::std::string::String>,
}
impl DashboardValidationMessage {
    /// <p>The data path related to the message.</p>
    pub fn data_path(&self) -> ::std::option::Option<&str> {
        self.data_path.as_deref()
    }
    /// <p>A message describing the error or warning.</p>
    pub fn message(&self) -> ::std::option::Option<&str> {
        self.message.as_deref()
    }
}
impl DashboardValidationMessage {
    /// Creates a new builder-style object to manufacture [`DashboardValidationMessage`](crate::types::DashboardValidationMessage).
    pub fn builder() -> crate::types::builders::DashboardValidationMessageBuilder {
        crate::types::builders::DashboardValidationMessageBuilder::default()
    }
}

/// A builder for [`DashboardValidationMessage`](crate::types::DashboardValidationMessage).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct DashboardValidationMessageBuilder {
    pub(crate) data_path: ::std::option::Option<::std::string::String>,
    pub(crate) message: ::std::option::Option<::std::string::String>,
}
impl DashboardValidationMessageBuilder {
    /// <p>The data path related to the message.</p>
    pub fn data_path(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.data_path = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The data path related to the message.</p>
    pub fn set_data_path(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.data_path = input;
        self
    }
    /// <p>The data path related to the message.</p>
    pub fn get_data_path(&self) -> &::std::option::Option<::std::string::String> {
        &self.data_path
    }
    /// <p>A message describing the error or warning.</p>
    pub fn message(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.message = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A message describing the error or warning.</p>
    pub fn set_message(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.message = input;
        self
    }
    /// <p>A message describing the error or warning.</p>
    pub fn get_message(&self) -> &::std::option::Option<::std::string::String> {
        &self.message
    }
    /// Consumes the builder and constructs a [`DashboardValidationMessage`](crate::types::DashboardValidationMessage).
    pub fn build(self) -> crate::types::DashboardValidationMessage {
        crate::types::DashboardValidationMessage {
            data_path: self.data_path,
            message: self.message,
        }
    }
}
