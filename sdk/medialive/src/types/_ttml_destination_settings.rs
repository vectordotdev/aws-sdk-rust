// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Ttml Destination Settings
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct TtmlDestinationSettings {
    /// This field is not currently supported and will not affect the output styling. Leave the default value.
    pub style_control: ::std::option::Option<crate::types::TtmlDestinationStyleControl>,
}
impl TtmlDestinationSettings {
    /// This field is not currently supported and will not affect the output styling. Leave the default value.
    pub fn style_control(&self) -> ::std::option::Option<&crate::types::TtmlDestinationStyleControl> {
        self.style_control.as_ref()
    }
}
impl TtmlDestinationSettings {
    /// Creates a new builder-style object to manufacture [`TtmlDestinationSettings`](crate::types::TtmlDestinationSettings).
    pub fn builder() -> crate::types::builders::TtmlDestinationSettingsBuilder {
        crate::types::builders::TtmlDestinationSettingsBuilder::default()
    }
}

/// A builder for [`TtmlDestinationSettings`](crate::types::TtmlDestinationSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TtmlDestinationSettingsBuilder {
    pub(crate) style_control: ::std::option::Option<crate::types::TtmlDestinationStyleControl>,
}
impl TtmlDestinationSettingsBuilder {
    /// This field is not currently supported and will not affect the output styling. Leave the default value.
    pub fn style_control(mut self, input: crate::types::TtmlDestinationStyleControl) -> Self {
        self.style_control = ::std::option::Option::Some(input);
        self
    }
    /// This field is not currently supported and will not affect the output styling. Leave the default value.
    pub fn set_style_control(mut self, input: ::std::option::Option<crate::types::TtmlDestinationStyleControl>) -> Self {
        self.style_control = input;
        self
    }
    /// This field is not currently supported and will not affect the output styling. Leave the default value.
    pub fn get_style_control(&self) -> &::std::option::Option<crate::types::TtmlDestinationStyleControl> {
        &self.style_control
    }
    /// Consumes the builder and constructs a [`TtmlDestinationSettings`](crate::types::TtmlDestinationSettings).
    pub fn build(self) -> crate::types::TtmlDestinationSettings {
        crate::types::TtmlDestinationSettings {
            style_control: self.style_control,
        }
    }
}
