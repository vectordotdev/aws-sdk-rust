// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// Settings for the action to insert a user-defined ID3 tag in each HLS segment
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct HlsId3SegmentTaggingScheduleActionSettings {
    /// ID3 tag to insert into each segment. Supports special keyword identifiers to substitute in segment-related values.\nSupported keyword identifiers: https://docs.aws.amazon.com/medialive/latest/ug/variable-data-identifiers.html
    pub tag: ::std::option::Option<::std::string::String>,
    /// Base64 string formatted according to the ID3 specification: http://id3.org/id3v2.4.0-structure
    pub id3: ::std::option::Option<::std::string::String>,
}
impl HlsId3SegmentTaggingScheduleActionSettings {
    /// ID3 tag to insert into each segment. Supports special keyword identifiers to substitute in segment-related values.\nSupported keyword identifiers: https://docs.aws.amazon.com/medialive/latest/ug/variable-data-identifiers.html
    pub fn tag(&self) -> ::std::option::Option<&str> {
        self.tag.as_deref()
    }
    /// Base64 string formatted according to the ID3 specification: http://id3.org/id3v2.4.0-structure
    pub fn id3(&self) -> ::std::option::Option<&str> {
        self.id3.as_deref()
    }
}
impl HlsId3SegmentTaggingScheduleActionSettings {
    /// Creates a new builder-style object to manufacture [`HlsId3SegmentTaggingScheduleActionSettings`](crate::types::HlsId3SegmentTaggingScheduleActionSettings).
    pub fn builder() -> crate::types::builders::HlsId3SegmentTaggingScheduleActionSettingsBuilder {
        crate::types::builders::HlsId3SegmentTaggingScheduleActionSettingsBuilder::default()
    }
}

/// A builder for [`HlsId3SegmentTaggingScheduleActionSettings`](crate::types::HlsId3SegmentTaggingScheduleActionSettings).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct HlsId3SegmentTaggingScheduleActionSettingsBuilder {
    pub(crate) tag: ::std::option::Option<::std::string::String>,
    pub(crate) id3: ::std::option::Option<::std::string::String>,
}
impl HlsId3SegmentTaggingScheduleActionSettingsBuilder {
    /// ID3 tag to insert into each segment. Supports special keyword identifiers to substitute in segment-related values.\nSupported keyword identifiers: https://docs.aws.amazon.com/medialive/latest/ug/variable-data-identifiers.html
    pub fn tag(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.tag = ::std::option::Option::Some(input.into());
        self
    }
    /// ID3 tag to insert into each segment. Supports special keyword identifiers to substitute in segment-related values.\nSupported keyword identifiers: https://docs.aws.amazon.com/medialive/latest/ug/variable-data-identifiers.html
    pub fn set_tag(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.tag = input;
        self
    }
    /// ID3 tag to insert into each segment. Supports special keyword identifiers to substitute in segment-related values.\nSupported keyword identifiers: https://docs.aws.amazon.com/medialive/latest/ug/variable-data-identifiers.html
    pub fn get_tag(&self) -> &::std::option::Option<::std::string::String> {
        &self.tag
    }
    /// Base64 string formatted according to the ID3 specification: http://id3.org/id3v2.4.0-structure
    pub fn id3(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id3 = ::std::option::Option::Some(input.into());
        self
    }
    /// Base64 string formatted according to the ID3 specification: http://id3.org/id3v2.4.0-structure
    pub fn set_id3(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id3 = input;
        self
    }
    /// Base64 string formatted according to the ID3 specification: http://id3.org/id3v2.4.0-structure
    pub fn get_id3(&self) -> &::std::option::Option<::std::string::String> {
        &self.id3
    }
    /// Consumes the builder and constructs a [`HlsId3SegmentTaggingScheduleActionSettings`](crate::types::HlsId3SegmentTaggingScheduleActionSettings).
    pub fn build(self) -> crate::types::HlsId3SegmentTaggingScheduleActionSettings {
        crate::types::HlsId3SegmentTaggingScheduleActionSettings {
            tag: self.tag,
            id3: self.id3,
        }
    }
}
