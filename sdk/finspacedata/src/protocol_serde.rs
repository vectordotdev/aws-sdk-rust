// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_associate_user_to_permission_group;

pub(crate) mod shape_create_changeset;

pub(crate) mod shape_create_data_view;

pub(crate) mod shape_create_dataset;

pub(crate) mod shape_create_permission_group;

pub(crate) mod shape_create_user;

pub(crate) mod shape_delete_dataset;

pub(crate) mod shape_delete_permission_group;

pub(crate) mod shape_disable_user;

pub(crate) mod shape_disassociate_user_from_permission_group;

pub(crate) mod shape_enable_user;

pub(crate) mod shape_get_changeset;

pub(crate) mod shape_get_data_view;

pub(crate) mod shape_get_dataset;

pub(crate) mod shape_get_external_data_view_access_details;

pub(crate) mod shape_get_permission_group;

pub(crate) mod shape_get_programmatic_access_credentials;

pub(crate) mod shape_get_user;

pub(crate) mod shape_get_working_location;

pub(crate) mod shape_list_changesets;

pub(crate) mod shape_list_data_views;

pub(crate) mod shape_list_datasets;

pub(crate) mod shape_list_permission_groups;

pub(crate) mod shape_list_permission_groups_by_user;

pub(crate) mod shape_list_users;

pub(crate) mod shape_list_users_by_permission_group;

pub(crate) mod shape_reset_user_password;

pub(crate) mod shape_update_changeset;

pub(crate) mod shape_update_dataset;

pub(crate) mod shape_update_permission_group;

pub(crate) mod shape_update_user;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_associate_user_to_permission_group_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_changeset_input;

pub(crate) mod shape_create_data_view_input;

pub(crate) mod shape_create_dataset_input;

pub(crate) mod shape_create_permission_group_input;

pub(crate) mod shape_create_user_input;

pub(crate) mod shape_disable_user_input;

pub(crate) mod shape_enable_user_input;

pub(crate) mod shape_get_working_location_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_limit_exceeded_exception;

pub(crate) mod shape_reset_user_password_input;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_changeset_input;

pub(crate) mod shape_update_dataset_input;

pub(crate) mod shape_update_permission_group_input;

pub(crate) mod shape_update_user_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_aws_credentials;

pub(crate) mod shape_changeset_error_info;

pub(crate) mod shape_changeset_list;

pub(crate) mod shape_credentials;

pub(crate) mod shape_data_view_destination_type_params;

pub(crate) mod shape_data_view_error_info;

pub(crate) mod shape_data_view_list;

pub(crate) mod shape_dataset_list;

pub(crate) mod shape_dataset_owner_info;

pub(crate) mod shape_format_params;

pub(crate) mod shape_partition_column_list;

pub(crate) mod shape_permission_group;

pub(crate) mod shape_permission_group_by_user_list;

pub(crate) mod shape_permission_group_list;

pub(crate) mod shape_permission_group_params;

pub(crate) mod shape_s3_location;

pub(crate) mod shape_schema_union;

pub(crate) mod shape_sort_column_list;

pub(crate) mod shape_source_params;

pub(crate) mod shape_user_by_permission_group_list;

pub(crate) mod shape_user_list;

pub(crate) mod shape_application_permission_list;

pub(crate) mod shape_changeset_summary;

pub(crate) mod shape_data_view_summary;

pub(crate) mod shape_dataset;

pub(crate) mod shape_permission_group_by_user;

pub(crate) mod shape_resource_permission;

pub(crate) mod shape_s3_destination_format_options;

pub(crate) mod shape_schema_definition;

pub(crate) mod shape_user;

pub(crate) mod shape_user_by_permission_group;

pub(crate) mod shape_column_definition;

pub(crate) mod shape_column_list;

pub(crate) mod shape_column_name_list;
