// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The result of a speaker search analysis.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct SpeakerSearchResult {
    /// <p>The confidence score in the speaker search analysis.</p>
    pub confidence_score: f32,
    /// <p>The voice profile ID.</p>
    pub voice_profile_id: ::std::option::Option<::std::string::String>,
}
impl SpeakerSearchResult {
    /// <p>The confidence score in the speaker search analysis.</p>
    pub fn confidence_score(&self) -> f32 {
        self.confidence_score
    }
    /// <p>The voice profile ID.</p>
    pub fn voice_profile_id(&self) -> ::std::option::Option<&str> {
        self.voice_profile_id.as_deref()
    }
}
impl SpeakerSearchResult {
    /// Creates a new builder-style object to manufacture [`SpeakerSearchResult`](crate::types::SpeakerSearchResult).
    pub fn builder() -> crate::types::builders::SpeakerSearchResultBuilder {
        crate::types::builders::SpeakerSearchResultBuilder::default()
    }
}

/// A builder for [`SpeakerSearchResult`](crate::types::SpeakerSearchResult).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct SpeakerSearchResultBuilder {
    pub(crate) confidence_score: ::std::option::Option<f32>,
    pub(crate) voice_profile_id: ::std::option::Option<::std::string::String>,
}
impl SpeakerSearchResultBuilder {
    /// <p>The confidence score in the speaker search analysis.</p>
    pub fn confidence_score(mut self, input: f32) -> Self {
        self.confidence_score = ::std::option::Option::Some(input);
        self
    }
    /// <p>The confidence score in the speaker search analysis.</p>
    pub fn set_confidence_score(mut self, input: ::std::option::Option<f32>) -> Self {
        self.confidence_score = input;
        self
    }
    /// <p>The confidence score in the speaker search analysis.</p>
    pub fn get_confidence_score(&self) -> &::std::option::Option<f32> {
        &self.confidence_score
    }
    /// <p>The voice profile ID.</p>
    pub fn voice_profile_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.voice_profile_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The voice profile ID.</p>
    pub fn set_voice_profile_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.voice_profile_id = input;
        self
    }
    /// <p>The voice profile ID.</p>
    pub fn get_voice_profile_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.voice_profile_id
    }
    /// Consumes the builder and constructs a [`SpeakerSearchResult`](crate::types::SpeakerSearchResult).
    pub fn build(self) -> crate::types::SpeakerSearchResult {
        crate::types::SpeakerSearchResult {
            confidence_score: self.confidence_score.unwrap_or_default(),
            voice_profile_id: self.voice_profile_id,
        }
    }
}
