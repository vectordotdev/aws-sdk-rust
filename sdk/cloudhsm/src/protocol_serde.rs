// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_add_tags_to_resource;

pub(crate) mod shape_create_hapg;

pub(crate) mod shape_create_hsm;

pub(crate) mod shape_create_luna_client;

pub(crate) mod shape_delete_hapg;

pub(crate) mod shape_delete_hsm;

pub(crate) mod shape_delete_luna_client;

pub(crate) mod shape_describe_hapg;

pub(crate) mod shape_describe_hsm;

pub(crate) mod shape_describe_luna_client;

pub(crate) mod shape_get_config;

pub(crate) mod shape_list_available_zones;

pub(crate) mod shape_list_hapgs;

pub(crate) mod shape_list_hsms;

pub(crate) mod shape_list_luna_clients;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_modify_hapg;

pub(crate) mod shape_modify_hsm;

pub(crate) mod shape_modify_luna_client;

pub(crate) mod shape_remove_tags_from_resource;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_add_tags_to_resource_input;

pub(crate) mod shape_cloud_hsm_internal_exception;

pub(crate) mod shape_cloud_hsm_service_exception;

pub(crate) mod shape_create_hapg_input;

pub(crate) mod shape_create_hsm_input;

pub(crate) mod shape_create_luna_client_input;

pub(crate) mod shape_delete_hapg_input;

pub(crate) mod shape_delete_hsm_input;

pub(crate) mod shape_delete_luna_client_input;

pub(crate) mod shape_describe_hapg_input;

pub(crate) mod shape_describe_hsm_input;

pub(crate) mod shape_describe_luna_client_input;

pub(crate) mod shape_get_config_input;

pub(crate) mod shape_invalid_request_exception;

pub(crate) mod shape_list_hapgs_input;

pub(crate) mod shape_list_hsms_input;

pub(crate) mod shape_list_luna_clients_input;

pub(crate) mod shape_list_tags_for_resource_input;

pub(crate) mod shape_modify_hapg_input;

pub(crate) mod shape_modify_hsm_input;

pub(crate) mod shape_modify_luna_client_input;

pub(crate) mod shape_remove_tags_from_resource_input;

pub(crate) mod shape_az_list;

pub(crate) mod shape_client_list;

pub(crate) mod shape_hapg_list;

pub(crate) mod shape_hsm_list;

pub(crate) mod shape_partition_list;

pub(crate) mod shape_partition_serial_list;

pub(crate) mod shape_tag;

pub(crate) mod shape_tag_list;
