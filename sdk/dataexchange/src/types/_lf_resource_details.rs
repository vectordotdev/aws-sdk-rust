// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the AWS Lake Formation resource (Table or Database) included in the AWS Lake Formation data permission.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LfResourceDetails {
    /// <p>Details about the database resource included in the AWS Lake Formation data permission.</p>
    pub database: ::std::option::Option<crate::types::DatabaseLfTagPolicy>,
    /// <p>Details about the table resource included in the AWS Lake Formation data permission.</p>
    pub table: ::std::option::Option<crate::types::TableLfTagPolicy>,
}
impl LfResourceDetails {
    /// <p>Details about the database resource included in the AWS Lake Formation data permission.</p>
    pub fn database(&self) -> ::std::option::Option<&crate::types::DatabaseLfTagPolicy> {
        self.database.as_ref()
    }
    /// <p>Details about the table resource included in the AWS Lake Formation data permission.</p>
    pub fn table(&self) -> ::std::option::Option<&crate::types::TableLfTagPolicy> {
        self.table.as_ref()
    }
}
impl LfResourceDetails {
    /// Creates a new builder-style object to manufacture [`LfResourceDetails`](crate::types::LfResourceDetails).
    pub fn builder() -> crate::types::builders::LfResourceDetailsBuilder {
        crate::types::builders::LfResourceDetailsBuilder::default()
    }
}

/// A builder for [`LfResourceDetails`](crate::types::LfResourceDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LfResourceDetailsBuilder {
    pub(crate) database: ::std::option::Option<crate::types::DatabaseLfTagPolicy>,
    pub(crate) table: ::std::option::Option<crate::types::TableLfTagPolicy>,
}
impl LfResourceDetailsBuilder {
    /// <p>Details about the database resource included in the AWS Lake Formation data permission.</p>
    pub fn database(mut self, input: crate::types::DatabaseLfTagPolicy) -> Self {
        self.database = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about the database resource included in the AWS Lake Formation data permission.</p>
    pub fn set_database(mut self, input: ::std::option::Option<crate::types::DatabaseLfTagPolicy>) -> Self {
        self.database = input;
        self
    }
    /// <p>Details about the database resource included in the AWS Lake Formation data permission.</p>
    pub fn get_database(&self) -> &::std::option::Option<crate::types::DatabaseLfTagPolicy> {
        &self.database
    }
    /// <p>Details about the table resource included in the AWS Lake Formation data permission.</p>
    pub fn table(mut self, input: crate::types::TableLfTagPolicy) -> Self {
        self.table = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about the table resource included in the AWS Lake Formation data permission.</p>
    pub fn set_table(mut self, input: ::std::option::Option<crate::types::TableLfTagPolicy>) -> Self {
        self.table = input;
        self
    }
    /// <p>Details about the table resource included in the AWS Lake Formation data permission.</p>
    pub fn get_table(&self) -> &::std::option::Option<crate::types::TableLfTagPolicy> {
        &self.table
    }
    /// Consumes the builder and constructs a [`LfResourceDetails`](crate::types::LfResourceDetails).
    pub fn build(self) -> crate::types::LfResourceDetails {
        crate::types::LfResourceDetails {
            database: self.database,
            table: self.table,
        }
    }
}
