// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the origin of the data set.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct OriginDetails {
    /// <p>The product ID of the origin of the data set.</p>
    pub product_id: ::std::option::Option<::std::string::String>,
}
impl OriginDetails {
    /// <p>The product ID of the origin of the data set.</p>
    pub fn product_id(&self) -> ::std::option::Option<&str> {
        self.product_id.as_deref()
    }
}
impl OriginDetails {
    /// Creates a new builder-style object to manufacture [`OriginDetails`](crate::types::OriginDetails).
    pub fn builder() -> crate::types::builders::OriginDetailsBuilder {
        crate::types::builders::OriginDetailsBuilder::default()
    }
}

/// A builder for [`OriginDetails`](crate::types::OriginDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct OriginDetailsBuilder {
    pub(crate) product_id: ::std::option::Option<::std::string::String>,
}
impl OriginDetailsBuilder {
    /// <p>The product ID of the origin of the data set.</p>
    pub fn product_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.product_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The product ID of the origin of the data set.</p>
    pub fn set_product_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.product_id = input;
        self
    }
    /// <p>The product ID of the origin of the data set.</p>
    pub fn get_product_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.product_id
    }
    /// Consumes the builder and constructs a [`OriginDetails`](crate::types::OriginDetails).
    pub fn build(self) -> crate::types::OriginDetails {
        crate::types::OriginDetails { product_id: self.product_id }
    }
}
