// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>A summary of an OpenSearch Ingestion blueprint.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct PipelineBlueprintSummary {
    /// <p>The name of the blueprint.</p>
    pub blueprint_name: ::std::option::Option<::std::string::String>,
}
impl PipelineBlueprintSummary {
    /// <p>The name of the blueprint.</p>
    pub fn blueprint_name(&self) -> ::std::option::Option<&str> {
        self.blueprint_name.as_deref()
    }
}
impl PipelineBlueprintSummary {
    /// Creates a new builder-style object to manufacture [`PipelineBlueprintSummary`](crate::types::PipelineBlueprintSummary).
    pub fn builder() -> crate::types::builders::PipelineBlueprintSummaryBuilder {
        crate::types::builders::PipelineBlueprintSummaryBuilder::default()
    }
}

/// A builder for [`PipelineBlueprintSummary`](crate::types::PipelineBlueprintSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct PipelineBlueprintSummaryBuilder {
    pub(crate) blueprint_name: ::std::option::Option<::std::string::String>,
}
impl PipelineBlueprintSummaryBuilder {
    /// <p>The name of the blueprint.</p>
    pub fn blueprint_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.blueprint_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name of the blueprint.</p>
    pub fn set_blueprint_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.blueprint_name = input;
        self
    }
    /// <p>The name of the blueprint.</p>
    pub fn get_blueprint_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.blueprint_name
    }
    /// Consumes the builder and constructs a [`PipelineBlueprintSummary`](crate::types::PipelineBlueprintSummary).
    pub fn build(self) -> crate::types::PipelineBlueprintSummary {
        crate::types::PipelineBlueprintSummary {
            blueprint_name: self.blueprint_name,
        }
    }
}
