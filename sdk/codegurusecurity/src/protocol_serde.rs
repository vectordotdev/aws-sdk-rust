// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
pub(crate) fn type_erase_result<O, E>(
    result: ::std::result::Result<O, E>,
) -> ::std::result::Result<
    ::aws_smithy_runtime_api::client::interceptors::context::Output,
    ::aws_smithy_runtime_api::client::orchestrator::OrchestratorError<::aws_smithy_runtime_api::client::interceptors::context::Error>,
>
where
    O: ::std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
    E: ::std::error::Error + std::fmt::Debug + ::std::marker::Send + ::std::marker::Sync + 'static,
{
    result
        .map(|output| ::aws_smithy_runtime_api::client::interceptors::context::Output::erase(output))
        .map_err(|error| ::aws_smithy_runtime_api::client::interceptors::context::Error::erase(error))
        .map_err(::std::convert::Into::into)
}

pub fn parse_http_error_metadata(
    _response_status: u16,
    response_headers: &::http::HeaderMap,
    response_body: &[u8],
) -> Result<::aws_smithy_types::error::metadata::Builder, ::aws_smithy_json::deserialize::error::DeserializeError> {
    crate::json_errors::parse_error_metadata(response_body, response_headers)
}

pub(crate) mod shape_batch_get_findings;

pub(crate) mod shape_create_scan;

pub(crate) mod shape_create_upload_url;

pub(crate) mod shape_get_account_configuration;

pub(crate) mod shape_get_findings;

pub(crate) mod shape_get_metrics_summary;

pub(crate) mod shape_get_scan;

pub(crate) mod shape_list_findings_metrics;

pub(crate) mod shape_list_scans;

pub(crate) mod shape_list_tags_for_resource;

pub(crate) mod shape_tag_resource;

pub(crate) mod shape_untag_resource;

pub(crate) mod shape_update_account_configuration;

pub(crate) fn or_empty_doc(data: &[u8]) -> &[u8] {
    if data.is_empty() {
        b"{}"
    } else {
        data
    }
}

pub(crate) mod shape_access_denied_exception;

pub(crate) mod shape_batch_get_findings_input;

pub(crate) mod shape_conflict_exception;

pub(crate) mod shape_create_scan_input;

pub(crate) mod shape_create_upload_url_input;

pub(crate) mod shape_internal_server_exception;

pub(crate) mod shape_resource_not_found_exception;

pub(crate) mod shape_tag_resource_input;

pub(crate) mod shape_throttling_exception;

pub(crate) mod shape_update_account_configuration_input;

pub(crate) mod shape_validation_exception;

pub(crate) mod shape_batch_get_findings_errors;

pub(crate) mod shape_encryption_config;

pub(crate) mod shape_finding_identifier;

pub(crate) mod shape_findings;

pub(crate) mod shape_findings_metric_list;

pub(crate) mod shape_metrics_summary;

pub(crate) mod shape_request_header_map;

pub(crate) mod shape_resource_id;

pub(crate) mod shape_scan_summaries;

pub(crate) mod shape_tag_map;

pub(crate) mod shape_validation_exception_field_list;

pub(crate) mod shape_account_findings_metric;

pub(crate) mod shape_batch_get_findings_error;

pub(crate) mod shape_categories_with_most_findings;

pub(crate) mod shape_finding;

pub(crate) mod shape_finding_metrics_value_per_severity;

pub(crate) mod shape_scan_summary;

pub(crate) mod shape_scans_with_most_open_critical_findings;

pub(crate) mod shape_scans_with_most_open_findings;

pub(crate) mod shape_validation_exception_field;

pub(crate) mod shape_category_with_finding_num;

pub(crate) mod shape_detector_tags;

pub(crate) mod shape_remediation;

pub(crate) mod shape_resource;

pub(crate) mod shape_scan_name_with_finding_num;

pub(crate) mod shape_vulnerability;

pub(crate) mod shape_file_path;

pub(crate) mod shape_recommendation;

pub(crate) mod shape_reference_urls;

pub(crate) mod shape_related_vulnerabilities;

pub(crate) mod shape_suggested_fixes;

pub(crate) mod shape_code_snippet;

pub(crate) mod shape_suggested_fix;

pub(crate) mod shape_code_line;
