// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about a resource, such as an Amazon S3 bucket or AWS Lambda function, that contains a finding.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Resource {
    /// <p>The identifier for the resource.</p>
    pub id: ::std::option::Option<::std::string::String>,
    /// <p>The identifier for a section of the resource, such as an AWS Lambda layer.</p>
    pub sub_resource_id: ::std::option::Option<::std::string::String>,
}
impl Resource {
    /// <p>The identifier for the resource.</p>
    pub fn id(&self) -> ::std::option::Option<&str> {
        self.id.as_deref()
    }
    /// <p>The identifier for a section of the resource, such as an AWS Lambda layer.</p>
    pub fn sub_resource_id(&self) -> ::std::option::Option<&str> {
        self.sub_resource_id.as_deref()
    }
}
impl Resource {
    /// Creates a new builder-style object to manufacture [`Resource`](crate::types::Resource).
    pub fn builder() -> crate::types::builders::ResourceBuilder {
        crate::types::builders::ResourceBuilder::default()
    }
}

/// A builder for [`Resource`](crate::types::Resource).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ResourceBuilder {
    pub(crate) id: ::std::option::Option<::std::string::String>,
    pub(crate) sub_resource_id: ::std::option::Option<::std::string::String>,
}
impl ResourceBuilder {
    /// <p>The identifier for the resource.</p>
    pub fn id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for the resource.</p>
    pub fn set_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.id = input;
        self
    }
    /// <p>The identifier for the resource.</p>
    pub fn get_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.id
    }
    /// <p>The identifier for a section of the resource, such as an AWS Lambda layer.</p>
    pub fn sub_resource_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.sub_resource_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier for a section of the resource, such as an AWS Lambda layer.</p>
    pub fn set_sub_resource_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.sub_resource_id = input;
        self
    }
    /// <p>The identifier for a section of the resource, such as an AWS Lambda layer.</p>
    pub fn get_sub_resource_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.sub_resource_id
    }
    /// Consumes the builder and constructs a [`Resource`](crate::types::Resource).
    pub fn build(self) -> crate::types::Resource {
        crate::types::Resource {
            id: self.id,
            sub_resource_id: self.sub_resource_id,
        }
    }
}
