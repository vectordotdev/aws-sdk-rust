// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Contains information on when this exploit was observed.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct ExploitObserved {
    /// <p>The date an time when the exploit was last seen.</p>
    pub last_seen: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The date an time when the exploit was first seen.</p>
    pub first_seen: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ExploitObserved {
    /// <p>The date an time when the exploit was last seen.</p>
    pub fn last_seen(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_seen.as_ref()
    }
    /// <p>The date an time when the exploit was first seen.</p>
    pub fn first_seen(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.first_seen.as_ref()
    }
}
impl ExploitObserved {
    /// Creates a new builder-style object to manufacture [`ExploitObserved`](crate::types::ExploitObserved).
    pub fn builder() -> crate::types::builders::ExploitObservedBuilder {
        crate::types::builders::ExploitObservedBuilder::default()
    }
}

/// A builder for [`ExploitObserved`](crate::types::ExploitObserved).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct ExploitObservedBuilder {
    pub(crate) last_seen: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) first_seen: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl ExploitObservedBuilder {
    /// <p>The date an time when the exploit was last seen.</p>
    pub fn last_seen(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_seen = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date an time when the exploit was last seen.</p>
    pub fn set_last_seen(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_seen = input;
        self
    }
    /// <p>The date an time when the exploit was last seen.</p>
    pub fn get_last_seen(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_seen
    }
    /// <p>The date an time when the exploit was first seen.</p>
    pub fn first_seen(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.first_seen = ::std::option::Option::Some(input);
        self
    }
    /// <p>The date an time when the exploit was first seen.</p>
    pub fn set_first_seen(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.first_seen = input;
        self
    }
    /// <p>The date an time when the exploit was first seen.</p>
    pub fn get_first_seen(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.first_seen
    }
    /// Consumes the builder and constructs a [`ExploitObserved`](crate::types::ExploitObserved).
    pub fn build(self) -> crate::types::ExploitObserved {
        crate::types::ExploitObserved {
            last_seen: self.last_seen,
            first_seen: self.first_seen,
        }
    }
}
