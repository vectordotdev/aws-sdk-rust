// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details about the Exploit Prediction Scoring System (EPSS) score for a finding.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct EpssDetails {
    /// <p>The EPSS score.</p>
    pub score: f64,
}
impl EpssDetails {
    /// <p>The EPSS score.</p>
    pub fn score(&self) -> f64 {
        self.score
    }
}
impl EpssDetails {
    /// Creates a new builder-style object to manufacture [`EpssDetails`](crate::types::EpssDetails).
    pub fn builder() -> crate::types::builders::EpssDetailsBuilder {
        crate::types::builders::EpssDetailsBuilder::default()
    }
}

/// A builder for [`EpssDetails`](crate::types::EpssDetails).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct EpssDetailsBuilder {
    pub(crate) score: ::std::option::Option<f64>,
}
impl EpssDetailsBuilder {
    /// <p>The EPSS score.</p>
    pub fn score(mut self, input: f64) -> Self {
        self.score = ::std::option::Option::Some(input);
        self
    }
    /// <p>The EPSS score.</p>
    pub fn set_score(mut self, input: ::std::option::Option<f64>) -> Self {
        self.score = input;
        self
    }
    /// <p>The EPSS score.</p>
    pub fn get_score(&self) -> &::std::option::Option<f64> {
        &self.score
    }
    /// Consumes the builder and constructs a [`EpssDetails`](crate::types::EpssDetails).
    pub fn build(self) -> crate::types::EpssDetails {
        crate::types::EpssDetails {
            score: self.score.unwrap_or_default(),
        }
    }
}
