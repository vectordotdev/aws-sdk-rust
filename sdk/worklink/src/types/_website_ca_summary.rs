// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The summary of the certificate authority (CA).</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct WebsiteCaSummary {
    /// <p>A unique identifier for the CA.</p>
    pub website_ca_id: ::std::option::Option<::std::string::String>,
    /// <p>The time when the CA was added.</p>
    pub created_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    /// <p>The name to display.</p>
    pub display_name: ::std::option::Option<::std::string::String>,
}
impl WebsiteCaSummary {
    /// <p>A unique identifier for the CA.</p>
    pub fn website_ca_id(&self) -> ::std::option::Option<&str> {
        self.website_ca_id.as_deref()
    }
    /// <p>The time when the CA was added.</p>
    pub fn created_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.created_time.as_ref()
    }
    /// <p>The name to display.</p>
    pub fn display_name(&self) -> ::std::option::Option<&str> {
        self.display_name.as_deref()
    }
}
impl WebsiteCaSummary {
    /// Creates a new builder-style object to manufacture [`WebsiteCaSummary`](crate::types::WebsiteCaSummary).
    pub fn builder() -> crate::types::builders::WebsiteCaSummaryBuilder {
        crate::types::builders::WebsiteCaSummaryBuilder::default()
    }
}

/// A builder for [`WebsiteCaSummary`](crate::types::WebsiteCaSummary).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct WebsiteCaSummaryBuilder {
    pub(crate) website_ca_id: ::std::option::Option<::std::string::String>,
    pub(crate) created_time: ::std::option::Option<::aws_smithy_types::DateTime>,
    pub(crate) display_name: ::std::option::Option<::std::string::String>,
}
impl WebsiteCaSummaryBuilder {
    /// <p>A unique identifier for the CA.</p>
    pub fn website_ca_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.website_ca_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>A unique identifier for the CA.</p>
    pub fn set_website_ca_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.website_ca_id = input;
        self
    }
    /// <p>A unique identifier for the CA.</p>
    pub fn get_website_ca_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.website_ca_id
    }
    /// <p>The time when the CA was added.</p>
    pub fn created_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.created_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>The time when the CA was added.</p>
    pub fn set_created_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.created_time = input;
        self
    }
    /// <p>The time when the CA was added.</p>
    pub fn get_created_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.created_time
    }
    /// <p>The name to display.</p>
    pub fn display_name(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.display_name = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The name to display.</p>
    pub fn set_display_name(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.display_name = input;
        self
    }
    /// <p>The name to display.</p>
    pub fn get_display_name(&self) -> &::std::option::Option<::std::string::String> {
        &self.display_name
    }
    /// Consumes the builder and constructs a [`WebsiteCaSummary`](crate::types::WebsiteCaSummary).
    pub fn build(self) -> crate::types::WebsiteCaSummary {
        crate::types::WebsiteCaSummary {
            website_ca_id: self.website_ca_id,
            created_time: self.created_time,
            display_name: self.display_name,
        }
    }
}
