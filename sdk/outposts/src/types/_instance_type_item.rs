// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Information about an instance type.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct InstanceTypeItem {
    /// <p>The instance type.</p>
    pub instance_type: ::std::option::Option<::std::string::String>,
}
impl InstanceTypeItem {
    /// <p>The instance type.</p>
    pub fn instance_type(&self) -> ::std::option::Option<&str> {
        self.instance_type.as_deref()
    }
}
impl InstanceTypeItem {
    /// Creates a new builder-style object to manufacture [`InstanceTypeItem`](crate::types::InstanceTypeItem).
    pub fn builder() -> crate::types::builders::InstanceTypeItemBuilder {
        crate::types::builders::InstanceTypeItemBuilder::default()
    }
}

/// A builder for [`InstanceTypeItem`](crate::types::InstanceTypeItem).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct InstanceTypeItemBuilder {
    pub(crate) instance_type: ::std::option::Option<::std::string::String>,
}
impl InstanceTypeItemBuilder {
    /// <p>The instance type.</p>
    pub fn instance_type(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.instance_type = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The instance type.</p>
    pub fn set_instance_type(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.instance_type = input;
        self
    }
    /// <p>The instance type.</p>
    pub fn get_instance_type(&self) -> &::std::option::Option<::std::string::String> {
        &self.instance_type
    }
    /// Consumes the builder and constructs a [`InstanceTypeItem`](crate::types::InstanceTypeItem).
    pub fn build(self) -> crate::types::InstanceTypeItem {
        crate::types::InstanceTypeItem {
            instance_type: self.instance_type,
        }
    }
}
