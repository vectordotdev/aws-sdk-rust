// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Lifecycle management operation details on the network instance.</p>
/// <p>Lifecycle management operations are deploy, update, or delete operations.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct LcmOperationInfo {
    /// <p>The identifier of the network operation.</p>
    pub ns_lcm_op_occ_id: ::std::option::Option<::std::string::String>,
}
impl LcmOperationInfo {
    /// <p>The identifier of the network operation.</p>
    pub fn ns_lcm_op_occ_id(&self) -> ::std::option::Option<&str> {
        self.ns_lcm_op_occ_id.as_deref()
    }
}
impl LcmOperationInfo {
    /// Creates a new builder-style object to manufacture [`LcmOperationInfo`](crate::types::LcmOperationInfo).
    pub fn builder() -> crate::types::builders::LcmOperationInfoBuilder {
        crate::types::builders::LcmOperationInfoBuilder::default()
    }
}

/// A builder for [`LcmOperationInfo`](crate::types::LcmOperationInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct LcmOperationInfoBuilder {
    pub(crate) ns_lcm_op_occ_id: ::std::option::Option<::std::string::String>,
}
impl LcmOperationInfoBuilder {
    /// <p>The identifier of the network operation.</p>
    pub fn ns_lcm_op_occ_id(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.ns_lcm_op_occ_id = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The identifier of the network operation.</p>
    pub fn set_ns_lcm_op_occ_id(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.ns_lcm_op_occ_id = input;
        self
    }
    /// <p>The identifier of the network operation.</p>
    pub fn get_ns_lcm_op_occ_id(&self) -> &::std::option::Option<::std::string::String> {
        &self.ns_lcm_op_occ_id
    }
    /// Consumes the builder and constructs a [`LcmOperationInfo`](crate::types::LcmOperationInfo).
    pub fn build(self) -> crate::types::LcmOperationInfo {
        crate::types::LcmOperationInfo {
            ns_lcm_op_occ_id: self.ns_lcm_op_occ_id,
        }
    }
}
