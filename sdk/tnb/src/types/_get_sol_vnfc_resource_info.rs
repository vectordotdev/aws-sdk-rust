// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>Details of resource associated with a network function.</p>
/// <p>A network instance is a single network created in Amazon Web Services TNB that can be deployed and on which life-cycle operations (like terminate, update, and delete) can be performed.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct GetSolVnfcResourceInfo {
    /// <p>The metadata of the network function compute.</p>
    pub metadata: ::std::option::Option<crate::types::GetSolVnfcResourceInfoMetadata>,
}
impl GetSolVnfcResourceInfo {
    /// <p>The metadata of the network function compute.</p>
    pub fn metadata(&self) -> ::std::option::Option<&crate::types::GetSolVnfcResourceInfoMetadata> {
        self.metadata.as_ref()
    }
}
impl GetSolVnfcResourceInfo {
    /// Creates a new builder-style object to manufacture [`GetSolVnfcResourceInfo`](crate::types::GetSolVnfcResourceInfo).
    pub fn builder() -> crate::types::builders::GetSolVnfcResourceInfoBuilder {
        crate::types::builders::GetSolVnfcResourceInfoBuilder::default()
    }
}

/// A builder for [`GetSolVnfcResourceInfo`](crate::types::GetSolVnfcResourceInfo).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct GetSolVnfcResourceInfoBuilder {
    pub(crate) metadata: ::std::option::Option<crate::types::GetSolVnfcResourceInfoMetadata>,
}
impl GetSolVnfcResourceInfoBuilder {
    /// <p>The metadata of the network function compute.</p>
    pub fn metadata(mut self, input: crate::types::GetSolVnfcResourceInfoMetadata) -> Self {
        self.metadata = ::std::option::Option::Some(input);
        self
    }
    /// <p>The metadata of the network function compute.</p>
    pub fn set_metadata(mut self, input: ::std::option::Option<crate::types::GetSolVnfcResourceInfoMetadata>) -> Self {
        self.metadata = input;
        self
    }
    /// <p>The metadata of the network function compute.</p>
    pub fn get_metadata(&self) -> &::std::option::Option<crate::types::GetSolVnfcResourceInfoMetadata> {
        &self.metadata
    }
    /// Consumes the builder and constructs a [`GetSolVnfcResourceInfo`](crate::types::GetSolVnfcResourceInfo).
    pub fn build(self) -> crate::types::GetSolVnfcResourceInfo {
        crate::types::GetSolVnfcResourceInfo { metadata: self.metadata }
    }
}
