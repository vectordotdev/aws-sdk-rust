// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
impl super::Client {
    /// Constructs a fluent builder for the [`GetSolNetworkPackageContent`](crate::operation::get_sol_network_package_content::builders::GetSolNetworkPackageContentFluentBuilder) operation.
    ///
    /// - The fluent builder is configurable:
    ///   - [`nsd_info_id(impl ::std::convert::Into<String>)`](crate::operation::get_sol_network_package_content::builders::GetSolNetworkPackageContentFluentBuilder::nsd_info_id) / [`set_nsd_info_id(Option<String>)`](crate::operation::get_sol_network_package_content::builders::GetSolNetworkPackageContentFluentBuilder::set_nsd_info_id): <p>ID of the network service descriptor in the network package.</p>
    ///   - [`accept(PackageContentType)`](crate::operation::get_sol_network_package_content::builders::GetSolNetworkPackageContentFluentBuilder::accept) / [`set_accept(Option<PackageContentType>)`](crate::operation::get_sol_network_package_content::builders::GetSolNetworkPackageContentFluentBuilder::set_accept): <p>The format of the package you want to download from the network package.</p>
    /// - On success, responds with [`GetSolNetworkPackageContentOutput`](crate::operation::get_sol_network_package_content::GetSolNetworkPackageContentOutput) with field(s):
    ///   - [`content_type(Option<PackageContentType>)`](crate::operation::get_sol_network_package_content::GetSolNetworkPackageContentOutput::content_type): <p>Indicates the media type of the resource.</p>
    ///   - [`nsd_content(Option<Blob>)`](crate::operation::get_sol_network_package_content::GetSolNetworkPackageContentOutput::nsd_content): <p>Content of the network service descriptor in the network package.</p>
    /// - On failure, responds with [`SdkError<GetSolNetworkPackageContentError>`](crate::operation::get_sol_network_package_content::GetSolNetworkPackageContentError)
    pub fn get_sol_network_package_content(
        &self,
    ) -> crate::operation::get_sol_network_package_content::builders::GetSolNetworkPackageContentFluentBuilder {
        crate::operation::get_sol_network_package_content::builders::GetSolNetworkPackageContentFluentBuilder::new(self.handle.clone())
    }
}
