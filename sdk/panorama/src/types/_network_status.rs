// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The network status of a device.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct NetworkStatus {
    /// <p>The status of Ethernet port 0.</p>
    pub ethernet0_status: ::std::option::Option<crate::types::EthernetStatus>,
    /// <p>The status of Ethernet port 1.</p>
    pub ethernet1_status: ::std::option::Option<crate::types::EthernetStatus>,
    /// <p>Details about a network time protocol (NTP) server connection.</p>
    pub ntp_status: ::std::option::Option<crate::types::NtpStatus>,
    /// <p>When the network status changed.</p>
    pub last_updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl NetworkStatus {
    /// <p>The status of Ethernet port 0.</p>
    pub fn ethernet0_status(&self) -> ::std::option::Option<&crate::types::EthernetStatus> {
        self.ethernet0_status.as_ref()
    }
    /// <p>The status of Ethernet port 1.</p>
    pub fn ethernet1_status(&self) -> ::std::option::Option<&crate::types::EthernetStatus> {
        self.ethernet1_status.as_ref()
    }
    /// <p>Details about a network time protocol (NTP) server connection.</p>
    pub fn ntp_status(&self) -> ::std::option::Option<&crate::types::NtpStatus> {
        self.ntp_status.as_ref()
    }
    /// <p>When the network status changed.</p>
    pub fn last_updated_time(&self) -> ::std::option::Option<&::aws_smithy_types::DateTime> {
        self.last_updated_time.as_ref()
    }
}
impl NetworkStatus {
    /// Creates a new builder-style object to manufacture [`NetworkStatus`](crate::types::NetworkStatus).
    pub fn builder() -> crate::types::builders::NetworkStatusBuilder {
        crate::types::builders::NetworkStatusBuilder::default()
    }
}

/// A builder for [`NetworkStatus`](crate::types::NetworkStatus).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct NetworkStatusBuilder {
    pub(crate) ethernet0_status: ::std::option::Option<crate::types::EthernetStatus>,
    pub(crate) ethernet1_status: ::std::option::Option<crate::types::EthernetStatus>,
    pub(crate) ntp_status: ::std::option::Option<crate::types::NtpStatus>,
    pub(crate) last_updated_time: ::std::option::Option<::aws_smithy_types::DateTime>,
}
impl NetworkStatusBuilder {
    /// <p>The status of Ethernet port 0.</p>
    pub fn ethernet0_status(mut self, input: crate::types::EthernetStatus) -> Self {
        self.ethernet0_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of Ethernet port 0.</p>
    pub fn set_ethernet0_status(mut self, input: ::std::option::Option<crate::types::EthernetStatus>) -> Self {
        self.ethernet0_status = input;
        self
    }
    /// <p>The status of Ethernet port 0.</p>
    pub fn get_ethernet0_status(&self) -> &::std::option::Option<crate::types::EthernetStatus> {
        &self.ethernet0_status
    }
    /// <p>The status of Ethernet port 1.</p>
    pub fn ethernet1_status(mut self, input: crate::types::EthernetStatus) -> Self {
        self.ethernet1_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>The status of Ethernet port 1.</p>
    pub fn set_ethernet1_status(mut self, input: ::std::option::Option<crate::types::EthernetStatus>) -> Self {
        self.ethernet1_status = input;
        self
    }
    /// <p>The status of Ethernet port 1.</p>
    pub fn get_ethernet1_status(&self) -> &::std::option::Option<crate::types::EthernetStatus> {
        &self.ethernet1_status
    }
    /// <p>Details about a network time protocol (NTP) server connection.</p>
    pub fn ntp_status(mut self, input: crate::types::NtpStatus) -> Self {
        self.ntp_status = ::std::option::Option::Some(input);
        self
    }
    /// <p>Details about a network time protocol (NTP) server connection.</p>
    pub fn set_ntp_status(mut self, input: ::std::option::Option<crate::types::NtpStatus>) -> Self {
        self.ntp_status = input;
        self
    }
    /// <p>Details about a network time protocol (NTP) server connection.</p>
    pub fn get_ntp_status(&self) -> &::std::option::Option<crate::types::NtpStatus> {
        &self.ntp_status
    }
    /// <p>When the network status changed.</p>
    pub fn last_updated_time(mut self, input: ::aws_smithy_types::DateTime) -> Self {
        self.last_updated_time = ::std::option::Option::Some(input);
        self
    }
    /// <p>When the network status changed.</p>
    pub fn set_last_updated_time(mut self, input: ::std::option::Option<::aws_smithy_types::DateTime>) -> Self {
        self.last_updated_time = input;
        self
    }
    /// <p>When the network status changed.</p>
    pub fn get_last_updated_time(&self) -> &::std::option::Option<::aws_smithy_types::DateTime> {
        &self.last_updated_time
    }
    /// Consumes the builder and constructs a [`NetworkStatus`](crate::types::NetworkStatus).
    pub fn build(self) -> crate::types::NetworkStatus {
        crate::types::NetworkStatus {
            ethernet0_status: self.ethernet0_status,
            ethernet1_status: self.ethernet1_status,
            ntp_status: self.ntp_status,
            last_updated_time: self.last_updated_time,
        }
    }
}
