// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.

/// <p>The target of a message, a sender, a user, or a bot. Only the target and the sender can view targeted messages. Only users who can see targeted messages can take actions on them. However, administrators can delete targeted messages that they canâ€™t see.</p>
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::fmt::Debug)]
pub struct Target {
    /// <p>The ARN of the target channel member.</p>
    pub member_arn: ::std::option::Option<::std::string::String>,
}
impl Target {
    /// <p>The ARN of the target channel member.</p>
    pub fn member_arn(&self) -> ::std::option::Option<&str> {
        self.member_arn.as_deref()
    }
}
impl Target {
    /// Creates a new builder-style object to manufacture [`Target`](crate::types::Target).
    pub fn builder() -> crate::types::builders::TargetBuilder {
        crate::types::builders::TargetBuilder::default()
    }
}

/// A builder for [`Target`](crate::types::Target).
#[non_exhaustive]
#[derive(::std::clone::Clone, ::std::cmp::PartialEq, ::std::default::Default, ::std::fmt::Debug)]
pub struct TargetBuilder {
    pub(crate) member_arn: ::std::option::Option<::std::string::String>,
}
impl TargetBuilder {
    /// <p>The ARN of the target channel member.</p>
    pub fn member_arn(mut self, input: impl ::std::convert::Into<::std::string::String>) -> Self {
        self.member_arn = ::std::option::Option::Some(input.into());
        self
    }
    /// <p>The ARN of the target channel member.</p>
    pub fn set_member_arn(mut self, input: ::std::option::Option<::std::string::String>) -> Self {
        self.member_arn = input;
        self
    }
    /// <p>The ARN of the target channel member.</p>
    pub fn get_member_arn(&self) -> &::std::option::Option<::std::string::String> {
        &self.member_arn
    }
    /// Consumes the builder and constructs a [`Target`](crate::types::Target).
    pub fn build(self) -> crate::types::Target {
        crate::types::Target { member_arn: self.member_arn }
    }
}
